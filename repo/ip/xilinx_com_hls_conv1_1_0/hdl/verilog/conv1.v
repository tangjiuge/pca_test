// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv1,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.164000,HLS_SYN_LAT=892274,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=6,HLS_SYN_FF=4556,HLS_SYN_LUT=3641,HLS_VERSION=2018_3}" *)

module conv1 (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_pp0_stage0 = 18'd256;
parameter    ap_ST_fsm_state12 = 18'd512;
parameter    ap_ST_fsm_pp1_stage0 = 18'd1024;
parameter    ap_ST_fsm_pp1_stage1 = 18'd2048;
parameter    ap_ST_fsm_pp1_stage2 = 18'd4096;
parameter    ap_ST_fsm_pp1_stage3 = 18'd8192;
parameter    ap_ST_fsm_pp1_stage4 = 18'd16384;
parameter    ap_ST_fsm_pp1_stage5 = 18'd32768;
parameter    ap_ST_fsm_pp1_stage6 = 18'd65536;
parameter    ap_ST_fsm_state138 = 18'd131072;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] feature_src_0;
wire   [31:0] weight_src_0_0;
wire   [31:0] weight_src_1_0;
wire   [31:0] weight_src_2_0;
wire   [31:0] weight_src_3_0;
wire   [31:0] weight_src_4_0;
wire   [31:0] weight_src_5_0;
wire   [31:0] bias;
wire   [31:0] feature_dst_0;
wire   [31:0] feature_dst_1;
wire   [31:0] feature_dst_2;
wire   [31:0] feature_dst_3;
wire   [31:0] feature_dst_4;
wire   [31:0] feature_dst_5;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond4_reg_1308;
wire    ap_CS_fsm_pp1_stage2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage2;
reg   [0:0] exitcond_flatten2_reg_1337;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
reg    gmem_blk_n_AW;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter2_reg;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter3_reg;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
reg    ap_enable_reg_pp1_iter4;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter4_reg;
reg    ap_enable_reg_pp1_iter5;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter5_reg;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter6_reg;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter7_reg;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
reg    ap_enable_reg_pp1_iter8;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter8_reg;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter9_reg;
reg    ap_enable_reg_pp1_iter10;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter10_reg;
reg    ap_enable_reg_pp1_iter11;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter11_reg;
reg    ap_enable_reg_pp1_iter12;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter12_reg;
reg    ap_enable_reg_pp1_iter13;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter13_reg;
reg    ap_enable_reg_pp1_iter14;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter14_reg;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter15_reg;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter16_reg;
reg    ap_enable_reg_pp1_iter17;
reg   [0:0] exitcond_flatten2_reg_1337_pp1_iter17_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [1:0] indvar_reg_509;
reg   [16:0] indvar_flatten1_reg_520;
reg   [1:0] kr_reg_531;
reg   [15:0] indvar_flatten2_reg_543;
reg   [1:0] kc_reg_555;
reg   [13:0] indvar_flatten_reg_567;
reg   [7:0] r_reg_579;
reg   [7:0] c_reg_591;
wire   [31:0] grp_fu_603_p2;
reg   [31:0] reg_611;
wire    ap_block_state15_pp1_stage2_iter0;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_block_state15_io;
reg    ap_block_state22_pp1_stage2_iter1;
wire    ap_block_state29_pp1_stage2_iter2;
reg    ap_sig_ioackin_gmem_AWREADY;
reg    ap_block_state29_io;
wire    ap_block_state36_pp1_stage2_iter3;
wire    ap_block_state43_pp1_stage2_iter4;
wire    ap_block_state50_pp1_stage2_iter5;
reg    ap_sig_ioackin_gmem_WREADY;
reg    ap_block_state50_io;
wire    ap_block_state57_pp1_stage2_iter6;
wire    ap_block_state64_pp1_stage2_iter7;
wire    ap_block_state71_pp1_stage2_iter8;
wire    ap_block_state78_pp1_stage2_iter9;
wire    ap_block_state85_pp1_stage2_iter10;
reg    ap_block_state92_pp1_stage2_iter11;
wire    ap_block_state99_pp1_stage2_iter12;
wire    ap_block_state106_pp1_stage2_iter13;
wire    ap_block_state113_pp1_stage2_iter14;
wire    ap_block_state120_pp1_stage2_iter15;
wire    ap_block_state127_pp1_stage2_iter16;
wire    ap_block_state134_pp1_stage2_iter17;
reg    ap_block_pp1_stage2_11001;
wire    ap_block_state14_pp1_stage1_iter0;
wire    ap_block_state21_pp1_stage1_iter1;
wire    ap_block_state28_pp1_stage1_iter2;
reg    ap_block_state35_pp1_stage1_iter3;
wire    ap_block_state42_pp1_stage1_iter4;
wire    ap_block_state49_pp1_stage1_iter5;
reg    ap_block_state49_io;
wire    ap_block_state56_pp1_stage1_iter6;
reg    ap_block_state56_io;
reg    ap_block_state63_pp1_stage1_iter7;
wire    ap_block_state70_pp1_stage1_iter8;
wire    ap_block_state77_pp1_stage1_iter9;
wire    ap_block_state84_pp1_stage1_iter10;
wire    ap_block_state91_pp1_stage1_iter11;
wire    ap_block_state98_pp1_stage1_iter12;
wire    ap_block_state105_pp1_stage1_iter13;
wire    ap_block_state112_pp1_stage1_iter14;
wire    ap_block_state119_pp1_stage1_iter15;
wire    ap_block_state126_pp1_stage1_iter16;
wire    ap_block_state133_pp1_stage1_iter17;
reg    ap_block_pp1_stage1_11001;
wire    ap_block_state18_pp1_stage5_iter0;
wire    ap_block_state25_pp1_stage5_iter1;
wire    ap_block_state32_pp1_stage5_iter2;
wire    ap_block_state39_pp1_stage5_iter3;
wire    ap_block_state46_pp1_stage5_iter4;
wire    ap_block_state53_pp1_stage5_iter5;
wire    ap_block_state60_pp1_stage5_iter6;
wire    ap_block_state67_pp1_stage5_iter7;
reg    ap_block_state67_io;
wire    ap_block_state74_pp1_stage5_iter8;
reg    ap_block_state74_io;
reg    ap_block_state81_pp1_stage5_iter9;
wire    ap_block_state88_pp1_stage5_iter10;
wire    ap_block_state95_pp1_stage5_iter11;
wire    ap_block_state102_pp1_stage5_iter12;
wire    ap_block_state109_pp1_stage5_iter13;
reg    ap_block_state109_io;
wire    ap_block_state116_pp1_stage5_iter14;
wire    ap_block_state123_pp1_stage5_iter15;
wire    ap_block_state130_pp1_stage5_iter16;
reg    ap_block_state137_pp1_stage5_iter17;
reg    ap_block_pp1_stage5_11001;
wire    ap_block_state16_pp1_stage3_iter0;
reg    ap_block_state16_io;
reg    ap_block_state23_pp1_stage3_iter1;
wire    ap_block_state30_pp1_stage3_iter2;
reg    ap_block_state30_io;
wire    ap_block_state37_pp1_stage3_iter3;
wire    ap_block_state44_pp1_stage3_iter4;
wire    ap_block_state51_pp1_stage3_iter5;
wire    ap_block_state58_pp1_stage3_iter6;
wire    ap_block_state65_pp1_stage3_iter7;
wire    ap_block_state72_pp1_stage3_iter8;
wire    ap_block_state79_pp1_stage3_iter9;
wire    ap_block_state86_pp1_stage3_iter10;
reg    ap_block_state86_io;
wire    ap_block_state93_pp1_stage3_iter11;
wire    ap_block_state100_pp1_stage3_iter12;
wire    ap_block_state107_pp1_stage3_iter13;
reg    ap_block_state114_pp1_stage3_iter14;
wire    ap_block_state121_pp1_stage3_iter15;
wire    ap_block_state128_pp1_stage3_iter16;
wire    ap_block_state135_pp1_stage3_iter17;
reg    ap_block_pp1_stage3_11001;
wire    ap_block_state17_pp1_stage4_iter0;
wire    ap_block_state24_pp1_stage4_iter1;
wire    ap_block_state31_pp1_stage4_iter2;
wire    ap_block_state38_pp1_stage4_iter3;
reg    ap_block_state38_io;
reg    ap_block_state45_pp1_stage4_iter4;
wire    ap_block_state52_pp1_stage4_iter5;
wire    ap_block_state59_pp1_stage4_iter6;
wire    ap_block_state66_pp1_stage4_iter7;
reg    ap_block_state73_pp1_stage4_iter8;
wire    ap_block_state80_pp1_stage4_iter9;
wire    ap_block_state87_pp1_stage4_iter10;
reg    ap_block_state87_io;
wire    ap_block_state94_pp1_stage4_iter11;
wire    ap_block_state101_pp1_stage4_iter12;
wire    ap_block_state108_pp1_stage4_iter13;
reg    ap_block_state108_io;
wire    ap_block_state115_pp1_stage4_iter14;
wire    ap_block_state122_pp1_stage4_iter15;
wire    ap_block_state129_pp1_stage4_iter16;
wire    ap_block_state136_pp1_stage4_iter17;
reg    ap_block_pp1_stage4_11001;
wire    ap_block_state19_pp1_stage6_iter0;
wire    ap_block_state26_pp1_stage6_iter1;
wire    ap_block_state33_pp1_stage6_iter2;
wire    ap_block_state40_pp1_stage6_iter3;
wire    ap_block_state47_pp1_stage6_iter4;
wire    ap_block_state54_pp1_stage6_iter5;
wire    ap_block_state61_pp1_stage6_iter6;
wire    ap_block_state68_pp1_stage6_iter7;
reg    ap_block_state68_io;
wire    ap_block_state75_pp1_stage6_iter8;
wire    ap_block_state82_pp1_stage6_iter9;
wire    ap_block_state89_pp1_stage6_iter10;
wire    ap_block_state96_pp1_stage6_iter11;
reg    ap_block_state96_io;
reg    ap_block_state103_pp1_stage6_iter12;
wire    ap_block_state110_pp1_stage6_iter13;
wire    ap_block_state117_pp1_stage6_iter14;
wire    ap_block_state124_pp1_stage6_iter15;
wire    ap_block_state131_pp1_stage6_iter16;
reg    ap_block_state131_io;
reg    ap_block_pp1_stage6_11001;
reg   [29:0] tmp_reg_1227;
reg   [29:0] tmp_1_reg_1232;
reg   [29:0] tmp_2_reg_1237;
reg   [29:0] tmp_3_reg_1242;
reg   [29:0] tmp_4_reg_1247;
reg   [29:0] tmp_5_reg_1252;
reg   [29:0] weight_src_0_03_reg_1257;
reg   [29:0] feature_src_01_reg_1262;
wire   [30:0] tmp_cast_fu_711_p1;
reg   [30:0] tmp_cast_reg_1273;
wire    ap_CS_fsm_state8;
wire   [30:0] tmp_1_cast_fu_714_p1;
reg   [30:0] tmp_1_cast_reg_1278;
wire   [30:0] tmp_2_cast_fu_717_p1;
reg   [30:0] tmp_2_cast_reg_1283;
wire   [30:0] tmp_4_cast_fu_720_p1;
reg   [30:0] tmp_4_cast_reg_1288;
wire   [30:0] tmp_5_cast_fu_723_p1;
reg   [30:0] tmp_5_cast_reg_1293;
wire   [30:0] tmp_16_cast_fu_726_p1;
reg   [30:0] tmp_16_cast_reg_1298;
wire   [63:0] tmp_6_fu_729_p1;
reg   [63:0] tmp_6_reg_1303;
wire   [0:0] exitcond4_fu_732_p2;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond4_reg_1308_pp0_iter1_reg;
wire   [1:0] indvar_next_fu_738_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_7_fu_744_p1;
reg   [0:0] tmp_7_reg_1317;
reg   [0:0] tmp_7_reg_1317_pp0_iter1_reg;
reg   [31:0] gmem_addr_read_reg_1322;
wire   [5:0] tmp_11_fu_786_p2;
reg   [5:0] tmp_11_reg_1327;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state20_pp1_stage0_iter1;
wire    ap_block_state27_pp1_stage0_iter2;
wire    ap_block_state34_pp1_stage0_iter3;
wire    ap_block_state41_pp1_stage0_iter4;
wire    ap_block_state48_pp1_stage0_iter5;
reg    ap_block_state55_pp1_stage0_iter6;
wire    ap_block_state62_pp1_stage0_iter7;
wire    ap_block_state69_pp1_stage0_iter8;
wire    ap_block_state76_pp1_stage0_iter9;
wire    ap_block_state83_pp1_stage0_iter10;
wire    ap_block_state90_pp1_stage0_iter11;
wire    ap_block_state97_pp1_stage0_iter12;
wire    ap_block_state104_pp1_stage0_iter13;
wire    ap_block_state111_pp1_stage0_iter14;
wire    ap_block_state118_pp1_stage0_iter15;
reg    ap_block_state118_io;
reg    ap_block_state125_pp1_stage0_iter16;
wire    ap_block_state132_pp1_stage0_iter17;
reg    ap_block_state132_io;
reg    ap_block_pp1_stage0_11001;
reg   [5:0] tmp_11_reg_1327_pp1_iter1_reg;
wire   [7:0] tmp_8_fu_792_p2;
reg   [7:0] tmp_8_reg_1332;
wire   [0:0] exitcond_flatten2_fu_798_p2;
wire   [16:0] indvar_flatten_next2_fu_804_p2;
reg   [16:0] indvar_flatten_next2_reg_1341;
wire   [0:0] exitcond_flatten_fu_810_p2;
reg   [0:0] exitcond_flatten_reg_1346;
reg   [0:0] exitcond_flatten_reg_1346_pp1_iter1_reg;
wire   [0:0] exitcond_flatten_mid_fu_828_p2;
reg   [0:0] exitcond_flatten_mid_reg_1356;
reg   [0:0] exitcond_flatten_mid_reg_1356_pp1_iter1_reg;
wire   [0:0] tmp_19_fu_834_p2;
reg   [0:0] tmp_19_reg_1364;
wire   [1:0] kr_1_fu_840_p2;
reg   [1:0] kr_1_reg_1371;
wire   [1:0] kr_cast6_mid2_fu_853_p3;
reg   [1:0] kr_cast6_mid2_reg_1377;
wire   [1:0] kc_1_fu_885_p2;
reg   [1:0] kc_1_reg_1384;
wire   [7:0] r_mid_fu_891_p3;
reg   [7:0] r_mid_reg_1389;
wire   [1:0] kc_cast4_mid2_fu_905_p3;
reg   [1:0] kc_cast4_mid2_reg_1394;
wire   [0:0] tmp_12_mid1_fu_923_p2;
reg   [0:0] tmp_12_mid1_reg_1399;
wire   [7:0] r_1_fu_928_p2;
reg   [7:0] r_1_reg_1404;
wire   [7:0] c_mid2_fu_934_p3;
reg   [7:0] c_mid2_reg_1409;
reg   [31:0] gmem_addr_1_reg_1415;
wire   [13:0] indvar_flatten_op_fu_1013_p2;
reg   [13:0] indvar_flatten_op_reg_1421;
wire   [15:0] indvar_flatten23_op_fu_1019_p2;
reg   [15:0] indvar_flatten23_op_reg_1426;
wire   [7:0] tmp_11_mid2_fu_1025_p3;
reg   [7:0] tmp_11_mid2_reg_1431;
wire   [30:0] tmp_49_cast_fu_1037_p1;
reg   [30:0] tmp_49_cast_reg_1436;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter1_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter2_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter3_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter4_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter5_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter6_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter7_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter8_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter9_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter10_reg;
reg   [30:0] tmp_49_cast_reg_1436_pp1_iter11_reg;
wire   [30:0] feature_dst_018_sum_fu_1040_p2;
reg   [30:0] feature_dst_018_sum_reg_1445;
reg   [31:0] gmem_addr_2_reg_1450;
reg   [31:0] gmem_addr_2_reg_1450_pp1_iter1_reg;
wire   [13:0] indvar_flatten_next_fu_1055_p3;
reg   [13:0] indvar_flatten_next_reg_1457;
wire   [15:0] indvar_flatten_next1_fu_1061_p3;
reg   [15:0] indvar_flatten_next1_reg_1462;
wire   [7:0] c_1_fu_1067_p2;
reg   [7:0] c_1_reg_1467;
wire   [31:0] W_0_0_q0;
reg   [31:0] W_0_0_load_reg_1502;
wire   [31:0] W_1_0_q0;
reg   [31:0] W_1_0_load_reg_1507;
wire   [31:0] W_2_0_q0;
reg   [31:0] W_2_0_load_reg_1512;
wire   [31:0] W_3_0_q0;
reg   [31:0] W_3_0_load_reg_1517;
wire   [31:0] W_4_0_q0;
reg   [31:0] W_4_0_load_reg_1522;
wire   [31:0] W_5_0_q0;
reg   [31:0] W_5_0_load_reg_1527;
reg   [31:0] gmem_addr_1_read_reg_1532;
reg   [31:0] gmem_addr_2_read_reg_1537;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] tmp_22_reg_1542;
reg   [31:0] tmp_18_1_reg_1547;
reg   [31:0] tmp_18_1_reg_1547_pp1_iter2_reg;
reg   [31:0] tmp_18_1_reg_1547_pp1_iter3_reg;
reg   [31:0] tmp_18_2_reg_1552;
reg   [31:0] tmp_18_2_reg_1552_pp1_iter3_reg;
reg   [31:0] tmp_18_2_reg_1552_pp1_iter4_reg;
reg   [31:0] tmp_18_2_reg_1552_pp1_iter5_reg;
reg   [31:0] tmp_18_2_reg_1552_pp1_iter6_reg;
reg   [31:0] tmp_18_2_reg_1552_pp1_iter7_reg;
reg   [31:0] tmp_18_3_reg_1557;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter3_reg;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter4_reg;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter5_reg;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter6_reg;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter7_reg;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter8_reg;
reg   [31:0] tmp_18_3_reg_1557_pp1_iter9_reg;
reg   [31:0] tmp_18_4_reg_1562;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter3_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter4_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter5_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter6_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter7_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter8_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter9_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter10_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter11_reg;
reg   [31:0] tmp_18_4_reg_1562_pp1_iter12_reg;
reg   [31:0] tmp_18_5_reg_1567;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter3_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter4_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter5_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter6_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter7_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter8_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter9_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter10_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter11_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter12_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter13_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter14_reg;
reg   [31:0] tmp_18_5_reg_1567_pp1_iter15_reg;
wire   [30:0] feature_dst_120_sum_fu_1148_p2;
reg   [30:0] feature_dst_120_sum_reg_1572;
reg   [31:0] gmem_addr_3_reg_1577;
reg   [31:0] gmem_addr_3_reg_1577_pp1_iter4_reg;
reg   [31:0] gmem_addr_3_read_reg_1584;
wire   [30:0] feature_dst_222_sum_fu_1162_p2;
reg   [30:0] feature_dst_222_sum_reg_1589;
reg   [31:0] gmem_addr_4_reg_1594;
reg   [31:0] gmem_addr_4_reg_1594_pp1_iter7_reg;
reg   [31:0] gmem_addr_4_read_reg_1601;
wire   [30:0] feature_dst_324_sum_fu_1176_p2;
reg   [30:0] feature_dst_324_sum_reg_1606;
reg   [31:0] gmem_addr_5_reg_1611;
reg   [31:0] gmem_addr_5_reg_1611_pp1_iter9_reg;
reg   [31:0] gmem_addr_5_read_reg_1618;
wire   [30:0] feature_dst_426_sum_fu_1190_p2;
reg   [30:0] feature_dst_426_sum_reg_1623;
wire   [30:0] feature_dst_528_sum_fu_1194_p2;
reg   [30:0] feature_dst_528_sum_reg_1628;
reg   [30:0] feature_dst_528_sum_reg_1628_pp1_iter12_reg;
reg   [30:0] feature_dst_528_sum_reg_1628_pp1_iter13_reg;
reg   [30:0] feature_dst_528_sum_reg_1628_pp1_iter14_reg;
reg   [31:0] gmem_addr_6_reg_1633;
reg   [31:0] gmem_addr_6_reg_1633_pp1_iter12_reg;
reg   [31:0] gmem_addr_6_read_reg_1640;
reg   [31:0] gmem_addr_7_reg_1645;
reg   [31:0] gmem_addr_7_reg_1645_pp1_iter16_reg;
reg   [31:0] gmem_addr_7_read_reg_1652;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state12;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
reg    ap_block_pp1_stage6_subdone;
reg    ap_block_pp1_stage5_subdone;
reg   [3:0] W_0_0_address0;
reg    W_0_0_ce0;
reg    W_0_0_we0;
wire   [3:0] W_1_0_address0;
reg    W_1_0_ce0;
wire   [3:0] W_2_0_address0;
reg    W_2_0_ce0;
wire   [3:0] W_3_0_address0;
reg    W_3_0_ce0;
wire   [3:0] W_4_0_address0;
reg    W_4_0_ce0;
wire   [3:0] W_5_0_address0;
reg    W_5_0_ce0;
reg   [16:0] ap_phi_mux_indvar_flatten1_phi_fu_524_p4;
reg   [1:0] ap_phi_mux_kr_phi_fu_535_p4;
reg   [15:0] ap_phi_mux_indvar_flatten2_phi_fu_547_p4;
reg   [1:0] ap_phi_mux_kc_phi_fu_559_p4;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_571_p4;
reg   [7:0] ap_phi_mux_r_phi_fu_583_p4;
reg   [7:0] ap_phi_mux_c_phi_fu_595_p4;
wire   [63:0] tmp_30_cast_fu_748_p1;
wire   [63:0] W_0_0_load_mid2_fu_1135_p3;
wire   [63:0] tmp_s_fu_701_p1;
wire   [63:0] feature_src_02_sum_fu_1002_p2;
wire   [63:0] feature_dst_018_sum_1_fu_1045_p1;
wire   [63:0] feature_dst_120_sum_1_fu_1152_p1;
wire   [63:0] feature_dst_222_sum_1_fu_1166_p1;
wire   [63:0] feature_dst_324_sum_1_fu_1180_p1;
wire   [63:0] feature_dst_426_sum_1_fu_1198_p1;
wire   [63:0] feature_dst_528_sum_1_fu_1208_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_block_pp1_stage2_01001;
reg    ap_block_pp1_stage3_01001;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg    ap_block_pp1_stage4_01001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage5_01001;
reg    ap_block_pp1_stage6_01001;
reg    ap_block_pp1_stage0_01001;
reg   [31:0] grp_fu_603_p0;
reg   [31:0] grp_fu_603_p1;
reg   [31:0] grp_fu_607_p1;
wire   [3:0] tmp_9_fu_760_p3;
wire   [4:0] p_shl_cast_fu_768_p1;
wire   [4:0] tmp_7_cast_fu_756_p1;
wire   [4:0] tmp_10_fu_772_p2;
wire  signed [5:0] tmp_34_cast_fu_778_p1;
wire   [5:0] tmp_9_cast_fu_782_p1;
wire   [7:0] kr_cast6_fu_752_p1;
wire   [0:0] exitcond_flatten1_fu_822_p2;
wire   [0:0] not_exitcond_flatten_fu_816_p2;
wire   [7:0] tmp_7_mid1_cast1_fu_864_p1;
wire   [0:0] tmp_18_fu_874_p2;
wire   [1:0] kc_mid_fu_846_p3;
wire   [7:0] kr_cast6_mid2_cast_fu_860_p1;
wire   [7:0] tmp_10_mid_fu_868_p3;
wire   [0:0] tmp_12_mid_fu_880_p2;
wire   [7:0] c_mid_fu_898_p3;
wire   [7:0] tmp_10_mid4_fu_916_p3;
wire   [7:0] tmp_8_mid1_fu_942_p2;
wire   [7:0] tmp_10_mid2_fu_948_p3;
wire   [15:0] tmp_24_fu_956_p3;
wire   [11:0] tmp_25_fu_968_p3;
wire   [63:0] p_shl3_fu_964_p1;
wire   [63:0] p_shl4_fu_976_p1;
wire   [7:0] kc_cast4_mid2_cast_fu_912_p1;
wire   [7:0] tmp_13_fu_986_p2;
wire   [63:0] tmp_26_fu_980_p2;
wire   [63:0] tmp_14_fu_992_p1;
wire   [63:0] tmp_28_fu_996_p2;
wire   [15:0] grp_fu_1218_p3;
wire   [3:0] tmp_12_fu_1075_p3;
wire   [4:0] p_shl1_cast_fu_1082_p1;
wire   [4:0] tmp_7_mid1_cast_fu_1072_p1;
wire   [4:0] tmp_15_fu_1086_p2;
wire   [3:0] tmp_16_fu_1099_p3;
wire   [63:0] p_shl2_fu_1106_p1;
wire   [63:0] tmp_7_mid2_cast_fu_1096_p1;
wire  signed [5:0] tmp_37_cast_fu_1092_p1;
wire   [5:0] W_0_0_load_mid_fu_1116_p3;
wire   [63:0] tmp_17_fu_1110_p2;
wire   [63:0] tmp_9_mid1_fu_1126_p1;
wire   [63:0] tmp_21_fu_1129_p2;
wire  signed [63:0] W_0_0_load_mid_cast_fu_1122_p1;
wire   [7:0] grp_fu_1218_p0;
wire   [8:0] grp_fu_1218_p1;
wire   [7:0] grp_fu_1218_p2;
reg    grp_fu_603_ce;
reg    grp_fu_607_ce;
wire    ap_CS_fsm_state138;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [15:0] grp_fu_1218_p00;
wire   [15:0] grp_fu_1218_p20;
reg    ap_condition_1280;
reg    ap_condition_1291;
reg    ap_condition_1328;
reg    ap_condition_1363;
reg    ap_condition_1401;
reg    ap_condition_1432;
reg    ap_condition_1467;
reg    ap_condition_1303;
reg    ap_condition_1342;
reg    ap_condition_1377;
reg    ap_condition_1411;
reg    ap_condition_1442;
reg    ap_condition_1477;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

conv1_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
conv1_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd1065353216),
    .feature_src_0(feature_src_0),
    .weight_src_0_0(weight_src_0_0),
    .weight_src_1_0(weight_src_1_0),
    .weight_src_2_0(weight_src_2_0),
    .weight_src_3_0(weight_src_3_0),
    .weight_src_4_0(weight_src_4_0),
    .weight_src_5_0(weight_src_5_0),
    .bias(bias),
    .feature_dst_0(feature_dst_0),
    .feature_dst_1(feature_dst_1),
    .feature_dst_2(feature_dst_2),
    .feature_dst_3(feature_dst_3),
    .feature_dst_4(feature_dst_4),
    .feature_dst_5(feature_dst_5)
);

conv1_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
conv1_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(reg_611),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv1_W_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
W_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_0_0_address0),
    .ce0(W_0_0_ce0),
    .we0(W_0_0_we0),
    .d0(gmem_addr_read_reg_1322),
    .q0(W_0_0_q0)
);

conv1_W_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
W_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_1_0_address0),
    .ce0(W_1_0_ce0),
    .q0(W_1_0_q0)
);

conv1_W_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
W_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_2_0_address0),
    .ce0(W_2_0_ce0),
    .q0(W_2_0_q0)
);

conv1_W_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
W_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_3_0_address0),
    .ce0(W_3_0_ce0),
    .q0(W_3_0_q0)
);

conv1_W_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
W_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_4_0_address0),
    .ce0(W_4_0_ce0),
    .q0(W_4_0_q0)
);

conv1_W_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
W_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_5_0_address0),
    .ce0(W_5_0_ce0),
    .q0(W_5_0_q0)
);

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_603_p0),
    .din1(grp_fu_603_p1),
    .ce(grp_fu_603_ce),
    .dout(grp_fu_603_p2)
);

conv1_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fmul_32ns_3cud_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(gmem_addr_1_read_reg_1532),
    .din1(grp_fu_607_p1),
    .ce(grp_fu_607_ce),
    .dout(grp_fu_607_p2)
);

conv1_mac_muladd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
conv1_mac_muladd_dEe_U3(
    .din0(grp_fu_1218_p0),
    .din1(grp_fu_1218_p1),
    .din2(grp_fu_1218_p2),
    .dout(grp_fu_1218_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_subdone)))) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter17 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0)) | ((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp1_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)))) begin
            ap_reg_ioackin_gmem_AWREADY <= 1'b0;
        end else if ((((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)))) begin
            ap_reg_ioackin_gmem_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage5_11001) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)))) begin
            ap_reg_ioackin_gmem_WREADY <= 1'b0;
        end else if ((((gmem_WREADY == 1'b1) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)))) begin
            ap_reg_ioackin_gmem_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_reg_591 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        c_reg_591 <= c_1_reg_1467;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten1_reg_520 <= 17'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        indvar_flatten1_reg_520 <= indvar_flatten_next2_reg_1341;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten2_reg_543 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        indvar_flatten2_reg_543 <= indvar_flatten_next1_reg_1462;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten_reg_567 <= 14'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        indvar_flatten_reg_567 <= indvar_flatten_next_reg_1457;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4_fu_732_p2 == 1'd0))) begin
        indvar_reg_509 <= indvar_next_fu_738_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_reg_509 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kc_reg_555 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        kc_reg_555 <= kc_cast4_mid2_reg_1394;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kr_reg_531 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        kr_reg_531 <= kr_cast6_mid2_reg_1377;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        r_reg_579 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        r_reg_579 <= tmp_11_mid2_reg_1431;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        W_0_0_load_reg_1502 <= W_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        W_1_0_load_reg_1507 <= W_1_0_q0;
        W_2_0_load_reg_1512 <= W_2_0_q0;
        W_3_0_load_reg_1517 <= W_3_0_q0;
        W_4_0_load_reg_1522 <= W_4_0_q0;
        W_5_0_load_reg_1527 <= W_5_0_q0;
        gmem_addr_1_read_reg_1532 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        c_1_reg_1467 <= c_1_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        c_mid2_reg_1409 <= c_mid2_fu_934_p3;
        gmem_addr_1_reg_1415 <= feature_src_02_sum_fu_1002_p2;
        kc_1_reg_1384 <= kc_1_fu_885_p2;
        kr_1_reg_1371 <= kr_1_fu_840_p2;
        r_1_reg_1404 <= r_1_fu_928_p2;
        r_mid_reg_1389 <= r_mid_fu_891_p3;
        tmp_12_mid1_reg_1399 <= tmp_12_mid1_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond4_reg_1308 <= exitcond4_fu_732_p2;
        exitcond4_reg_1308_pp0_iter1_reg <= exitcond4_reg_1308;
        tmp_7_reg_1317_pp0_iter1_reg <= tmp_7_reg_1317;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten2_reg_1337 <= exitcond_flatten2_fu_798_p2;
        exitcond_flatten2_reg_1337_pp1_iter10_reg <= exitcond_flatten2_reg_1337_pp1_iter9_reg;
        exitcond_flatten2_reg_1337_pp1_iter11_reg <= exitcond_flatten2_reg_1337_pp1_iter10_reg;
        exitcond_flatten2_reg_1337_pp1_iter12_reg <= exitcond_flatten2_reg_1337_pp1_iter11_reg;
        exitcond_flatten2_reg_1337_pp1_iter13_reg <= exitcond_flatten2_reg_1337_pp1_iter12_reg;
        exitcond_flatten2_reg_1337_pp1_iter14_reg <= exitcond_flatten2_reg_1337_pp1_iter13_reg;
        exitcond_flatten2_reg_1337_pp1_iter15_reg <= exitcond_flatten2_reg_1337_pp1_iter14_reg;
        exitcond_flatten2_reg_1337_pp1_iter16_reg <= exitcond_flatten2_reg_1337_pp1_iter15_reg;
        exitcond_flatten2_reg_1337_pp1_iter17_reg <= exitcond_flatten2_reg_1337_pp1_iter16_reg;
        exitcond_flatten2_reg_1337_pp1_iter1_reg <= exitcond_flatten2_reg_1337;
        exitcond_flatten2_reg_1337_pp1_iter2_reg <= exitcond_flatten2_reg_1337_pp1_iter1_reg;
        exitcond_flatten2_reg_1337_pp1_iter3_reg <= exitcond_flatten2_reg_1337_pp1_iter2_reg;
        exitcond_flatten2_reg_1337_pp1_iter4_reg <= exitcond_flatten2_reg_1337_pp1_iter3_reg;
        exitcond_flatten2_reg_1337_pp1_iter5_reg <= exitcond_flatten2_reg_1337_pp1_iter4_reg;
        exitcond_flatten2_reg_1337_pp1_iter6_reg <= exitcond_flatten2_reg_1337_pp1_iter5_reg;
        exitcond_flatten2_reg_1337_pp1_iter7_reg <= exitcond_flatten2_reg_1337_pp1_iter6_reg;
        exitcond_flatten2_reg_1337_pp1_iter8_reg <= exitcond_flatten2_reg_1337_pp1_iter7_reg;
        exitcond_flatten2_reg_1337_pp1_iter9_reg <= exitcond_flatten2_reg_1337_pp1_iter8_reg;
        exitcond_flatten_mid_reg_1356_pp1_iter1_reg <= exitcond_flatten_mid_reg_1356;
        exitcond_flatten_reg_1346_pp1_iter1_reg <= exitcond_flatten_reg_1346;
        gmem_addr_7_reg_1645_pp1_iter16_reg[30 : 0] <= gmem_addr_7_reg_1645[30 : 0];
        tmp_11_reg_1327 <= tmp_11_fu_786_p2;
        tmp_11_reg_1327_pp1_iter1_reg <= tmp_11_reg_1327;
        tmp_18_2_reg_1552_pp1_iter3_reg <= tmp_18_2_reg_1552;
        tmp_18_2_reg_1552_pp1_iter4_reg <= tmp_18_2_reg_1552_pp1_iter3_reg;
        tmp_18_2_reg_1552_pp1_iter5_reg <= tmp_18_2_reg_1552_pp1_iter4_reg;
        tmp_18_2_reg_1552_pp1_iter6_reg <= tmp_18_2_reg_1552_pp1_iter5_reg;
        tmp_18_2_reg_1552_pp1_iter7_reg <= tmp_18_2_reg_1552_pp1_iter6_reg;
        tmp_8_reg_1332 <= tmp_8_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_fu_798_p2 == 1'd0))) begin
        exitcond_flatten_mid_reg_1356 <= exitcond_flatten_mid_fu_828_p2;
        exitcond_flatten_reg_1346 <= exitcond_flatten_fu_810_p2;
        tmp_19_reg_1364 <= tmp_19_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        feature_dst_018_sum_reg_1445 <= feature_dst_018_sum_fu_1040_p2;
        tmp_49_cast_reg_1436[15 : 0] <= tmp_49_cast_fu_1037_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0))) begin
        feature_dst_120_sum_reg_1572 <= feature_dst_120_sum_fu_1148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0))) begin
        feature_dst_222_sum_reg_1589 <= feature_dst_222_sum_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0))) begin
        feature_dst_324_sum_reg_1606 <= feature_dst_324_sum_fu_1176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0))) begin
        feature_dst_426_sum_reg_1623 <= feature_dst_426_sum_fu_1190_p2;
        feature_dst_528_sum_reg_1628 <= feature_dst_528_sum_fu_1194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
        feature_dst_528_sum_reg_1628_pp1_iter12_reg <= feature_dst_528_sum_reg_1628;
        feature_dst_528_sum_reg_1628_pp1_iter13_reg <= feature_dst_528_sum_reg_1628_pp1_iter12_reg;
        feature_dst_528_sum_reg_1628_pp1_iter14_reg <= feature_dst_528_sum_reg_1628_pp1_iter13_reg;
        gmem_addr_5_reg_1611_pp1_iter9_reg[30 : 0] <= gmem_addr_5_reg_1611[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        feature_src_01_reg_1262 <= {{feature_src_0[31:2]}};
        tmp_1_reg_1232 <= {{feature_dst_4[31:2]}};
        tmp_2_reg_1237 <= {{feature_dst_3[31:2]}};
        tmp_3_reg_1242 <= {{feature_dst_2[31:2]}};
        tmp_4_reg_1247 <= {{feature_dst_1[31:2]}};
        tmp_5_reg_1252 <= {{feature_dst_0[31:2]}};
        tmp_reg_1227 <= {{feature_dst_5[31:2]}};
        weight_src_0_03_reg_1257 <= {{weight_src_0_0[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        gmem_addr_2_read_reg_1537 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        gmem_addr_2_reg_1450[30 : 0] <= feature_dst_018_sum_1_fu_1045_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        gmem_addr_2_reg_1450_pp1_iter1_reg[30 : 0] <= gmem_addr_2_reg_1450[30 : 0];
        tmp_18_5_reg_1567_pp1_iter10_reg <= tmp_18_5_reg_1567_pp1_iter9_reg;
        tmp_18_5_reg_1567_pp1_iter11_reg <= tmp_18_5_reg_1567_pp1_iter10_reg;
        tmp_18_5_reg_1567_pp1_iter12_reg <= tmp_18_5_reg_1567_pp1_iter11_reg;
        tmp_18_5_reg_1567_pp1_iter13_reg <= tmp_18_5_reg_1567_pp1_iter12_reg;
        tmp_18_5_reg_1567_pp1_iter14_reg <= tmp_18_5_reg_1567_pp1_iter13_reg;
        tmp_18_5_reg_1567_pp1_iter15_reg <= tmp_18_5_reg_1567_pp1_iter14_reg;
        tmp_18_5_reg_1567_pp1_iter3_reg <= tmp_18_5_reg_1567;
        tmp_18_5_reg_1567_pp1_iter4_reg <= tmp_18_5_reg_1567_pp1_iter3_reg;
        tmp_18_5_reg_1567_pp1_iter5_reg <= tmp_18_5_reg_1567_pp1_iter4_reg;
        tmp_18_5_reg_1567_pp1_iter6_reg <= tmp_18_5_reg_1567_pp1_iter5_reg;
        tmp_18_5_reg_1567_pp1_iter7_reg <= tmp_18_5_reg_1567_pp1_iter6_reg;
        tmp_18_5_reg_1567_pp1_iter8_reg <= tmp_18_5_reg_1567_pp1_iter7_reg;
        tmp_18_5_reg_1567_pp1_iter9_reg <= tmp_18_5_reg_1567_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0))) begin
        gmem_addr_3_read_reg_1584 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0))) begin
        gmem_addr_3_reg_1577[30 : 0] <= feature_dst_120_sum_1_fu_1152_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        gmem_addr_3_reg_1577_pp1_iter4_reg[30 : 0] <= gmem_addr_3_reg_1577[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0))) begin
        gmem_addr_4_read_reg_1601 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0))) begin
        gmem_addr_4_reg_1594[30 : 0] <= feature_dst_222_sum_1_fu_1166_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_addr_4_reg_1594_pp1_iter7_reg[30 : 0] <= gmem_addr_4_reg_1594[30 : 0];
        tmp_18_3_reg_1557_pp1_iter3_reg <= tmp_18_3_reg_1557;
        tmp_18_3_reg_1557_pp1_iter4_reg <= tmp_18_3_reg_1557_pp1_iter3_reg;
        tmp_18_3_reg_1557_pp1_iter5_reg <= tmp_18_3_reg_1557_pp1_iter4_reg;
        tmp_18_3_reg_1557_pp1_iter6_reg <= tmp_18_3_reg_1557_pp1_iter5_reg;
        tmp_18_3_reg_1557_pp1_iter7_reg <= tmp_18_3_reg_1557_pp1_iter6_reg;
        tmp_18_3_reg_1557_pp1_iter8_reg <= tmp_18_3_reg_1557_pp1_iter7_reg;
        tmp_18_3_reg_1557_pp1_iter9_reg <= tmp_18_3_reg_1557_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0))) begin
        gmem_addr_5_read_reg_1618 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0))) begin
        gmem_addr_5_reg_1611[30 : 0] <= feature_dst_324_sum_1_fu_1180_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0))) begin
        gmem_addr_6_read_reg_1640 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0))) begin
        gmem_addr_6_reg_1633[30 : 0] <= feature_dst_426_sum_1_fu_1198_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
        gmem_addr_6_reg_1633_pp1_iter12_reg[30 : 0] <= gmem_addr_6_reg_1633[30 : 0];
        tmp_18_1_reg_1547_pp1_iter2_reg <= tmp_18_1_reg_1547;
        tmp_18_1_reg_1547_pp1_iter3_reg <= tmp_18_1_reg_1547_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0))) begin
        gmem_addr_7_read_reg_1652 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0))) begin
        gmem_addr_7_reg_1645[30 : 0] <= feature_dst_528_sum_1_fu_1208_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4_reg_1308 == 1'd0))) begin
        gmem_addr_read_reg_1322 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten_reg_1346 == 1'd0) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        indvar_flatten23_op_reg_1426 <= indvar_flatten23_op_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        indvar_flatten_next1_reg_1462 <= indvar_flatten_next1_fu_1061_p3;
        indvar_flatten_next_reg_1457 <= indvar_flatten_next_fu_1055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_next2_reg_1341 <= indvar_flatten_next2_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_19_reg_1364 == 1'd0) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        indvar_flatten_op_reg_1421 <= indvar_flatten_op_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        kc_cast4_mid2_reg_1394 <= kc_cast4_mid2_fu_905_p3;
        kr_cast6_mid2_reg_1377 <= kr_cast6_mid2_fu_853_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)))) begin
        reg_611 <= grp_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        tmp_11_mid2_reg_1431 <= tmp_11_mid2_fu_1025_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_16_cast_reg_1298[29 : 0] <= tmp_16_cast_fu_726_p1[29 : 0];
        tmp_1_cast_reg_1278[29 : 0] <= tmp_1_cast_fu_714_p1[29 : 0];
        tmp_2_cast_reg_1283[29 : 0] <= tmp_2_cast_fu_717_p1[29 : 0];
        tmp_4_cast_reg_1288[29 : 0] <= tmp_4_cast_fu_720_p1[29 : 0];
        tmp_5_cast_reg_1293[29 : 0] <= tmp_5_cast_fu_723_p1[29 : 0];
        tmp_6_reg_1303[29 : 0] <= tmp_6_fu_729_p1[29 : 0];
        tmp_cast_reg_1273[29 : 0] <= tmp_cast_fu_711_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        tmp_18_1_reg_1547 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        tmp_18_2_reg_1552 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0))) begin
        tmp_18_3_reg_1557 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0))) begin
        tmp_18_4_reg_1562 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        tmp_18_4_reg_1562_pp1_iter10_reg <= tmp_18_4_reg_1562_pp1_iter9_reg;
        tmp_18_4_reg_1562_pp1_iter11_reg <= tmp_18_4_reg_1562_pp1_iter10_reg;
        tmp_18_4_reg_1562_pp1_iter12_reg <= tmp_18_4_reg_1562_pp1_iter11_reg;
        tmp_18_4_reg_1562_pp1_iter3_reg <= tmp_18_4_reg_1562;
        tmp_18_4_reg_1562_pp1_iter4_reg <= tmp_18_4_reg_1562_pp1_iter3_reg;
        tmp_18_4_reg_1562_pp1_iter5_reg <= tmp_18_4_reg_1562_pp1_iter4_reg;
        tmp_18_4_reg_1562_pp1_iter6_reg <= tmp_18_4_reg_1562_pp1_iter5_reg;
        tmp_18_4_reg_1562_pp1_iter7_reg <= tmp_18_4_reg_1562_pp1_iter6_reg;
        tmp_18_4_reg_1562_pp1_iter8_reg <= tmp_18_4_reg_1562_pp1_iter7_reg;
        tmp_18_4_reg_1562_pp1_iter9_reg <= tmp_18_4_reg_1562_pp1_iter8_reg;
        tmp_49_cast_reg_1436_pp1_iter10_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter9_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter11_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter10_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter1_reg[15 : 0] <= tmp_49_cast_reg_1436[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter2_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter1_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter3_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter2_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter4_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter3_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter5_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter4_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter6_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter5_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter7_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter6_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter8_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter7_reg[15 : 0];
        tmp_49_cast_reg_1436_pp1_iter9_reg[15 : 0] <= tmp_49_cast_reg_1436_pp1_iter8_reg[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0))) begin
        tmp_18_5_reg_1567 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        tmp_22_reg_1542 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4_fu_732_p2 == 1'd0))) begin
        tmp_7_reg_1317 <= tmp_7_fu_744_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        W_0_0_address0 = W_0_0_load_mid2_fu_1135_p3;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_0_0_address0 = tmp_30_cast_fu_748_p1;
    end else begin
        W_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        W_0_0_ce0 = 1'b1;
    end else begin
        W_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond4_reg_1308_pp0_iter1_reg == 1'd0))) begin
        W_0_0_we0 = 1'b1;
    end else begin
        W_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        W_1_0_ce0 = 1'b1;
    end else begin
        W_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        W_2_0_ce0 = 1'b1;
    end else begin
        W_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        W_3_0_ce0 = 1'b1;
    end else begin
        W_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        W_4_0_ce0 = 1'b1;
    end else begin
        W_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        W_5_0_ce0 = 1'b1;
    end else begin
        W_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_732_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_798_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_c_phi_fu_595_p4 = c_1_reg_1467;
    end else begin
        ap_phi_mux_c_phi_fu_595_p4 = c_reg_591;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_524_p4 = indvar_flatten_next2_reg_1341;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_524_p4 = indvar_flatten1_reg_520;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        ap_phi_mux_indvar_flatten2_phi_fu_547_p4 = indvar_flatten_next1_reg_1462;
    end else begin
        ap_phi_mux_indvar_flatten2_phi_fu_547_p4 = indvar_flatten2_reg_543;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_571_p4 = indvar_flatten_next_reg_1457;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_571_p4 = indvar_flatten_reg_567;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        ap_phi_mux_kc_phi_fu_559_p4 = kc_cast4_mid2_reg_1394;
    end else begin
        ap_phi_mux_kc_phi_fu_559_p4 = kc_reg_555;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        ap_phi_mux_kr_phi_fu_535_p4 = kr_cast6_mid2_reg_1377;
    end else begin
        ap_phi_mux_kr_phi_fu_535_p4 = kr_reg_531;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337 == 1'd0))) begin
        ap_phi_mux_r_phi_fu_583_p4 = tmp_11_mid2_reg_1431;
    end else begin
        ap_phi_mux_r_phi_fu_583_p4 = r_reg_579;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1467)) begin
            gmem_ARADDR = feature_dst_528_sum_1_fu_1208_p1;
        end else if ((1'b1 == ap_condition_1432)) begin
            gmem_ARADDR = feature_dst_426_sum_1_fu_1198_p1;
        end else if ((1'b1 == ap_condition_1401)) begin
            gmem_ARADDR = feature_dst_324_sum_1_fu_1180_p1;
        end else if ((1'b1 == ap_condition_1363)) begin
            gmem_ARADDR = feature_dst_222_sum_1_fu_1166_p1;
        end else if ((1'b1 == ap_condition_1328)) begin
            gmem_ARADDR = feature_dst_120_sum_1_fu_1152_p1;
        end else if ((1'b1 == ap_condition_1291)) begin
            gmem_ARADDR = feature_dst_018_sum_1_fu_1045_p1;
        end else if ((1'b1 == ap_condition_1280)) begin
            gmem_ARADDR = gmem_addr_1_reg_1415;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            gmem_ARADDR = tmp_s_fu_701_p1;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)))) begin
        gmem_ARLEN = 32'd1;
    end else if (((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARLEN = 32'd2;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1477)) begin
            gmem_AWADDR = gmem_addr_7_reg_1645_pp1_iter16_reg;
        end else if ((1'b1 == ap_condition_1442)) begin
            gmem_AWADDR = gmem_addr_6_reg_1633_pp1_iter12_reg;
        end else if ((1'b1 == ap_condition_1411)) begin
            gmem_AWADDR = gmem_addr_5_reg_1611_pp1_iter9_reg;
        end else if ((1'b1 == ap_condition_1377)) begin
            gmem_AWADDR = gmem_addr_4_reg_1594_pp1_iter7_reg;
        end else if ((1'b1 == ap_condition_1342)) begin
            gmem_AWADDR = gmem_addr_3_reg_1577_pp1_iter4_reg;
        end else if ((1'b1 == ap_condition_1303)) begin
            gmem_AWADDR = gmem_addr_2_reg_1450_pp1_iter1_reg;
        end else begin
            gmem_AWADDR = 'bx;
        end
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter17_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4_reg_1308 == 1'd0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage6) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3) & (exitcond_flatten2_reg_1337 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage6) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter17_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)) | ((ap_enable_reg_pp1_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage6) & (ap_enable_reg_pp1_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0)) | ((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4_reg_1308 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2)))) begin
        grp_fu_603_ce = 1'b1;
    end else begin
        grp_fu_603_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3))) begin
        grp_fu_603_p0 = gmem_addr_7_read_reg_1652;
    end else if (((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_603_p0 = gmem_addr_6_read_reg_1640;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_603_p0 = gmem_addr_5_read_reg_1618;
    end else if (((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        grp_fu_603_p0 = gmem_addr_4_read_reg_1601;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        grp_fu_603_p0 = gmem_addr_3_read_reg_1584;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_603_p0 = gmem_addr_2_read_reg_1537;
    end else begin
        grp_fu_603_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3))) begin
        grp_fu_603_p1 = tmp_18_5_reg_1567_pp1_iter15_reg;
    end else if (((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_603_p1 = tmp_18_4_reg_1562_pp1_iter12_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_603_p1 = tmp_18_3_reg_1557_pp1_iter9_reg;
    end else if (((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        grp_fu_603_p1 = tmp_18_2_reg_1552_pp1_iter7_reg;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        grp_fu_603_p1 = tmp_18_1_reg_1547_pp1_iter3_reg;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_603_p1 = tmp_22_reg_1542;
    end else begin
        grp_fu_603_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2)))) begin
        grp_fu_607_ce = 1'b1;
    end else begin
        grp_fu_607_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_607_p1 = W_5_0_load_reg_1527;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_fu_607_p1 = W_4_0_load_reg_1522;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_607_p1 = W_3_0_load_reg_1517;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_607_p1 = W_2_0_load_reg_1512;
    end else if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_607_p1 = W_1_0_load_reg_1507;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage3))) begin
        grp_fu_607_p1 = W_0_0_load_reg_1502;
    end else begin
        grp_fu_607_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond4_fu_732_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((exitcond4_fu_732_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond_flatten2_fu_798_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((exitcond_flatten2_fu_798_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((~((ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_subdone)) & (1'b0 == ap_block_pp1_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else if (((ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_0_0_load_mid2_fu_1135_p3 = ((exitcond_flatten_mid_reg_1356_pp1_iter1_reg[0:0] === 1'b1) ? tmp_21_fu_1129_p2 : W_0_0_load_mid_cast_fu_1122_p1);

assign W_0_0_load_mid_cast_fu_1122_p1 = $signed(W_0_0_load_mid_fu_1116_p3);

assign W_0_0_load_mid_fu_1116_p3 = ((exitcond_flatten_reg_1346_pp1_iter1_reg[0:0] === 1'b1) ? tmp_37_cast_fu_1092_p1 : tmp_11_reg_1327_pp1_iter1_reg);

assign W_1_0_address0 = W_0_0_load_mid2_fu_1135_p3;

assign W_2_0_address0 = W_0_0_load_mid2_fu_1135_p3;

assign W_3_0_address0 = W_0_0_load_mid2_fu_1135_p3;

assign W_4_0_address0 = W_0_0_load_mid2_fu_1135_p3;

assign W_5_0_address0 = W_0_0_load_mid2_fu_1135_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond4_reg_1308 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond4_reg_1308 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state132_io) & (ap_enable_reg_pp1_iter17 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0)) | ((1'b1 == ap_block_state118_io) & (ap_enable_reg_pp1_iter15 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state132_io) & (ap_enable_reg_pp1_iter17 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0)) | ((1'b1 == ap_block_state118_io) & (ap_enable_reg_pp1_iter15 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b1 == ap_block_state56_io) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b1 == ap_block_state49_io) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0)) | ((1'b1 == ap_block_state56_io) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b1 == ap_block_state49_io) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage2_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((1'b1 == ap_block_state50_io) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b1 == ap_block_state29_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0)) | ((1'b1 == ap_block_state50_io) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b1 == ap_block_state29_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage3_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((1'b1 == ap_block_state86_io) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0)) | ((1'b1 == ap_block_state86_io) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage4_11001 = (((1'b1 == ap_block_state108_io) & (ap_enable_reg_pp1_iter13 == 1'b1)) | ((1'b1 == ap_block_state87_io) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp1_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = (((1'b1 == ap_block_state108_io) & (ap_enable_reg_pp1_iter13 == 1'b1)) | ((1'b1 == ap_block_state87_io) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp1_iter3 == 1'b1)));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter17_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage5_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter17_reg == 1'd0)) | ((1'b1 == ap_block_state109_io) & (ap_enable_reg_pp1_iter13 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0)) | ((1'b1 == ap_block_state74_io) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b1 == ap_block_state67_io) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter17_reg == 1'd0)) | ((1'b1 == ap_block_state109_io) & (ap_enable_reg_pp1_iter13 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0)) | ((1'b1 == ap_block_state74_io) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b1 == ap_block_state67_io) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage6_11001 = (((1'b1 == ap_block_state131_io) & (ap_enable_reg_pp1_iter16 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0)) | ((1'b1 == ap_block_state96_io) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b1 == ap_block_state68_io) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = (((1'b1 == ap_block_state131_io) & (ap_enable_reg_pp1_iter16 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0)) | ((1'b1 == ap_block_state96_io) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b1 == ap_block_state68_io) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

assign ap_block_state100_pp1_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp1_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp1_stage5_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state103_pp1_stage6_iter12 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter12_reg == 1'd0));
end

assign ap_block_state104_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp1_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp1_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp1_stage3_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state108_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0));
end

assign ap_block_state108_pp1_stage4_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state109_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0));
end

assign ap_block_state109_pp1_stage5_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (exitcond4_reg_1308 == 1'd0));
end

assign ap_block_state110_pp1_stage6_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp1_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp1_stage2_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state114_pp1_stage3_iter14 = ((gmem_BVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0));
end

assign ap_block_state115_pp1_stage4_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp1_stage5_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp1_stage6_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state118_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0));
end

assign ap_block_state118_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp1_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp1_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp1_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp1_stage4_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp1_stage5_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp1_stage6_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state125_pp1_stage0_iter16 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter15_reg == 1'd0));
end

assign ap_block_state126_pp1_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp1_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp1_stage3_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp1_stage4_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp1_stage5_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state131_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0));
end

assign ap_block_state131_pp1_stage6_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state132_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0));
end

assign ap_block_state132_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp1_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp1_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp1_stage3_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp1_stage4_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state137_pp1_stage5_iter17 = ((gmem_BVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter17_reg == 1'd0));
end

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337 == 1'd0));
end

assign ap_block_state15_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337 == 1'd0));
end

assign ap_block_state16_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage2_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp1_stage3_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter1_reg == 1'd0));
end

assign ap_block_state24_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0));
end

assign ap_block_state29_pp1_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0));
end

assign ap_block_state30_pp1_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state35_pp1_stage1_iter3 = ((gmem_BVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0));
end

assign ap_block_state36_pp1_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage3_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0));
end

assign ap_block_state38_pp1_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage3_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp1_stage4_iter4 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter4_reg == 1'd0));
end

assign ap_block_state46_pp1_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0));
end

assign ap_block_state49_pp1_stage1_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0));
end

assign ap_block_state50_pp1_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage6_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_pp1_stage0_iter6 = ((gmem_BVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_state56_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0));
end

assign ap_block_state56_pp1_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp1_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp1_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp1_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp1_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp1_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_pp1_stage1_iter7 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0));
end

assign ap_block_state64_pp1_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage4_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state67_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0));
end

assign ap_block_state67_pp1_stage5_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state68_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0));
end

assign ap_block_state68_pp1_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp1_stage3_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp1_stage4_iter8 = ((gmem_BVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state74_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0));
end

assign ap_block_state74_pp1_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp1_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp1_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp1_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp1_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp1_stage4_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81_pp1_stage5_iter9 = ((gmem_RVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter9_reg == 1'd0));
end

assign ap_block_state82_pp1_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp1_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp1_stage2_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state86_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0));
end

assign ap_block_state86_pp1_stage3_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0));
end

assign ap_block_state87_pp1_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp1_stage5_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp1_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp1_stage1_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state92_pp1_stage2_iter11 = ((gmem_BVALID == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0));
end

assign ap_block_state93_pp1_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp1_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp1_stage5_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state96_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0));
end

assign ap_block_state96_pp1_stage6_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp1_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp1_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1280 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337 == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001));
end

always @ (*) begin
    ap_condition_1291 = ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337 == 1'd0));
end

always @ (*) begin
    ap_condition_1303 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (exitcond_flatten2_reg_1337_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage2_01001));
end

always @ (*) begin
    ap_condition_1328 = ((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1342 = ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1363 = ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001) & (exitcond_flatten2_reg_1337_pp1_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1377 = ((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter7_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1401 = ((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (exitcond_flatten2_reg_1337_pp1_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1411 = ((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001) & (exitcond_flatten2_reg_1337_pp1_iter10_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1432 = ((ap_enable_reg_pp1_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1442 = ((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001) & (exitcond_flatten2_reg_1337_pp1_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1467 = ((ap_enable_reg_pp1_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (exitcond_flatten2_reg_1337_pp1_iter14_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1477 = ((ap_enable_reg_pp1_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (exitcond_flatten2_reg_1337_pp1_iter16_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_1_fu_1067_p2 = (c_mid2_reg_1409 + 8'd2);

assign c_mid2_fu_934_p3 = ((tmp_12_mid1_fu_923_p2[0:0] === 1'b1) ? c_mid_fu_898_p3 : 8'd0);

assign c_mid_fu_898_p3 = ((tmp_19_reg_1364[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_c_phi_fu_595_p4);

assign exitcond4_fu_732_p2 = ((indvar_reg_509 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_822_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_571_p4 == 14'd14161) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_798_p2 = ((ap_phi_mux_indvar_flatten1_phi_fu_524_p4 == 17'd127449) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_810_p2 = ((ap_phi_mux_indvar_flatten2_phi_fu_547_p4 == 16'd42483) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_828_p2 = (not_exitcond_flatten_fu_816_p2 & exitcond_flatten1_fu_822_p2);

assign feature_dst_018_sum_1_fu_1045_p1 = feature_dst_018_sum_reg_1445;

assign feature_dst_018_sum_fu_1040_p2 = (tmp_49_cast_fu_1037_p1 + tmp_16_cast_reg_1298);

assign feature_dst_120_sum_1_fu_1152_p1 = feature_dst_120_sum_reg_1572;

assign feature_dst_120_sum_fu_1148_p2 = (tmp_49_cast_reg_1436_pp1_iter3_reg + tmp_5_cast_reg_1293);

assign feature_dst_222_sum_1_fu_1166_p1 = feature_dst_222_sum_reg_1589;

assign feature_dst_222_sum_fu_1162_p2 = (tmp_49_cast_reg_1436_pp1_iter5_reg + tmp_4_cast_reg_1288);

assign feature_dst_324_sum_1_fu_1180_p1 = feature_dst_324_sum_reg_1606;

assign feature_dst_324_sum_fu_1176_p2 = (tmp_49_cast_reg_1436_pp1_iter8_reg + tmp_2_cast_reg_1283);

assign feature_dst_426_sum_1_fu_1198_p1 = feature_dst_426_sum_reg_1623;

assign feature_dst_426_sum_fu_1190_p2 = (tmp_49_cast_reg_1436_pp1_iter11_reg + tmp_1_cast_reg_1278);

assign feature_dst_528_sum_1_fu_1208_p1 = feature_dst_528_sum_reg_1628_pp1_iter14_reg;

assign feature_dst_528_sum_fu_1194_p2 = (tmp_49_cast_reg_1436_pp1_iter11_reg + tmp_cast_reg_1273);

assign feature_src_02_sum_fu_1002_p2 = (tmp_28_fu_996_p2 + tmp_6_reg_1303);

assign grp_fu_1218_p0 = grp_fu_1218_p00;

assign grp_fu_1218_p00 = tmp_11_mid2_fu_1025_p3;

assign grp_fu_1218_p1 = 16'd238;

assign grp_fu_1218_p2 = grp_fu_1218_p20;

assign grp_fu_1218_p20 = c_mid2_reg_1409;

assign indvar_flatten23_op_fu_1019_p2 = (indvar_flatten2_reg_543 + 16'd1);

assign indvar_flatten_next1_fu_1061_p3 = ((exitcond_flatten_reg_1346[0:0] === 1'b1) ? 16'd1 : indvar_flatten23_op_reg_1426);

assign indvar_flatten_next2_fu_804_p2 = (ap_phi_mux_indvar_flatten1_phi_fu_524_p4 + 17'd1);

assign indvar_flatten_next_fu_1055_p3 = ((tmp_19_reg_1364[0:0] === 1'b1) ? 14'd1 : indvar_flatten_op_reg_1421);

assign indvar_flatten_op_fu_1013_p2 = (indvar_flatten_reg_567 + 14'd1);

assign indvar_next_fu_738_p2 = (indvar_reg_509 + 2'd1);

assign kc_1_fu_885_p2 = (kc_mid_fu_846_p3 + 2'd1);

assign kc_cast4_mid2_cast_fu_912_p1 = kc_cast4_mid2_fu_905_p3;

assign kc_cast4_mid2_fu_905_p3 = ((exitcond_flatten_mid_reg_1356[0:0] === 1'b1) ? kc_1_fu_885_p2 : kc_mid_fu_846_p3);

assign kc_mid_fu_846_p3 = ((exitcond_flatten_reg_1346[0:0] === 1'b1) ? 2'd0 : kc_reg_555);

assign kr_1_fu_840_p2 = (kr_reg_531 + 2'd1);

assign kr_cast6_fu_752_p1 = ap_phi_mux_kr_phi_fu_535_p4;

assign kr_cast6_mid2_cast_fu_860_p1 = kr_cast6_mid2_fu_853_p3;

assign kr_cast6_mid2_fu_853_p3 = ((exitcond_flatten_reg_1346[0:0] === 1'b1) ? kr_1_fu_840_p2 : kr_reg_531);

assign not_exitcond_flatten_fu_816_p2 = (exitcond_flatten_fu_810_p2 ^ 1'd1);

assign p_shl1_cast_fu_1082_p1 = tmp_12_fu_1075_p3;

assign p_shl2_fu_1106_p1 = tmp_16_fu_1099_p3;

assign p_shl3_fu_964_p1 = tmp_24_fu_956_p3;

assign p_shl4_fu_976_p1 = tmp_25_fu_968_p3;

assign p_shl_cast_fu_768_p1 = tmp_9_fu_760_p3;

assign r_1_fu_928_p2 = (r_mid_fu_891_p3 + 8'd2);

assign r_mid_fu_891_p3 = ((tmp_19_reg_1364[0:0] === 1'b1) ? 8'd0 : r_reg_579);

assign tmp_10_fu_772_p2 = (p_shl_cast_fu_768_p1 - tmp_7_cast_fu_756_p1);

assign tmp_10_mid2_fu_948_p3 = ((tmp_12_mid1_fu_923_p2[0:0] === 1'b1) ? tmp_10_mid4_fu_916_p3 : tmp_8_mid1_fu_942_p2);

assign tmp_10_mid4_fu_916_p3 = ((exitcond_flatten_mid_reg_1356[0:0] === 1'b1) ? kr_cast6_mid2_cast_fu_860_p1 : tmp_10_mid_fu_868_p3);

assign tmp_10_mid_fu_868_p3 = ((exitcond_flatten_reg_1346[0:0] === 1'b1) ? tmp_7_mid1_cast1_fu_864_p1 : tmp_8_reg_1332);

assign tmp_11_fu_786_p2 = ($signed(tmp_34_cast_fu_778_p1) + $signed(tmp_9_cast_fu_782_p1));

assign tmp_11_mid2_fu_1025_p3 = ((tmp_12_mid1_reg_1399[0:0] === 1'b1) ? r_mid_reg_1389 : r_1_reg_1404);

assign tmp_12_fu_1075_p3 = {{kr_1_reg_1371}, {2'd0}};

assign tmp_12_mid1_fu_923_p2 = (tmp_12_mid_fu_880_p2 | exitcond_flatten_mid_reg_1356);

assign tmp_12_mid_fu_880_p2 = (tmp_18_fu_874_p2 | exitcond_flatten_reg_1346);

assign tmp_13_fu_986_p2 = (c_mid2_fu_934_p3 + kc_cast4_mid2_cast_fu_912_p1);

assign tmp_14_fu_992_p1 = tmp_13_fu_986_p2;

assign tmp_15_fu_1086_p2 = (p_shl1_cast_fu_1082_p1 - tmp_7_mid1_cast_fu_1072_p1);

assign tmp_16_cast_fu_726_p1 = tmp_5_reg_1252;

assign tmp_16_fu_1099_p3 = {{kr_cast6_mid2_reg_1377}, {2'd0}};

assign tmp_17_fu_1110_p2 = (p_shl2_fu_1106_p1 - tmp_7_mid2_cast_fu_1096_p1);

assign tmp_18_fu_874_p2 = ((ap_phi_mux_c_phi_fu_595_p4 < 8'd238) ? 1'b1 : 1'b0);

assign tmp_19_fu_834_p2 = (exitcond_flatten_mid_fu_828_p2 | exitcond_flatten_fu_810_p2);

assign tmp_1_cast_fu_714_p1 = tmp_1_reg_1232;

assign tmp_21_fu_1129_p2 = (tmp_17_fu_1110_p2 + tmp_9_mid1_fu_1126_p1);

assign tmp_24_fu_956_p3 = {{tmp_10_mid2_fu_948_p3}, {8'd0}};

assign tmp_25_fu_968_p3 = {{tmp_10_mid2_fu_948_p3}, {4'd0}};

assign tmp_26_fu_980_p2 = (p_shl3_fu_964_p1 - p_shl4_fu_976_p1);

assign tmp_28_fu_996_p2 = (tmp_26_fu_980_p2 + tmp_14_fu_992_p1);

assign tmp_2_cast_fu_717_p1 = tmp_2_reg_1237;

assign tmp_30_cast_fu_748_p1 = tmp_7_reg_1317_pp0_iter1_reg;

assign tmp_34_cast_fu_778_p1 = $signed(tmp_10_fu_772_p2);

assign tmp_37_cast_fu_1092_p1 = $signed(tmp_15_fu_1086_p2);

assign tmp_49_cast_fu_1037_p1 = grp_fu_1218_p3;

assign tmp_4_cast_fu_720_p1 = tmp_3_reg_1242;

assign tmp_5_cast_fu_723_p1 = tmp_4_reg_1247;

assign tmp_6_fu_729_p1 = feature_src_01_reg_1262;

assign tmp_7_cast_fu_756_p1 = ap_phi_mux_kr_phi_fu_535_p4;

assign tmp_7_fu_744_p1 = indvar_reg_509[0:0];

assign tmp_7_mid1_cast1_fu_864_p1 = kr_1_fu_840_p2;

assign tmp_7_mid1_cast_fu_1072_p1 = kr_1_reg_1371;

assign tmp_7_mid2_cast_fu_1096_p1 = kr_cast6_mid2_reg_1377;

assign tmp_8_fu_792_p2 = (ap_phi_mux_r_phi_fu_583_p4 + kr_cast6_fu_752_p1);

assign tmp_8_mid1_fu_942_p2 = (r_1_fu_928_p2 + kr_cast6_mid2_cast_fu_860_p1);

assign tmp_9_cast_fu_782_p1 = ap_phi_mux_kc_phi_fu_559_p4;

assign tmp_9_fu_760_p3 = {{ap_phi_mux_kr_phi_fu_535_p4}, {2'd0}};

assign tmp_9_mid1_fu_1126_p1 = kc_1_reg_1384;

assign tmp_cast_fu_711_p1 = tmp_reg_1227;

assign tmp_s_fu_701_p1 = weight_src_0_03_reg_1257;

always @ (posedge ap_clk) begin
    tmp_cast_reg_1273[30] <= 1'b0;
    tmp_1_cast_reg_1278[30] <= 1'b0;
    tmp_2_cast_reg_1283[30] <= 1'b0;
    tmp_4_cast_reg_1288[30] <= 1'b0;
    tmp_5_cast_reg_1293[30] <= 1'b0;
    tmp_16_cast_reg_1298[30] <= 1'b0;
    tmp_6_reg_1303[63:30] <= 34'b0000000000000000000000000000000000;
    tmp_49_cast_reg_1436[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter1_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter2_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter3_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter4_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter5_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter6_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter7_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter8_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter9_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter10_reg[30:16] <= 15'b000000000000000;
    tmp_49_cast_reg_1436_pp1_iter11_reg[30:16] <= 15'b000000000000000;
    gmem_addr_2_reg_1450[31] <= 1'b0;
    gmem_addr_2_reg_1450_pp1_iter1_reg[31] <= 1'b0;
    gmem_addr_3_reg_1577[31] <= 1'b0;
    gmem_addr_3_reg_1577_pp1_iter4_reg[31] <= 1'b0;
    gmem_addr_4_reg_1594[31] <= 1'b0;
    gmem_addr_4_reg_1594_pp1_iter7_reg[31] <= 1'b0;
    gmem_addr_5_reg_1611[31] <= 1'b0;
    gmem_addr_5_reg_1611_pp1_iter9_reg[31] <= 1'b0;
    gmem_addr_6_reg_1633[31] <= 1'b0;
    gmem_addr_6_reg_1633_pp1_iter12_reg[31] <= 1'b0;
    gmem_addr_7_reg_1645[31] <= 1'b0;
    gmem_addr_7_reg_1645_pp1_iter16_reg[31] <= 1'b0;
end

endmodule //conv1
