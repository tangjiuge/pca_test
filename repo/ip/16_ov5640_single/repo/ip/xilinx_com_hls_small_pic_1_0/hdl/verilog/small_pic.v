// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="small_pic,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=5302,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2472,HLS_SYN_LUT=3395,HLS_VERSION=2018_3}" *)

module small_pic (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_pp0_stage0 = 21'd2;
parameter    ap_ST_fsm_pp0_stage1 = 21'd4;
parameter    ap_ST_fsm_pp0_stage2 = 21'd8;
parameter    ap_ST_fsm_pp0_stage3 = 21'd16;
parameter    ap_ST_fsm_pp0_stage4 = 21'd32;
parameter    ap_ST_fsm_pp0_stage5 = 21'd64;
parameter    ap_ST_fsm_pp0_stage6 = 21'd128;
parameter    ap_ST_fsm_pp0_stage7 = 21'd256;
parameter    ap_ST_fsm_state116 = 21'd512;
parameter    ap_ST_fsm_state117 = 21'd1024;
parameter    ap_ST_fsm_state118 = 21'd2048;
parameter    ap_ST_fsm_state119 = 21'd4096;
parameter    ap_ST_fsm_state120 = 21'd8192;
parameter    ap_ST_fsm_state121 = 21'd16384;
parameter    ap_ST_fsm_state122 = 21'd32768;
parameter    ap_ST_fsm_state123 = 21'd65536;
parameter    ap_ST_fsm_state124 = 21'd131072;
parameter    ap_ST_fsm_state125 = 21'd262144;
parameter    ap_ST_fsm_state126 = 21'd524288;
parameter    ap_ST_fsm_state127 = 21'd1048576;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] image_src;
wire   [31:0] small_pic_dst;
wire   [31:0] therehold;
wire   [31:0] distingish_dst;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state116;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_1310;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage4;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter4_reg;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_pp0_stage2;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter5_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter6_reg;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter7_reg;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter8_reg;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter9_reg;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter10_reg;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter11_reg;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter12_reg;
reg    ap_enable_reg_pp0_iter13;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter13_reg;
reg    ap_enable_reg_pp0_iter14;
reg   [0:0] exitcond_flatten_reg_1310_pp0_iter14_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [7:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [9:0] indvar_flatten_reg_380;
reg   [12:0] indvars_iv_reg_391;
reg   [9:0] step_img_x_reg_402;
reg   [12:0] small_target_index_reg_413;
reg   [9:0] step_img_y_reg_424;
reg   [12:0] small_target_index_s_reg_435;
wire  signed [32:0] tmp_cast_fu_449_p1;
reg  signed [32:0] tmp_cast_reg_1280;
wire  signed [33:0] tmp_1_cast_fu_457_p1;
reg  signed [33:0] tmp_1_cast_reg_1292;
reg   [31:0] gmem_addr_reg_1304;
wire   [0:0] exitcond_flatten_fu_493_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
reg    ap_sig_ioackin_gmem_AWREADY;
reg    ap_block_state10_io;
wire    ap_block_state18_pp0_stage0_iter2;
wire    ap_block_state26_pp0_stage0_iter3;
wire    ap_block_state34_pp0_stage0_iter4;
wire    ap_block_state42_pp0_stage0_iter5;
wire    ap_block_state50_pp0_stage0_iter6;
reg    ap_block_state58_pp0_stage0_iter7;
wire    ap_block_state66_pp0_stage0_iter8;
wire    ap_block_state74_pp0_stage0_iter9;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_block_state74_io;
wire    ap_block_state82_pp0_stage0_iter10;
reg    ap_sig_ioackin_gmem_WREADY;
reg    ap_block_state82_io;
wire    ap_block_state90_pp0_stage0_iter11;
wire    ap_block_state98_pp0_stage0_iter12;
wire    ap_block_state106_pp0_stage0_iter13;
wire    ap_block_state114_pp0_stage0_iter14;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] indvar_flatten_next_fu_499_p2;
reg   [9:0] indvar_flatten_next_reg_1314;
wire   [9:0] step_img_y_mid2_fu_511_p3;
reg   [9:0] step_img_y_mid2_reg_1319;
reg   [9:0] step_img_y_mid2_reg_1319_pp0_iter1_reg;
reg   [9:0] step_img_y_mid2_reg_1319_pp0_iter2_reg;
reg   [9:0] step_img_y_mid2_reg_1319_pp0_iter3_reg;
wire   [12:0] small_target_index_s_2_fu_525_p3;
reg   [12:0] small_target_index_s_2_reg_1326;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter1_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter2_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter3_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter4_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter5_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter6_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter7_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter8_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter9_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter10_reg;
reg   [12:0] small_target_index_s_2_reg_1326_pp0_iter11_reg;
wire   [19:0] tmp_2_mid2_fu_565_p3;
reg   [19:0] tmp_2_mid2_reg_1339;
reg   [19:0] tmp_2_mid2_reg_1339_pp0_iter1_reg;
reg   [19:0] tmp_2_mid2_reg_1339_pp0_iter2_reg;
reg   [19:0] tmp_2_mid2_reg_1339_pp0_iter3_reg;
wire   [12:0] indvars_iv_mid2_fu_579_p3;
reg   [12:0] indvars_iv_mid2_reg_1350;
wire   [9:0] step_img_x_mid2_fu_587_p3;
reg   [9:0] step_img_x_mid2_reg_1355;
wire   [12:0] small_target_index_m_fu_595_p3;
reg   [12:0] small_target_index_m_reg_1360;
reg   [31:0] gmem_addr_1_reg_1365;
reg   [31:0] gmem_addr_2_reg_1371;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
reg    ap_block_state17_io;
wire    ap_block_state25_pp0_stage7_iter2;
reg    ap_block_state25_io;
wire    ap_block_state33_pp0_stage7_iter3;
wire    ap_block_state41_pp0_stage7_iter4;
wire    ap_block_state49_pp0_stage7_iter5;
wire    ap_block_state57_pp0_stage7_iter6;
wire    ap_block_state65_pp0_stage7_iter7;
reg    ap_block_state73_pp0_stage7_iter8;
reg    ap_block_state81_pp0_stage7_iter9;
reg    ap_block_state81_io;
wire    ap_block_state89_pp0_stage7_iter10;
wire    ap_block_state97_pp0_stage7_iter11;
wire    ap_block_state105_pp0_stage7_iter12;
wire    ap_block_state113_pp0_stage7_iter13;
reg    ap_block_pp0_stage7_11001;
wire   [12:0] tmp_8_7_fu_676_p2;
reg   [12:0] tmp_8_7_reg_1377;
wire   [9:0] step_img_y_1_7_fu_681_p2;
reg   [9:0] step_img_y_1_7_reg_1382;
reg   [7:0] gmem_addr_1_read_reg_1387;
reg   [31:0] gmem_addr_3_reg_1392;
wire    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state16_pp0_stage6_iter1;
reg    ap_block_state24_pp0_stage6_iter2;
reg    ap_block_state24_io;
wire    ap_block_state32_pp0_stage6_iter3;
wire    ap_block_state40_pp0_stage6_iter4;
wire    ap_block_state48_pp0_stage6_iter5;
wire    ap_block_state56_pp0_stage6_iter6;
wire    ap_block_state64_pp0_stage6_iter7;
wire    ap_block_state72_pp0_stage6_iter8;
wire    ap_block_state80_pp0_stage6_iter9;
wire    ap_block_state88_pp0_stage6_iter10;
reg    ap_block_state88_io;
wire    ap_block_state96_pp0_stage6_iter11;
reg    ap_block_state96_io;
wire    ap_block_state104_pp0_stage6_iter12;
wire    ap_block_state112_pp0_stage6_iter13;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] gmem_addr_4_reg_1398;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state23_pp0_stage5_iter2;
wire    ap_block_state31_pp0_stage5_iter3;
reg    ap_block_state31_io;
wire    ap_block_state39_pp0_stage5_iter4;
reg    ap_block_state39_io;
wire    ap_block_state47_pp0_stage5_iter5;
wire    ap_block_state55_pp0_stage5_iter6;
wire    ap_block_state63_pp0_stage5_iter7;
wire    ap_block_state71_pp0_stage5_iter8;
wire    ap_block_state79_pp0_stage5_iter9;
reg    ap_block_state87_pp0_stage5_iter10;
reg    ap_block_state95_pp0_stage5_iter11;
reg    ap_block_state95_io;
wire    ap_block_state103_pp0_stage5_iter12;
wire    ap_block_state111_pp0_stage5_iter13;
reg    ap_block_pp0_stage5_11001;
reg   [7:0] gmem_addr_3_read_reg_1404;
reg   [31:0] gmem_addr_5_reg_1409;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state22_pp0_stage4_iter2;
reg    ap_block_state30_pp0_stage4_iter3;
reg    ap_block_state38_pp0_stage4_iter4;
reg    ap_block_state38_io;
wire    ap_block_state46_pp0_stage4_iter5;
wire    ap_block_state54_pp0_stage4_iter6;
wire    ap_block_state62_pp0_stage4_iter7;
wire    ap_block_state70_pp0_stage4_iter8;
wire    ap_block_state78_pp0_stage4_iter9;
wire    ap_block_state86_pp0_stage4_iter10;
wire    ap_block_state94_pp0_stage4_iter11;
wire    ap_block_state102_pp0_stage4_iter12;
reg    ap_block_state102_io;
wire    ap_block_state110_pp0_stage4_iter13;
reg    ap_block_state110_io;
reg    ap_block_pp0_stage4_11001;
reg   [31:0] gmem_addr_7_reg_1415;
reg   [31:0] gmem_addr_7_reg_1415_pp0_iter4_reg;
reg   [31:0] gmem_addr_9_reg_1421;
reg   [31:0] gmem_addr_9_reg_1421_pp0_iter4_reg;
reg   [31:0] gmem_addr_9_reg_1421_pp0_iter5_reg;
reg   [31:0] gmem_addr_9_reg_1421_pp0_iter6_reg;
reg   [31:0] gmem_addr_11_reg_1427;
reg   [31:0] gmem_addr_11_reg_1427_pp0_iter4_reg;
reg   [31:0] gmem_addr_11_reg_1427_pp0_iter5_reg;
reg   [31:0] gmem_addr_11_reg_1427_pp0_iter6_reg;
reg   [31:0] gmem_addr_11_reg_1427_pp0_iter7_reg;
reg   [31:0] gmem_addr_11_reg_1427_pp0_iter8_reg;
reg   [31:0] gmem_addr_13_reg_1433;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter4_reg;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter5_reg;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter6_reg;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter7_reg;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter8_reg;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter9_reg;
reg   [31:0] gmem_addr_13_reg_1433_pp0_iter10_reg;
reg   [31:0] gmem_addr_15_reg_1439;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter4_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter5_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter6_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter7_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter8_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter9_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter10_reg;
reg   [31:0] gmem_addr_15_reg_1439_pp0_iter11_reg;
reg   [31:0] gmem_addr_6_reg_1445;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state21_pp0_stage3_iter2;
wire    ap_block_state29_pp0_stage3_iter3;
wire    ap_block_state37_pp0_stage3_iter4;
wire    ap_block_state45_pp0_stage3_iter5;
reg    ap_block_state45_io;
wire    ap_block_state53_pp0_stage3_iter6;
reg    ap_block_state53_io;
wire    ap_block_state61_pp0_stage3_iter7;
wire    ap_block_state69_pp0_stage3_iter8;
wire    ap_block_state77_pp0_stage3_iter9;
wire    ap_block_state85_pp0_stage3_iter10;
wire    ap_block_state93_pp0_stage3_iter11;
reg    ap_block_state101_pp0_stage3_iter12;
reg    ap_block_state109_pp0_stage3_iter13;
reg    ap_block_state109_io;
reg    ap_block_pp0_stage3_11001;
reg   [7:0] gmem_addr_5_read_reg_1451;
reg   [31:0] gmem_addr_8_reg_1456;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
wire    ap_block_state11_pp0_stage1_iter1;
reg    ap_block_state11_io;
wire    ap_block_state19_pp0_stage1_iter2;
wire    ap_block_state27_pp0_stage1_iter3;
wire    ap_block_state35_pp0_stage1_iter4;
wire    ap_block_state43_pp0_stage1_iter5;
wire    ap_block_state51_pp0_stage1_iter6;
wire    ap_block_state59_pp0_stage1_iter7;
reg    ap_block_state67_pp0_stage1_iter8;
reg    ap_block_state67_io;
wire    ap_block_state75_pp0_stage1_iter9;
wire    ap_block_state83_pp0_stage1_iter10;
wire    ap_block_state91_pp0_stage1_iter11;
wire    ap_block_state99_pp0_stage1_iter12;
wire    ap_block_state107_pp0_stage1_iter13;
reg    ap_block_state115_pp0_stage1_iter14;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] gmem_addr_7_read_reg_1462;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state20_pp0_stage2_iter2;
wire    ap_block_state28_pp0_stage2_iter3;
wire    ap_block_state36_pp0_stage2_iter4;
reg    ap_block_state44_pp0_stage2_iter5;
reg    ap_block_state52_pp0_stage2_iter6;
reg    ap_block_state52_io;
wire    ap_block_state60_pp0_stage2_iter7;
reg    ap_block_state60_io;
wire    ap_block_state68_pp0_stage2_iter8;
reg    ap_block_state68_io;
wire    ap_block_state76_pp0_stage2_iter9;
wire    ap_block_state84_pp0_stage2_iter10;
wire    ap_block_state92_pp0_stage2_iter11;
wire    ap_block_state100_pp0_stage2_iter12;
wire    ap_block_state108_pp0_stage2_iter13;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] gmem_addr_10_reg_1467;
reg   [7:0] gmem_addr_9_read_reg_1473;
reg   [31:0] gmem_addr_12_reg_1478;
reg   [7:0] gmem_addr_11_read_reg_1484;
reg   [31:0] gmem_addr_14_reg_1489;
reg   [31:0] gmem_addr_16_reg_1495;
reg   [31:0] gmem_addr_16_reg_1495_pp0_iter12_reg;
reg   [7:0] gmem_addr_13_read_reg_1501;
reg   [7:0] gmem_addr_15_read_reg_1506;
reg   [7:0] gmem_addr_read_reg_1511;
wire    ap_CS_fsm_state124;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_384_p4;
reg   [12:0] ap_phi_mux_indvars_iv_phi_fu_395_p4;
reg   [9:0] ap_phi_mux_step_img_x_phi_fu_406_p4;
reg   [12:0] ap_phi_mux_small_target_index_phi_fu_417_p4;
reg   [9:0] ap_phi_mux_step_img_y_phi_fu_428_p4;
reg   [12:0] ap_phi_mux_small_target_index_s_phi_fu_439_p4;
wire  signed [63:0] tmp_1_fu_453_p1;
wire  signed [63:0] image_src2_sum_cast_fu_648_p1;
wire  signed [63:0] small_pic_dst4_sum_c_fu_666_p1;
wire  signed [63:0] image_src2_sum7_cast_fu_735_p1;
wire  signed [63:0] small_pic_dst4_sum8_s_fu_759_p1;
wire  signed [63:0] image_src2_sum9_cast_fu_867_p1;
wire  signed [63:0] image_src2_sum1_cast_fu_918_p1;
wire  signed [63:0] image_src2_sum2_cast_fu_969_p1;
wire  signed [63:0] image_src2_sum3_cast_fu_1020_p1;
wire  signed [63:0] image_src2_sum4_cast_fu_1071_p1;
wire  signed [63:0] image_src2_sum5_cast_fu_1122_p1;
wire  signed [63:0] small_pic_dst4_sum1_s_fu_1146_p1;
wire  signed [63:0] small_pic_dst4_sum2_s_fu_1170_p1;
wire  signed [63:0] small_pic_dst4_sum3_s_fu_1194_p1;
wire  signed [63:0] small_pic_dst4_sum4_s_fu_1218_p1;
wire  signed [63:0] small_pic_dst4_sum5_s_fu_1242_p1;
wire  signed [63:0] small_pic_dst4_sum6_s_fu_1266_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_block_pp0_stage0_01001;
reg    ap_reg_ioackin_gmem_WREADY;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage2_01001;
wire  signed [31:0] grp_fu_446_p0;
wire  signed [31:0] tmp_1_fu_453_p0;
wire  signed [31:0] tmp_1_cast_fu_457_p0;
wire   [17:0] p_shl1_fu_475_p3;
wire   [19:0] p_shl1_cast_fu_483_p1;
wire   [19:0] p_shl_fu_467_p3;
wire   [0:0] exitcond_fu_505_p2;
wire   [12:0] small_target_index_1_fu_519_p2;
wire   [9:0] step_img_x_s_fu_533_p2;
wire   [17:0] p_shl1_mid1_fu_547_p3;
wire   [19:0] p_shl_mid1_fu_539_p3;
wire   [19:0] p_shl1_cast_mid1_fu_555_p1;
wire   [19:0] tmp_2_mid1_fu_559_p2;
wire   [19:0] tmp_2_fu_487_p2;
wire   [12:0] indvars_iv_next_dup_fu_573_p2;
wire   [19:0] step_img_y_cast_fu_603_p1;
wire   [19:0] pixel_index_fu_607_p2;
wire   [21:0] p_shl2_fu_617_p3;
wire   [22:0] p_shl2_cast_fu_625_p1;
wire   [22:0] pixel_index_cast1_fu_613_p1;
wire   [22:0] tmp_5_fu_629_p2;
wire  signed [31:0] tmp_5_cast_fu_635_p1;
wire   [33:0] tmp_6_cast_fu_639_p1;
wire   [33:0] image_src2_sum_fu_643_p2;
wire   [32:0] tmp_7_cast_fu_658_p1;
wire   [32:0] small_pic_dst4_sum_fu_661_p2;
wire   [9:0] step_img_y_1_s_fu_686_p2;
wire   [19:0] step_img_y_1_cast_fu_691_p1;
wire   [19:0] pixel_index_1_fu_695_p2;
wire   [21:0] p_shl2_1_fu_704_p3;
wire   [22:0] p_shl2_1_cast_fu_712_p1;
wire   [22:0] pixel_index_1_cast1_fu_700_p1;
wire   [22:0] tmp_5_1_fu_716_p2;
wire  signed [31:0] tmp_5_1_cast_fu_722_p1;
wire   [33:0] tmp_6_1_cast_fu_726_p1;
wire   [33:0] image_src2_sum7_fu_730_p2;
wire   [12:0] tmp_8_s_fu_745_p2;
wire   [32:0] tmp_7_1_cast_fu_750_p1;
wire   [32:0] small_pic_dst4_sum8_fu_754_p2;
wire   [19:0] tmp17_cast_mid2_v_fu_769_p2;
wire   [19:0] tmp28_cast_mid2_v_fu_778_p2;
wire   [19:0] tmp39_cast_mid2_v_fu_787_p2;
wire   [19:0] tmp410_cast_mid2_v_fu_796_p2;
wire   [19:0] tmp511_cast_mid2_v_fu_805_p2;
wire   [19:0] tmp612_cast_mid2_v_fu_814_p2;
wire   [20:0] tmp17_cast_mid2_fu_774_p1;
wire   [20:0] step_img_y_cast1_fu_823_p1;
wire   [20:0] pixel_index_2_fu_826_p2;
wire   [22:0] p_shl2_2_fu_836_p3;
wire   [23:0] p_shl2_2_cast_fu_844_p1;
wire   [23:0] pixel_index_2_cast1_fu_832_p1;
wire   [23:0] tmp_5_2_fu_848_p2;
wire  signed [31:0] tmp_5_2_cast_fu_854_p1;
wire   [33:0] tmp_6_2_cast_fu_858_p1;
wire   [33:0] image_src2_sum9_fu_862_p2;
wire   [20:0] tmp28_cast_mid2_fu_783_p1;
wire   [20:0] pixel_index_3_fu_877_p2;
wire   [22:0] p_shl2_3_fu_887_p3;
wire   [23:0] p_shl2_3_cast_fu_895_p1;
wire   [23:0] pixel_index_3_cast1_fu_883_p1;
wire   [23:0] tmp_5_3_fu_899_p2;
wire  signed [31:0] tmp_5_3_cast_fu_905_p1;
wire   [33:0] tmp_6_3_cast_fu_909_p1;
wire   [33:0] image_src2_sum1_fu_913_p2;
wire   [20:0] tmp39_cast_mid2_fu_792_p1;
wire   [20:0] pixel_index_4_fu_928_p2;
wire   [22:0] p_shl2_4_fu_938_p3;
wire   [23:0] p_shl2_4_cast_fu_946_p1;
wire   [23:0] pixel_index_4_cast1_fu_934_p1;
wire   [23:0] tmp_5_4_fu_950_p2;
wire  signed [31:0] tmp_5_4_cast_fu_956_p1;
wire   [33:0] tmp_6_4_cast_fu_960_p1;
wire   [33:0] image_src2_sum2_fu_964_p2;
wire   [20:0] tmp410_cast_mid2_fu_801_p1;
wire   [20:0] pixel_index_5_fu_979_p2;
wire   [22:0] p_shl2_5_fu_989_p3;
wire   [23:0] p_shl2_5_cast_fu_997_p1;
wire   [23:0] pixel_index_5_cast1_fu_985_p1;
wire   [23:0] tmp_5_5_fu_1001_p2;
wire  signed [31:0] tmp_5_5_cast_fu_1007_p1;
wire   [33:0] tmp_6_5_cast_fu_1011_p1;
wire   [33:0] image_src2_sum3_fu_1015_p2;
wire   [20:0] tmp511_cast_mid2_fu_810_p1;
wire   [20:0] pixel_index_6_fu_1030_p2;
wire   [22:0] p_shl2_6_fu_1040_p3;
wire   [23:0] p_shl2_6_cast_fu_1048_p1;
wire   [23:0] pixel_index_6_cast1_fu_1036_p1;
wire   [23:0] tmp_5_6_fu_1052_p2;
wire  signed [31:0] tmp_5_6_cast_fu_1058_p1;
wire   [33:0] tmp_6_6_cast_fu_1062_p1;
wire   [33:0] image_src2_sum4_fu_1066_p2;
wire   [20:0] tmp612_cast_mid2_fu_819_p1;
wire   [20:0] pixel_index_7_fu_1081_p2;
wire   [22:0] p_shl2_7_fu_1091_p3;
wire   [23:0] p_shl2_7_cast_fu_1099_p1;
wire   [23:0] pixel_index_7_cast1_fu_1087_p1;
wire   [23:0] tmp_5_7_fu_1103_p2;
wire  signed [31:0] tmp_5_7_cast_fu_1109_p1;
wire   [33:0] tmp_6_7_cast_fu_1113_p1;
wire   [33:0] image_src2_sum5_fu_1117_p2;
wire   [12:0] tmp_8_1_fu_1132_p2;
wire   [32:0] tmp_7_2_cast_fu_1137_p1;
wire   [32:0] small_pic_dst4_sum1_fu_1141_p2;
wire   [12:0] tmp_8_2_fu_1156_p2;
wire   [32:0] tmp_7_3_cast_fu_1161_p1;
wire   [32:0] small_pic_dst4_sum2_fu_1165_p2;
wire   [12:0] tmp_8_3_fu_1180_p2;
wire   [32:0] tmp_7_4_cast_fu_1185_p1;
wire   [32:0] small_pic_dst4_sum3_fu_1189_p2;
wire   [12:0] tmp_8_4_fu_1204_p2;
wire   [32:0] tmp_7_5_cast_fu_1209_p1;
wire   [32:0] small_pic_dst4_sum4_fu_1213_p2;
wire   [12:0] tmp_8_5_fu_1228_p2;
wire   [32:0] tmp_7_6_cast_fu_1233_p1;
wire   [32:0] small_pic_dst4_sum5_fu_1237_p2;
wire   [12:0] tmp_8_6_fu_1252_p2;
wire   [32:0] tmp_7_7_cast_fu_1257_p1;
wire   [32:0] small_pic_dst4_sum6_fu_1261_p2;
wire   [31:0] grp_fu_446_p1;
wire    ap_CS_fsm_state127;
reg   [20:0] ap_NS_fsm;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1050;
reg    ap_condition_1091;
reg    ap_condition_1131;
reg    ap_condition_1171;
reg    ap_condition_1206;
reg    ap_condition_1236;
reg    ap_condition_1266;
reg    ap_condition_1296;
reg    ap_condition_1068;
reg    ap_condition_1108;
reg    ap_condition_1148;
reg    ap_condition_1188;
reg    ap_condition_1218;
reg    ap_condition_1248;
reg    ap_condition_1278;
reg    ap_condition_1308;
reg    ap_condition_1078;
reg    ap_condition_1117;
reg    ap_condition_1157;
reg    ap_condition_1197;
reg    ap_condition_1227;
reg    ap_condition_1257;
reg    ap_condition_1287;
reg    ap_condition_1317;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

small_pic_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
small_pic_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(grp_fu_446_p1),
    .image_src(image_src),
    .small_pic_dst(small_pic_dst),
    .therehold(therehold),
    .distingish_dst(distingish_dst)
);

small_pic_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
small_pic_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd1),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

small_pic_sitofp_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
small_pic_sitofp_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_446_p0),
    .ce(1'b1),
    .dout(grp_fu_446_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310 == 1'd0)) | ((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state116)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state116)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)))) begin
            ap_reg_ioackin_gmem_AWREADY <= 1'b0;
        end else if ((((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((gmem_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
            ap_reg_ioackin_gmem_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)))) begin
            ap_reg_ioackin_gmem_WREADY <= 1'b0;
        end else if ((((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((gmem_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
            ap_reg_ioackin_gmem_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        indvar_flatten_reg_380 <= indvar_flatten_next_reg_1314;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_380 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        indvars_iv_reg_391 <= indvars_iv_mid2_reg_1350;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv_reg_391 <= 13'd72;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        small_target_index_reg_413 <= small_target_index_m_reg_1360;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        small_target_index_reg_413 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        small_target_index_s_reg_435 <= tmp_8_7_reg_1377;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        small_target_index_s_reg_435 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        step_img_x_reg_402 <= step_img_x_mid2_reg_1355;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        step_img_x_reg_402 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        step_img_y_reg_424 <= step_img_y_1_7_reg_1382;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        step_img_y_reg_424 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1310 <= exitcond_flatten_fu_493_p2;
        exitcond_flatten_reg_1310_pp0_iter10_reg <= exitcond_flatten_reg_1310_pp0_iter9_reg;
        exitcond_flatten_reg_1310_pp0_iter11_reg <= exitcond_flatten_reg_1310_pp0_iter10_reg;
        exitcond_flatten_reg_1310_pp0_iter12_reg <= exitcond_flatten_reg_1310_pp0_iter11_reg;
        exitcond_flatten_reg_1310_pp0_iter13_reg <= exitcond_flatten_reg_1310_pp0_iter12_reg;
        exitcond_flatten_reg_1310_pp0_iter14_reg <= exitcond_flatten_reg_1310_pp0_iter13_reg;
        exitcond_flatten_reg_1310_pp0_iter1_reg <= exitcond_flatten_reg_1310;
        exitcond_flatten_reg_1310_pp0_iter2_reg <= exitcond_flatten_reg_1310_pp0_iter1_reg;
        exitcond_flatten_reg_1310_pp0_iter3_reg <= exitcond_flatten_reg_1310_pp0_iter2_reg;
        exitcond_flatten_reg_1310_pp0_iter4_reg <= exitcond_flatten_reg_1310_pp0_iter3_reg;
        exitcond_flatten_reg_1310_pp0_iter5_reg <= exitcond_flatten_reg_1310_pp0_iter4_reg;
        exitcond_flatten_reg_1310_pp0_iter6_reg <= exitcond_flatten_reg_1310_pp0_iter5_reg;
        exitcond_flatten_reg_1310_pp0_iter7_reg <= exitcond_flatten_reg_1310_pp0_iter6_reg;
        exitcond_flatten_reg_1310_pp0_iter8_reg <= exitcond_flatten_reg_1310_pp0_iter7_reg;
        exitcond_flatten_reg_1310_pp0_iter9_reg <= exitcond_flatten_reg_1310_pp0_iter8_reg;
        small_target_index_s_2_reg_1326_pp0_iter10_reg <= small_target_index_s_2_reg_1326_pp0_iter9_reg;
        small_target_index_s_2_reg_1326_pp0_iter11_reg <= small_target_index_s_2_reg_1326_pp0_iter10_reg;
        small_target_index_s_2_reg_1326_pp0_iter1_reg <= small_target_index_s_2_reg_1326;
        small_target_index_s_2_reg_1326_pp0_iter2_reg <= small_target_index_s_2_reg_1326_pp0_iter1_reg;
        small_target_index_s_2_reg_1326_pp0_iter3_reg <= small_target_index_s_2_reg_1326_pp0_iter2_reg;
        small_target_index_s_2_reg_1326_pp0_iter4_reg <= small_target_index_s_2_reg_1326_pp0_iter3_reg;
        small_target_index_s_2_reg_1326_pp0_iter5_reg <= small_target_index_s_2_reg_1326_pp0_iter4_reg;
        small_target_index_s_2_reg_1326_pp0_iter6_reg <= small_target_index_s_2_reg_1326_pp0_iter5_reg;
        small_target_index_s_2_reg_1326_pp0_iter7_reg <= small_target_index_s_2_reg_1326_pp0_iter6_reg;
        small_target_index_s_2_reg_1326_pp0_iter8_reg <= small_target_index_s_2_reg_1326_pp0_iter7_reg;
        small_target_index_s_2_reg_1326_pp0_iter9_reg <= small_target_index_s_2_reg_1326_pp0_iter8_reg;
        step_img_y_mid2_reg_1319_pp0_iter1_reg <= step_img_y_mid2_reg_1319;
        step_img_y_mid2_reg_1319_pp0_iter2_reg <= step_img_y_mid2_reg_1319_pp0_iter1_reg;
        step_img_y_mid2_reg_1319_pp0_iter3_reg <= step_img_y_mid2_reg_1319_pp0_iter2_reg;
        tmp_2_mid2_reg_1339_pp0_iter1_reg[19 : 8] <= tmp_2_mid2_reg_1339[19 : 8];
        tmp_2_mid2_reg_1339_pp0_iter2_reg[19 : 8] <= tmp_2_mid2_reg_1339_pp0_iter1_reg[19 : 8];
        tmp_2_mid2_reg_1339_pp0_iter3_reg[19 : 8] <= tmp_2_mid2_reg_1339_pp0_iter2_reg[19 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0))) begin
        gmem_addr_10_reg_1467 <= small_pic_dst4_sum3_s_fu_1194_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0))) begin
        gmem_addr_11_read_reg_1484 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0))) begin
        gmem_addr_11_reg_1427 <= image_src2_sum3_cast_fu_1020_p1;
        gmem_addr_13_reg_1433 <= image_src2_sum4_cast_fu_1071_p1;
        gmem_addr_15_reg_1439 <= image_src2_sum5_cast_fu_1122_p1;
        gmem_addr_5_reg_1409 <= image_src2_sum9_cast_fu_867_p1;
        gmem_addr_7_reg_1415 <= image_src2_sum1_cast_fu_918_p1;
        gmem_addr_9_reg_1421 <= image_src2_sum2_cast_fu_969_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        gmem_addr_11_reg_1427_pp0_iter4_reg <= gmem_addr_11_reg_1427;
        gmem_addr_11_reg_1427_pp0_iter5_reg <= gmem_addr_11_reg_1427_pp0_iter4_reg;
        gmem_addr_11_reg_1427_pp0_iter6_reg <= gmem_addr_11_reg_1427_pp0_iter5_reg;
        gmem_addr_11_reg_1427_pp0_iter7_reg <= gmem_addr_11_reg_1427_pp0_iter6_reg;
        gmem_addr_11_reg_1427_pp0_iter8_reg <= gmem_addr_11_reg_1427_pp0_iter7_reg;
        gmem_addr_13_reg_1433_pp0_iter10_reg <= gmem_addr_13_reg_1433_pp0_iter9_reg;
        gmem_addr_13_reg_1433_pp0_iter4_reg <= gmem_addr_13_reg_1433;
        gmem_addr_13_reg_1433_pp0_iter5_reg <= gmem_addr_13_reg_1433_pp0_iter4_reg;
        gmem_addr_13_reg_1433_pp0_iter6_reg <= gmem_addr_13_reg_1433_pp0_iter5_reg;
        gmem_addr_13_reg_1433_pp0_iter7_reg <= gmem_addr_13_reg_1433_pp0_iter6_reg;
        gmem_addr_13_reg_1433_pp0_iter8_reg <= gmem_addr_13_reg_1433_pp0_iter7_reg;
        gmem_addr_13_reg_1433_pp0_iter9_reg <= gmem_addr_13_reg_1433_pp0_iter8_reg;
        gmem_addr_15_reg_1439_pp0_iter10_reg <= gmem_addr_15_reg_1439_pp0_iter9_reg;
        gmem_addr_15_reg_1439_pp0_iter11_reg <= gmem_addr_15_reg_1439_pp0_iter10_reg;
        gmem_addr_15_reg_1439_pp0_iter4_reg <= gmem_addr_15_reg_1439;
        gmem_addr_15_reg_1439_pp0_iter5_reg <= gmem_addr_15_reg_1439_pp0_iter4_reg;
        gmem_addr_15_reg_1439_pp0_iter6_reg <= gmem_addr_15_reg_1439_pp0_iter5_reg;
        gmem_addr_15_reg_1439_pp0_iter7_reg <= gmem_addr_15_reg_1439_pp0_iter6_reg;
        gmem_addr_15_reg_1439_pp0_iter8_reg <= gmem_addr_15_reg_1439_pp0_iter7_reg;
        gmem_addr_15_reg_1439_pp0_iter9_reg <= gmem_addr_15_reg_1439_pp0_iter8_reg;
        gmem_addr_16_reg_1495_pp0_iter12_reg <= gmem_addr_16_reg_1495;
        gmem_addr_7_reg_1415_pp0_iter4_reg <= gmem_addr_7_reg_1415;
        gmem_addr_9_reg_1421_pp0_iter4_reg <= gmem_addr_9_reg_1421;
        gmem_addr_9_reg_1421_pp0_iter5_reg <= gmem_addr_9_reg_1421_pp0_iter4_reg;
        gmem_addr_9_reg_1421_pp0_iter6_reg <= gmem_addr_9_reg_1421_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0))) begin
        gmem_addr_12_reg_1478 <= small_pic_dst4_sum4_s_fu_1218_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0))) begin
        gmem_addr_13_read_reg_1501 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0))) begin
        gmem_addr_14_reg_1489 <= small_pic_dst4_sum5_s_fu_1242_p1;
        gmem_addr_16_reg_1495 <= small_pic_dst4_sum6_s_fu_1266_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0))) begin
        gmem_addr_15_read_reg_1506 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        gmem_addr_1_read_reg_1387 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_493_p2 == 1'd0))) begin
        gmem_addr_1_reg_1365 <= image_src2_sum_cast_fu_648_p1;
        small_target_index_s_2_reg_1326 <= small_target_index_s_2_fu_525_p3;
        step_img_y_mid2_reg_1319 <= step_img_y_mid2_fu_511_p3;
        tmp_2_mid2_reg_1339[19 : 8] <= tmp_2_mid2_fu_565_p3[19 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        gmem_addr_2_reg_1371 <= small_pic_dst4_sum_c_fu_666_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0))) begin
        gmem_addr_3_read_reg_1404 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_3_reg_1392 <= image_src2_sum7_cast_fu_735_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0))) begin
        gmem_addr_4_reg_1398 <= small_pic_dst4_sum8_s_fu_759_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0))) begin
        gmem_addr_5_read_reg_1451 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0))) begin
        gmem_addr_6_reg_1445 <= small_pic_dst4_sum1_s_fu_1146_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0))) begin
        gmem_addr_7_read_reg_1462 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0))) begin
        gmem_addr_8_reg_1456 <= small_pic_dst4_sum2_s_fu_1170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0))) begin
        gmem_addr_9_read_reg_1473 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state123))) begin
        gmem_addr_read_reg_1511 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem_addr_reg_1304 <= tmp_1_fu_453_p1;
        tmp_1_cast_reg_1292 <= tmp_1_cast_fu_457_p1;
        tmp_cast_reg_1280 <= tmp_cast_fu_449_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1314 <= indvar_flatten_next_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_493_p2 == 1'd0))) begin
        indvars_iv_mid2_reg_1350 <= indvars_iv_mid2_fu_579_p3;
        small_target_index_m_reg_1360 <= small_target_index_m_fu_595_p3;
        step_img_x_mid2_reg_1355 <= step_img_x_mid2_fu_587_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        step_img_y_1_7_reg_1382 <= step_img_y_1_7_fu_681_p2;
        tmp_8_7_reg_1377 <= tmp_8_7_fu_676_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_493_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_384_p4 = indvar_flatten_next_reg_1314;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_384_p4 = indvar_flatten_reg_380;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        ap_phi_mux_indvars_iv_phi_fu_395_p4 = indvars_iv_mid2_reg_1350;
    end else begin
        ap_phi_mux_indvars_iv_phi_fu_395_p4 = indvars_iv_reg_391;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        ap_phi_mux_small_target_index_phi_fu_417_p4 = small_target_index_m_reg_1360;
    end else begin
        ap_phi_mux_small_target_index_phi_fu_417_p4 = small_target_index_reg_413;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        ap_phi_mux_small_target_index_s_phi_fu_439_p4 = tmp_8_7_reg_1377;
    end else begin
        ap_phi_mux_small_target_index_s_phi_fu_439_p4 = small_target_index_s_reg_435;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        ap_phi_mux_step_img_x_phi_fu_406_p4 = step_img_x_mid2_reg_1355;
    end else begin
        ap_phi_mux_step_img_x_phi_fu_406_p4 = step_img_x_reg_402;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0))) begin
        ap_phi_mux_step_img_y_phi_fu_428_p4 = step_img_y_1_7_reg_1382;
    end else begin
        ap_phi_mux_step_img_y_phi_fu_428_p4 = step_img_y_reg_424;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state116)) begin
            gmem_ARADDR = gmem_addr_reg_1304;
        end else if ((1'b1 == ap_condition_1296)) begin
            gmem_ARADDR = gmem_addr_15_reg_1439_pp0_iter11_reg;
        end else if ((1'b1 == ap_condition_1266)) begin
            gmem_ARADDR = gmem_addr_13_reg_1433_pp0_iter10_reg;
        end else if ((1'b1 == ap_condition_1236)) begin
            gmem_ARADDR = gmem_addr_11_reg_1427_pp0_iter8_reg;
        end else if ((1'b1 == ap_condition_1206)) begin
            gmem_ARADDR = gmem_addr_9_reg_1421_pp0_iter6_reg;
        end else if ((1'b1 == ap_condition_1171)) begin
            gmem_ARADDR = gmem_addr_7_reg_1415_pp0_iter4_reg;
        end else if ((1'b1 == ap_condition_1131)) begin
            gmem_ARADDR = gmem_addr_5_reg_1409;
        end else if ((1'b1 == ap_condition_1091)) begin
            gmem_ARADDR = gmem_addr_3_reg_1392;
        end else if ((1'b1 == ap_condition_1050)) begin
            gmem_ARADDR = gmem_addr_1_reg_1365;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state116)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1308)) begin
            gmem_AWADDR = gmem_addr_16_reg_1495_pp0_iter12_reg;
        end else if ((1'b1 == ap_condition_1278)) begin
            gmem_AWADDR = gmem_addr_14_reg_1489;
        end else if ((1'b1 == ap_condition_1248)) begin
            gmem_AWADDR = gmem_addr_12_reg_1478;
        end else if ((1'b1 == ap_condition_1218)) begin
            gmem_AWADDR = gmem_addr_10_reg_1467;
        end else if ((1'b1 == ap_condition_1188)) begin
            gmem_AWADDR = gmem_addr_8_reg_1456;
        end else if ((1'b1 == ap_condition_1148)) begin
            gmem_AWADDR = gmem_addr_6_reg_1445;
        end else if ((1'b1 == ap_condition_1108)) begin
            gmem_AWADDR = gmem_addr_4_reg_1398;
        end else if ((1'b1 == ap_condition_1068)) begin
            gmem_AWADDR = gmem_addr_2_reg_1371;
        end else begin
            gmem_AWADDR = 'bx;
        end
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter14_reg == 1'd0)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state123)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_WREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1317)) begin
            gmem_WDATA = gmem_addr_15_read_reg_1506;
        end else if ((1'b1 == ap_condition_1287)) begin
            gmem_WDATA = gmem_addr_13_read_reg_1501;
        end else if ((1'b1 == ap_condition_1257)) begin
            gmem_WDATA = gmem_addr_11_read_reg_1484;
        end else if ((1'b1 == ap_condition_1227)) begin
            gmem_WDATA = gmem_addr_9_read_reg_1473;
        end else if ((1'b1 == ap_condition_1197)) begin
            gmem_WDATA = gmem_addr_7_read_reg_1462;
        end else if ((1'b1 == ap_condition_1157)) begin
            gmem_WDATA = gmem_addr_5_read_reg_1451;
        end else if ((1'b1 == ap_condition_1117)) begin
            gmem_WDATA = gmem_addr_3_read_reg_1404;
        end else if ((1'b1 == ap_condition_1078)) begin
            gmem_WDATA = gmem_addr_1_read_reg_1387;
        end else begin
            gmem_WDATA = 'bx;
        end
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state123) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_493_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_493_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state116 : begin
            if (((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd20];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state82_io) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((1'b1 == ap_block_state74_io) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state82_io) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((1'b1 == ap_block_state74_io) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310 == 1'd0)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter14_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter14_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & ((1'b1 == ap_block_state67_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)))) | ((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter14_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & ((1'b1 == ap_block_state67_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)))) | ((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b1 == ap_block_state68_io) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b1 == ap_block_state60_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((1'b1 == ap_block_state52_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b1 == ap_block_state68_io) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b1 == ap_block_state60_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((1'b1 == ap_block_state52_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & ((1'b1 == ap_block_state109_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)) | ((1'b1 == ap_block_state53_io) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b1 == ap_block_state45_io) & (ap_enable_reg_pp0_iter5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter13 == 1'b1) & ((1'b1 == ap_block_state109_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0)) | ((1'b1 == ap_block_state53_io) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b1 == ap_block_state45_io) & (ap_enable_reg_pp0_iter5 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((1'b1 == ap_block_state110_io) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b1 == ap_block_state102_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state38_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((1'b1 == ap_block_state110_io) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b1 == ap_block_state102_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state38_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & ((1'b1 == ap_block_state95_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)) | ((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter11 == 1'b1) & ((1'b1 == ap_block_state95_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0)) | ((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((1'b1 == ap_block_state96_io) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b1 == ap_block_state88_io) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state24_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((1'b1 == ap_block_state96_io) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((1'b1 == ap_block_state88_io) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state24_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter9 == 1'b1) & ((1'b1 == ap_block_state81_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter9 == 1'b1) & ((1'b1 == ap_block_state81_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0)))) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state100_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state101_pp0_stage3_iter12 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0));
end

always @ (*) begin
    ap_block_state102_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0));
end

assign ap_block_state102_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage5_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage6_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage7_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state109_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_block_state109_pp0_stage3_iter13 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_block_state10_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310 == 1'd0));
end

always @ (*) begin
    ap_block_state110_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0));
end

assign ap_block_state110_pp0_stage4_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage5_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage6_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage7_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state115_pp0_stage1_iter14 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter14_reg == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0));
end

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage6_iter1 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state17_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0));
end

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp0_stage6_iter2 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0));
end

assign ap_block_state25_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage4_iter3 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state31_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0));
end

assign ap_block_state31_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state38_pp0_stage4_iter4 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state39_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0));
end

assign ap_block_state39_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310 == 1'd0));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp0_stage2_iter5 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_state45_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0));
end

assign ap_block_state45_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state52_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_block_state52_pp0_stage2_iter6 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_block_state53_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0));
end

assign ap_block_state53_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state58_pp0_stage0_iter7 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0));
end

assign ap_block_state59_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state60_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0));
end

assign ap_block_state60_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state67_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state67_pp0_stage1_iter8 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state68_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0));
end

assign ap_block_state68_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp0_stage7_iter8 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state74_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0));
end

assign ap_block_state74_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_block_state81_pp0_stage7_iter9 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_block_state82_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0));
end

assign ap_block_state82_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_pp0_stage5_iter10 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0));
end

always @ (*) begin
    ap_block_state88_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0));
end

assign ap_block_state88_pp0_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage7_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state95_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_block_state95_pp0_stage5_iter11 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_block_state96_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0));
end

assign ap_block_state96_pp0_stage6_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage7_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1050 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_1068 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_1078 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_1091 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001));
end

always @ (*) begin
    ap_condition_1108 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001));
end

always @ (*) begin
    ap_condition_1117 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001));
end

always @ (*) begin
    ap_condition_1131 = ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001));
end

always @ (*) begin
    ap_condition_1148 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001));
end

always @ (*) begin
    ap_condition_1157 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001));
end

always @ (*) begin
    ap_condition_1171 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten_reg_1310_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001));
end

always @ (*) begin
    ap_condition_1188 = ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001));
end

always @ (*) begin
    ap_condition_1197 = ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001));
end

always @ (*) begin
    ap_condition_1206 = ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001));
end

always @ (*) begin
    ap_condition_1218 = ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_1227 = ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001));
end

always @ (*) begin
    ap_condition_1236 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_1248 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001));
end

always @ (*) begin
    ap_condition_1257 = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1310_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_1266 = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001));
end

always @ (*) begin
    ap_condition_1278 = ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001));
end

always @ (*) begin
    ap_condition_1287 = ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1310_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001));
end

always @ (*) begin
    ap_condition_1296 = ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001));
end

always @ (*) begin
    ap_condition_1308 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001));
end

always @ (*) begin
    ap_condition_1317 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1310_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond_flatten_fu_493_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_384_p4 == 10'd648) ? 1'b1 : 1'b0);

assign exitcond_fu_505_p2 = ((ap_phi_mux_small_target_index_s_phi_fu_439_p4 == ap_phi_mux_indvars_iv_phi_fu_395_p4) ? 1'b1 : 1'b0);

assign grp_fu_446_p0 = $signed(gmem_addr_read_reg_1511);

assign image_src2_sum1_cast_fu_918_p1 = $signed(image_src2_sum1_fu_913_p2);

assign image_src2_sum1_fu_913_p2 = ($signed(tmp_6_3_cast_fu_909_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum2_cast_fu_969_p1 = $signed(image_src2_sum2_fu_964_p2);

assign image_src2_sum2_fu_964_p2 = ($signed(tmp_6_4_cast_fu_960_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum3_cast_fu_1020_p1 = $signed(image_src2_sum3_fu_1015_p2);

assign image_src2_sum3_fu_1015_p2 = ($signed(tmp_6_5_cast_fu_1011_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum4_cast_fu_1071_p1 = $signed(image_src2_sum4_fu_1066_p2);

assign image_src2_sum4_fu_1066_p2 = ($signed(tmp_6_6_cast_fu_1062_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum5_cast_fu_1122_p1 = $signed(image_src2_sum5_fu_1117_p2);

assign image_src2_sum5_fu_1117_p2 = ($signed(tmp_6_7_cast_fu_1113_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum7_cast_fu_735_p1 = $signed(image_src2_sum7_fu_730_p2);

assign image_src2_sum7_fu_730_p2 = ($signed(tmp_6_1_cast_fu_726_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum9_cast_fu_867_p1 = $signed(image_src2_sum9_fu_862_p2);

assign image_src2_sum9_fu_862_p2 = ($signed(tmp_6_2_cast_fu_858_p1) + $signed(tmp_1_cast_reg_1292));

assign image_src2_sum_cast_fu_648_p1 = $signed(image_src2_sum_fu_643_p2);

assign image_src2_sum_fu_643_p2 = ($signed(tmp_6_cast_fu_639_p1) + $signed(tmp_1_cast_reg_1292));

assign indvar_flatten_next_fu_499_p2 = (ap_phi_mux_indvar_flatten_phi_fu_384_p4 + 10'd1);

assign indvars_iv_mid2_fu_579_p3 = ((exitcond_fu_505_p2[0:0] === 1'b1) ? indvars_iv_next_dup_fu_573_p2 : ap_phi_mux_indvars_iv_phi_fu_395_p4);

assign indvars_iv_next_dup_fu_573_p2 = (ap_phi_mux_indvars_iv_phi_fu_395_p4 + 13'd72);

assign p_shl1_cast_fu_483_p1 = p_shl1_fu_475_p3;

assign p_shl1_cast_mid1_fu_555_p1 = p_shl1_mid1_fu_547_p3;

assign p_shl1_fu_475_p3 = {{ap_phi_mux_step_img_x_phi_fu_406_p4}, {8'd0}};

assign p_shl1_mid1_fu_547_p3 = {{step_img_x_s_fu_533_p2}, {8'd0}};

assign p_shl2_1_cast_fu_712_p1 = p_shl2_1_fu_704_p3;

assign p_shl2_1_fu_704_p3 = {{pixel_index_1_fu_695_p2}, {2'd0}};

assign p_shl2_2_cast_fu_844_p1 = p_shl2_2_fu_836_p3;

assign p_shl2_2_fu_836_p3 = {{pixel_index_2_fu_826_p2}, {2'd0}};

assign p_shl2_3_cast_fu_895_p1 = p_shl2_3_fu_887_p3;

assign p_shl2_3_fu_887_p3 = {{pixel_index_3_fu_877_p2}, {2'd0}};

assign p_shl2_4_cast_fu_946_p1 = p_shl2_4_fu_938_p3;

assign p_shl2_4_fu_938_p3 = {{pixel_index_4_fu_928_p2}, {2'd0}};

assign p_shl2_5_cast_fu_997_p1 = p_shl2_5_fu_989_p3;

assign p_shl2_5_fu_989_p3 = {{pixel_index_5_fu_979_p2}, {2'd0}};

assign p_shl2_6_cast_fu_1048_p1 = p_shl2_6_fu_1040_p3;

assign p_shl2_6_fu_1040_p3 = {{pixel_index_6_fu_1030_p2}, {2'd0}};

assign p_shl2_7_cast_fu_1099_p1 = p_shl2_7_fu_1091_p3;

assign p_shl2_7_fu_1091_p3 = {{pixel_index_7_fu_1081_p2}, {2'd0}};

assign p_shl2_cast_fu_625_p1 = p_shl2_fu_617_p3;

assign p_shl2_fu_617_p3 = {{pixel_index_fu_607_p2}, {2'd0}};

assign p_shl_fu_467_p3 = {{ap_phi_mux_step_img_x_phi_fu_406_p4}, {10'd0}};

assign p_shl_mid1_fu_539_p3 = {{step_img_x_s_fu_533_p2}, {10'd0}};

assign pixel_index_1_cast1_fu_700_p1 = pixel_index_1_fu_695_p2;

assign pixel_index_1_fu_695_p2 = (tmp_2_mid2_reg_1339_pp0_iter1_reg + step_img_y_1_cast_fu_691_p1);

assign pixel_index_2_cast1_fu_832_p1 = pixel_index_2_fu_826_p2;

assign pixel_index_2_fu_826_p2 = (tmp17_cast_mid2_fu_774_p1 + step_img_y_cast1_fu_823_p1);

assign pixel_index_3_cast1_fu_883_p1 = pixel_index_3_fu_877_p2;

assign pixel_index_3_fu_877_p2 = (tmp28_cast_mid2_fu_783_p1 + step_img_y_cast1_fu_823_p1);

assign pixel_index_4_cast1_fu_934_p1 = pixel_index_4_fu_928_p2;

assign pixel_index_4_fu_928_p2 = (tmp39_cast_mid2_fu_792_p1 + step_img_y_cast1_fu_823_p1);

assign pixel_index_5_cast1_fu_985_p1 = pixel_index_5_fu_979_p2;

assign pixel_index_5_fu_979_p2 = (tmp410_cast_mid2_fu_801_p1 + step_img_y_cast1_fu_823_p1);

assign pixel_index_6_cast1_fu_1036_p1 = pixel_index_6_fu_1030_p2;

assign pixel_index_6_fu_1030_p2 = (tmp511_cast_mid2_fu_810_p1 + step_img_y_cast1_fu_823_p1);

assign pixel_index_7_cast1_fu_1087_p1 = pixel_index_7_fu_1081_p2;

assign pixel_index_7_fu_1081_p2 = (tmp612_cast_mid2_fu_819_p1 + step_img_y_cast1_fu_823_p1);

assign pixel_index_cast1_fu_613_p1 = pixel_index_fu_607_p2;

assign pixel_index_fu_607_p2 = (tmp_2_mid2_fu_565_p3 + step_img_y_cast_fu_603_p1);

assign small_pic_dst4_sum1_fu_1141_p2 = ($signed(tmp_7_2_cast_fu_1137_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum1_s_fu_1146_p1 = $signed(small_pic_dst4_sum1_fu_1141_p2);

assign small_pic_dst4_sum2_fu_1165_p2 = ($signed(tmp_7_3_cast_fu_1161_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum2_s_fu_1170_p1 = $signed(small_pic_dst4_sum2_fu_1165_p2);

assign small_pic_dst4_sum3_fu_1189_p2 = ($signed(tmp_7_4_cast_fu_1185_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum3_s_fu_1194_p1 = $signed(small_pic_dst4_sum3_fu_1189_p2);

assign small_pic_dst4_sum4_fu_1213_p2 = ($signed(tmp_7_5_cast_fu_1209_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum4_s_fu_1218_p1 = $signed(small_pic_dst4_sum4_fu_1213_p2);

assign small_pic_dst4_sum5_fu_1237_p2 = ($signed(tmp_7_6_cast_fu_1233_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum5_s_fu_1242_p1 = $signed(small_pic_dst4_sum5_fu_1237_p2);

assign small_pic_dst4_sum6_fu_1261_p2 = ($signed(tmp_7_7_cast_fu_1257_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum6_s_fu_1266_p1 = $signed(small_pic_dst4_sum6_fu_1261_p2);

assign small_pic_dst4_sum8_fu_754_p2 = ($signed(tmp_7_1_cast_fu_750_p1) + $signed(tmp_cast_reg_1280));

assign small_pic_dst4_sum8_s_fu_759_p1 = $signed(small_pic_dst4_sum8_fu_754_p2);

assign small_pic_dst4_sum_c_fu_666_p1 = $signed(small_pic_dst4_sum_fu_661_p2);

assign small_pic_dst4_sum_fu_661_p2 = ($signed(tmp_7_cast_fu_658_p1) + $signed(tmp_cast_reg_1280));

assign small_target_index_1_fu_519_p2 = (ap_phi_mux_small_target_index_phi_fu_417_p4 + 13'd72);

assign small_target_index_m_fu_595_p3 = ((exitcond_fu_505_p2[0:0] === 1'b1) ? small_target_index_1_fu_519_p2 : ap_phi_mux_small_target_index_phi_fu_417_p4);

assign small_target_index_s_2_fu_525_p3 = ((exitcond_fu_505_p2[0:0] === 1'b1) ? small_target_index_1_fu_519_p2 : ap_phi_mux_small_target_index_s_phi_fu_439_p4);

assign step_img_x_mid2_fu_587_p3 = ((exitcond_fu_505_p2[0:0] === 1'b1) ? step_img_x_s_fu_533_p2 : ap_phi_mux_step_img_x_phi_fu_406_p4);

assign step_img_x_s_fu_533_p2 = (ap_phi_mux_step_img_x_phi_fu_406_p4 + 10'd10);

assign step_img_y_1_7_fu_681_p2 = (step_img_y_mid2_reg_1319 + 10'd80);

assign step_img_y_1_cast_fu_691_p1 = step_img_y_1_s_fu_686_p2;

assign step_img_y_1_s_fu_686_p2 = (step_img_y_mid2_reg_1319_pp0_iter1_reg | 10'd10);

assign step_img_y_cast1_fu_823_p1 = step_img_y_mid2_reg_1319_pp0_iter3_reg;

assign step_img_y_cast_fu_603_p1 = step_img_y_mid2_fu_511_p3;

assign step_img_y_mid2_fu_511_p3 = ((exitcond_fu_505_p2[0:0] === 1'b1) ? 10'd0 : ap_phi_mux_step_img_y_phi_fu_428_p4);

assign tmp17_cast_mid2_fu_774_p1 = tmp17_cast_mid2_v_fu_769_p2;

assign tmp17_cast_mid2_v_fu_769_p2 = (tmp_2_mid2_reg_1339_pp0_iter3_reg | 20'd20);

assign tmp28_cast_mid2_fu_783_p1 = tmp28_cast_mid2_v_fu_778_p2;

assign tmp28_cast_mid2_v_fu_778_p2 = (tmp_2_mid2_reg_1339_pp0_iter3_reg | 20'd30);

assign tmp39_cast_mid2_fu_792_p1 = tmp39_cast_mid2_v_fu_787_p2;

assign tmp39_cast_mid2_v_fu_787_p2 = (tmp_2_mid2_reg_1339_pp0_iter3_reg | 20'd40);

assign tmp410_cast_mid2_fu_801_p1 = tmp410_cast_mid2_v_fu_796_p2;

assign tmp410_cast_mid2_v_fu_796_p2 = (tmp_2_mid2_reg_1339_pp0_iter3_reg | 20'd50);

assign tmp511_cast_mid2_fu_810_p1 = tmp511_cast_mid2_v_fu_805_p2;

assign tmp511_cast_mid2_v_fu_805_p2 = (tmp_2_mid2_reg_1339_pp0_iter3_reg | 20'd60);

assign tmp612_cast_mid2_fu_819_p1 = tmp612_cast_mid2_v_fu_814_p2;

assign tmp612_cast_mid2_v_fu_814_p2 = (tmp_2_mid2_reg_1339_pp0_iter3_reg | 20'd70);

assign tmp_1_cast_fu_457_p0 = image_src;

assign tmp_1_cast_fu_457_p1 = tmp_1_cast_fu_457_p0;

assign tmp_1_fu_453_p0 = image_src;

assign tmp_1_fu_453_p1 = tmp_1_fu_453_p0;

assign tmp_2_fu_487_p2 = (p_shl1_cast_fu_483_p1 + p_shl_fu_467_p3);

assign tmp_2_mid1_fu_559_p2 = (p_shl_mid1_fu_539_p3 + p_shl1_cast_mid1_fu_555_p1);

assign tmp_2_mid2_fu_565_p3 = ((exitcond_fu_505_p2[0:0] === 1'b1) ? tmp_2_mid1_fu_559_p2 : tmp_2_fu_487_p2);

assign tmp_5_1_cast_fu_722_p1 = $signed(tmp_5_1_fu_716_p2);

assign tmp_5_1_fu_716_p2 = (p_shl2_1_cast_fu_712_p1 - pixel_index_1_cast1_fu_700_p1);

assign tmp_5_2_cast_fu_854_p1 = $signed(tmp_5_2_fu_848_p2);

assign tmp_5_2_fu_848_p2 = (p_shl2_2_cast_fu_844_p1 - pixel_index_2_cast1_fu_832_p1);

assign tmp_5_3_cast_fu_905_p1 = $signed(tmp_5_3_fu_899_p2);

assign tmp_5_3_fu_899_p2 = (p_shl2_3_cast_fu_895_p1 - pixel_index_3_cast1_fu_883_p1);

assign tmp_5_4_cast_fu_956_p1 = $signed(tmp_5_4_fu_950_p2);

assign tmp_5_4_fu_950_p2 = (p_shl2_4_cast_fu_946_p1 - pixel_index_4_cast1_fu_934_p1);

assign tmp_5_5_cast_fu_1007_p1 = $signed(tmp_5_5_fu_1001_p2);

assign tmp_5_5_fu_1001_p2 = (p_shl2_5_cast_fu_997_p1 - pixel_index_5_cast1_fu_985_p1);

assign tmp_5_6_cast_fu_1058_p1 = $signed(tmp_5_6_fu_1052_p2);

assign tmp_5_6_fu_1052_p2 = (p_shl2_6_cast_fu_1048_p1 - pixel_index_6_cast1_fu_1036_p1);

assign tmp_5_7_cast_fu_1109_p1 = $signed(tmp_5_7_fu_1103_p2);

assign tmp_5_7_fu_1103_p2 = (p_shl2_7_cast_fu_1099_p1 - pixel_index_7_cast1_fu_1087_p1);

assign tmp_5_cast_fu_635_p1 = $signed(tmp_5_fu_629_p2);

assign tmp_5_fu_629_p2 = (p_shl2_cast_fu_625_p1 - pixel_index_cast1_fu_613_p1);

assign tmp_6_1_cast_fu_726_p1 = $unsigned(tmp_5_1_cast_fu_722_p1);

assign tmp_6_2_cast_fu_858_p1 = $unsigned(tmp_5_2_cast_fu_854_p1);

assign tmp_6_3_cast_fu_909_p1 = $unsigned(tmp_5_3_cast_fu_905_p1);

assign tmp_6_4_cast_fu_960_p1 = $unsigned(tmp_5_4_cast_fu_956_p1);

assign tmp_6_5_cast_fu_1011_p1 = $unsigned(tmp_5_5_cast_fu_1007_p1);

assign tmp_6_6_cast_fu_1062_p1 = $unsigned(tmp_5_6_cast_fu_1058_p1);

assign tmp_6_7_cast_fu_1113_p1 = $unsigned(tmp_5_7_cast_fu_1109_p1);

assign tmp_6_cast_fu_639_p1 = $unsigned(tmp_5_cast_fu_635_p1);

assign tmp_7_1_cast_fu_750_p1 = tmp_8_s_fu_745_p2;

assign tmp_7_2_cast_fu_1137_p1 = tmp_8_1_fu_1132_p2;

assign tmp_7_3_cast_fu_1161_p1 = tmp_8_2_fu_1156_p2;

assign tmp_7_4_cast_fu_1185_p1 = tmp_8_3_fu_1180_p2;

assign tmp_7_5_cast_fu_1209_p1 = tmp_8_4_fu_1204_p2;

assign tmp_7_6_cast_fu_1233_p1 = tmp_8_5_fu_1228_p2;

assign tmp_7_7_cast_fu_1257_p1 = tmp_8_6_fu_1252_p2;

assign tmp_7_cast_fu_658_p1 = small_target_index_s_2_reg_1326;

assign tmp_8_1_fu_1132_p2 = (small_target_index_s_2_reg_1326_pp0_iter4_reg | 13'd2);

assign tmp_8_2_fu_1156_p2 = (small_target_index_s_2_reg_1326_pp0_iter6_reg | 13'd3);

assign tmp_8_3_fu_1180_p2 = (small_target_index_s_2_reg_1326_pp0_iter7_reg | 13'd4);

assign tmp_8_4_fu_1204_p2 = (small_target_index_s_2_reg_1326_pp0_iter9_reg | 13'd5);

assign tmp_8_5_fu_1228_p2 = (small_target_index_s_2_reg_1326_pp0_iter11_reg | 13'd6);

assign tmp_8_6_fu_1252_p2 = (small_target_index_s_2_reg_1326_pp0_iter11_reg | 13'd7);

assign tmp_8_7_fu_676_p2 = (small_target_index_s_2_reg_1326 + 13'd8);

assign tmp_8_s_fu_745_p2 = (small_target_index_s_2_reg_1326_pp0_iter2_reg | 13'd1);

assign tmp_cast_fu_449_p1 = $signed(small_pic_dst);

always @ (posedge ap_clk) begin
    tmp_2_mid2_reg_1339[7:0] <= 8'b00000000;
    tmp_2_mid2_reg_1339_pp0_iter1_reg[7:0] <= 8'b00000000;
    tmp_2_mid2_reg_1339_pp0_iter2_reg[7:0] <= 8'b00000000;
    tmp_2_mid2_reg_1339_pp0_iter3_reg[7:0] <= 8'b00000000;
end

endmodule //small_pic
