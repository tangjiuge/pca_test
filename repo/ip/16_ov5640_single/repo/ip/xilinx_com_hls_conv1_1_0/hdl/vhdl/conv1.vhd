-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv1 is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of conv1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv1,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.164000,HLS_SYN_LAT=892274,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=6,HLS_SYN_FF=4556,HLS_SYN_LUT=3641,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv17_1F1D9 : STD_LOGIC_VECTOR (16 downto 0) := "11111000111011001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_A5F3 : STD_LOGIC_VECTOR (15 downto 0) := "1010010111110011";
    constant ap_const_lv14_3751 : STD_LOGIC_VECTOR (13 downto 0) := "11011101010001";
    constant ap_const_lv8_EE : STD_LOGIC_VECTOR (7 downto 0) := "11101110";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_EE : STD_LOGIC_VECTOR (15 downto 0) := "0000000011101110";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal feature_src_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_src_0_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_src_1_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_src_2_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_src_3_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_src_4_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_src_5_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond4_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal exitcond_flatten2_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_W : STD_LOGIC;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal exitcond_flatten2_reg_1337_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_flatten2_reg_1337_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten2_reg_1337_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1337_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_reg_509 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten1_reg_520 : STD_LOGIC_VECTOR (16 downto 0);
    signal kr_reg_531 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten2_reg_543 : STD_LOGIC_VECTOR (15 downto 0);
    signal kc_reg_555 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_567 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_reg_579 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_reg_591 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_611 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state15_pp1_stage2_iter0 : BOOLEAN;
    signal ap_sig_ioackin_gmem_ARREADY : STD_LOGIC;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_state22_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_state29_pp1_stage2_iter2 : BOOLEAN;
    signal ap_sig_ioackin_gmem_AWREADY : STD_LOGIC;
    signal ap_block_state29_io : BOOLEAN;
    signal ap_block_state36_pp1_stage2_iter3 : BOOLEAN;
    signal ap_block_state43_pp1_stage2_iter4 : BOOLEAN;
    signal ap_block_state50_pp1_stage2_iter5 : BOOLEAN;
    signal ap_sig_ioackin_gmem_WREADY : STD_LOGIC;
    signal ap_block_state50_io : BOOLEAN;
    signal ap_block_state57_pp1_stage2_iter6 : BOOLEAN;
    signal ap_block_state64_pp1_stage2_iter7 : BOOLEAN;
    signal ap_block_state71_pp1_stage2_iter8 : BOOLEAN;
    signal ap_block_state78_pp1_stage2_iter9 : BOOLEAN;
    signal ap_block_state85_pp1_stage2_iter10 : BOOLEAN;
    signal ap_block_state92_pp1_stage2_iter11 : BOOLEAN;
    signal ap_block_state99_pp1_stage2_iter12 : BOOLEAN;
    signal ap_block_state106_pp1_stage2_iter13 : BOOLEAN;
    signal ap_block_state113_pp1_stage2_iter14 : BOOLEAN;
    signal ap_block_state120_pp1_stage2_iter15 : BOOLEAN;
    signal ap_block_state127_pp1_stage2_iter16 : BOOLEAN;
    signal ap_block_state134_pp1_stage2_iter17 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal ap_block_state14_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state21_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state35_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_state42_pp1_stage1_iter4 : BOOLEAN;
    signal ap_block_state49_pp1_stage1_iter5 : BOOLEAN;
    signal ap_block_state49_io : BOOLEAN;
    signal ap_block_state56_pp1_stage1_iter6 : BOOLEAN;
    signal ap_block_state56_io : BOOLEAN;
    signal ap_block_state63_pp1_stage1_iter7 : BOOLEAN;
    signal ap_block_state70_pp1_stage1_iter8 : BOOLEAN;
    signal ap_block_state77_pp1_stage1_iter9 : BOOLEAN;
    signal ap_block_state84_pp1_stage1_iter10 : BOOLEAN;
    signal ap_block_state91_pp1_stage1_iter11 : BOOLEAN;
    signal ap_block_state98_pp1_stage1_iter12 : BOOLEAN;
    signal ap_block_state105_pp1_stage1_iter13 : BOOLEAN;
    signal ap_block_state112_pp1_stage1_iter14 : BOOLEAN;
    signal ap_block_state119_pp1_stage1_iter15 : BOOLEAN;
    signal ap_block_state126_pp1_stage1_iter16 : BOOLEAN;
    signal ap_block_state133_pp1_stage1_iter17 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal ap_block_state18_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_state25_pp1_stage5_iter1 : BOOLEAN;
    signal ap_block_state32_pp1_stage5_iter2 : BOOLEAN;
    signal ap_block_state39_pp1_stage5_iter3 : BOOLEAN;
    signal ap_block_state46_pp1_stage5_iter4 : BOOLEAN;
    signal ap_block_state53_pp1_stage5_iter5 : BOOLEAN;
    signal ap_block_state60_pp1_stage5_iter6 : BOOLEAN;
    signal ap_block_state67_pp1_stage5_iter7 : BOOLEAN;
    signal ap_block_state67_io : BOOLEAN;
    signal ap_block_state74_pp1_stage5_iter8 : BOOLEAN;
    signal ap_block_state74_io : BOOLEAN;
    signal ap_block_state81_pp1_stage5_iter9 : BOOLEAN;
    signal ap_block_state88_pp1_stage5_iter10 : BOOLEAN;
    signal ap_block_state95_pp1_stage5_iter11 : BOOLEAN;
    signal ap_block_state102_pp1_stage5_iter12 : BOOLEAN;
    signal ap_block_state109_pp1_stage5_iter13 : BOOLEAN;
    signal ap_block_state109_io : BOOLEAN;
    signal ap_block_state116_pp1_stage5_iter14 : BOOLEAN;
    signal ap_block_state123_pp1_stage5_iter15 : BOOLEAN;
    signal ap_block_state130_pp1_stage5_iter16 : BOOLEAN;
    signal ap_block_state137_pp1_stage5_iter17 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal ap_block_state16_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_state23_pp1_stage3_iter1 : BOOLEAN;
    signal ap_block_state30_pp1_stage3_iter2 : BOOLEAN;
    signal ap_block_state30_io : BOOLEAN;
    signal ap_block_state37_pp1_stage3_iter3 : BOOLEAN;
    signal ap_block_state44_pp1_stage3_iter4 : BOOLEAN;
    signal ap_block_state51_pp1_stage3_iter5 : BOOLEAN;
    signal ap_block_state58_pp1_stage3_iter6 : BOOLEAN;
    signal ap_block_state65_pp1_stage3_iter7 : BOOLEAN;
    signal ap_block_state72_pp1_stage3_iter8 : BOOLEAN;
    signal ap_block_state79_pp1_stage3_iter9 : BOOLEAN;
    signal ap_block_state86_pp1_stage3_iter10 : BOOLEAN;
    signal ap_block_state86_io : BOOLEAN;
    signal ap_block_state93_pp1_stage3_iter11 : BOOLEAN;
    signal ap_block_state100_pp1_stage3_iter12 : BOOLEAN;
    signal ap_block_state107_pp1_stage3_iter13 : BOOLEAN;
    signal ap_block_state114_pp1_stage3_iter14 : BOOLEAN;
    signal ap_block_state121_pp1_stage3_iter15 : BOOLEAN;
    signal ap_block_state128_pp1_stage3_iter16 : BOOLEAN;
    signal ap_block_state135_pp1_stage3_iter17 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal ap_block_state17_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_state24_pp1_stage4_iter1 : BOOLEAN;
    signal ap_block_state31_pp1_stage4_iter2 : BOOLEAN;
    signal ap_block_state38_pp1_stage4_iter3 : BOOLEAN;
    signal ap_block_state38_io : BOOLEAN;
    signal ap_block_state45_pp1_stage4_iter4 : BOOLEAN;
    signal ap_block_state52_pp1_stage4_iter5 : BOOLEAN;
    signal ap_block_state59_pp1_stage4_iter6 : BOOLEAN;
    signal ap_block_state66_pp1_stage4_iter7 : BOOLEAN;
    signal ap_block_state73_pp1_stage4_iter8 : BOOLEAN;
    signal ap_block_state80_pp1_stage4_iter9 : BOOLEAN;
    signal ap_block_state87_pp1_stage4_iter10 : BOOLEAN;
    signal ap_block_state87_io : BOOLEAN;
    signal ap_block_state94_pp1_stage4_iter11 : BOOLEAN;
    signal ap_block_state101_pp1_stage4_iter12 : BOOLEAN;
    signal ap_block_state108_pp1_stage4_iter13 : BOOLEAN;
    signal ap_block_state108_io : BOOLEAN;
    signal ap_block_state115_pp1_stage4_iter14 : BOOLEAN;
    signal ap_block_state122_pp1_stage4_iter15 : BOOLEAN;
    signal ap_block_state129_pp1_stage4_iter16 : BOOLEAN;
    signal ap_block_state136_pp1_stage4_iter17 : BOOLEAN;
    signal ap_block_pp1_stage4_11001 : BOOLEAN;
    signal ap_block_state19_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_state26_pp1_stage6_iter1 : BOOLEAN;
    signal ap_block_state33_pp1_stage6_iter2 : BOOLEAN;
    signal ap_block_state40_pp1_stage6_iter3 : BOOLEAN;
    signal ap_block_state47_pp1_stage6_iter4 : BOOLEAN;
    signal ap_block_state54_pp1_stage6_iter5 : BOOLEAN;
    signal ap_block_state61_pp1_stage6_iter6 : BOOLEAN;
    signal ap_block_state68_pp1_stage6_iter7 : BOOLEAN;
    signal ap_block_state68_io : BOOLEAN;
    signal ap_block_state75_pp1_stage6_iter8 : BOOLEAN;
    signal ap_block_state82_pp1_stage6_iter9 : BOOLEAN;
    signal ap_block_state89_pp1_stage6_iter10 : BOOLEAN;
    signal ap_block_state96_pp1_stage6_iter11 : BOOLEAN;
    signal ap_block_state96_io : BOOLEAN;
    signal ap_block_state103_pp1_stage6_iter12 : BOOLEAN;
    signal ap_block_state110_pp1_stage6_iter13 : BOOLEAN;
    signal ap_block_state117_pp1_stage6_iter14 : BOOLEAN;
    signal ap_block_state124_pp1_stage6_iter15 : BOOLEAN;
    signal ap_block_state131_pp1_stage6_iter16 : BOOLEAN;
    signal ap_block_state131_io : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal tmp_reg_1227 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_1_reg_1232 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_reg_1237 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_3_reg_1242 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_reg_1247 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_5_reg_1252 : STD_LOGIC_VECTOR (29 downto 0);
    signal weight_src_0_03_reg_1257 : STD_LOGIC_VECTOR (29 downto 0);
    signal feature_src_01_reg_1262 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_cast_fu_711_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_cast_reg_1273 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_1_cast_fu_714_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_cast_reg_1278 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_cast_fu_717_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_cast_reg_1283 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_cast_fu_720_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_cast_reg_1288 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_cast_fu_723_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_cast_reg_1293 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_16_cast_fu_726_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_16_cast_reg_1298 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_1303 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond4_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond4_reg_1308_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_738_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_7_fu_744_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1317_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_read_reg_1322 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_786_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_reg_1327 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state13_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state34_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state41_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state48_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state55_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state62_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state69_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state76_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state83_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state90_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state97_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state104_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state111_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state118_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state118_io : BOOLEAN;
    signal ap_block_state125_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state132_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state132_io : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_11_reg_1327_pp1_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1332 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten2_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next2_fu_804_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar_flatten_next2_reg_1341 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond_flatten_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1346 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1346_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_reg_1356 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_reg_1356_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal kr_1_fu_840_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal kr_1_reg_1371 : STD_LOGIC_VECTOR (1 downto 0);
    signal kr_cast6_mid2_fu_853_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal kr_cast6_mid2_reg_1377 : STD_LOGIC_VECTOR (1 downto 0);
    signal kc_1_fu_885_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal kc_1_reg_1384 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_mid_fu_891_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_mid_reg_1389 : STD_LOGIC_VECTOR (7 downto 0);
    signal kc_cast4_mid2_fu_905_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal kc_cast4_mid2_reg_1394 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_mid1_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_mid1_reg_1399 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_928_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_1_reg_1404 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_mid2_fu_934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_mid2_reg_1409 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_1_reg_1415 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_op_fu_1013_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_op_reg_1421 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten23_op_fu_1019_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten23_op_reg_1426 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_mid2_fu_1025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_mid2_reg_1431 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_cast_fu_1037_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter5_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter6_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter7_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter8_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter9_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter10_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_cast_reg_1436_pp1_iter11_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_018_sum_fu_1040_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_018_sum_reg_1445 : STD_LOGIC_VECTOR (30 downto 0);
    signal gmem_addr_2_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_2_reg_1450_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next_fu_1055_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_next_reg_1457 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_next1_fu_1061_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten_next1_reg_1462 : STD_LOGIC_VECTOR (15 downto 0);
    signal c_1_fu_1067_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_1_reg_1467 : STD_LOGIC_VECTOR (7 downto 0);
    signal W_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_0_0_load_reg_1502 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_1_0_load_reg_1507 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_2_0_load_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_3_0_load_reg_1517 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_4_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_4_0_load_reg_1522 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_5_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_5_0_load_reg_1527 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_1_read_reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_2_read_reg_1537 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_607_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_1542 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_reg_1547_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_reg_1547_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_reg_1552 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_reg_1552_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_reg_1552_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_reg_1552_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_reg_1552_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_reg_1552_pp1_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_3_reg_1557_pp1_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_4_reg_1562_pp1_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_5_reg_1567_pp1_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_120_sum_fu_1148_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_120_sum_reg_1572 : STD_LOGIC_VECTOR (30 downto 0);
    signal gmem_addr_3_reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_3_reg_1577_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_3_read_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_222_sum_fu_1162_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_222_sum_reg_1589 : STD_LOGIC_VECTOR (30 downto 0);
    signal gmem_addr_4_reg_1594 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_reg_1594_pp1_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_read_reg_1601 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_324_sum_fu_1176_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_324_sum_reg_1606 : STD_LOGIC_VECTOR (30 downto 0);
    signal gmem_addr_5_reg_1611 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_5_reg_1611_pp1_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_5_read_reg_1618 : STD_LOGIC_VECTOR (31 downto 0);
    signal feature_dst_426_sum_fu_1190_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_426_sum_reg_1623 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_528_sum_fu_1194_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_528_sum_reg_1628 : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_528_sum_reg_1628_pp1_iter12_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_528_sum_reg_1628_pp1_iter13_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal feature_dst_528_sum_reg_1628_pp1_iter14_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal gmem_addr_6_reg_1633 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_reg_1633_pp1_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_read_reg_1640 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_7_reg_1645 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_7_reg_1645_pp1_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_7_read_reg_1652 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state13 : STD_LOGIC;
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal W_0_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal W_0_0_ce0 : STD_LOGIC;
    signal W_0_0_we0 : STD_LOGIC;
    signal W_1_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal W_1_0_ce0 : STD_LOGIC;
    signal W_2_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal W_2_0_ce0 : STD_LOGIC;
    signal W_3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal W_3_0_ce0 : STD_LOGIC;
    signal W_4_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal W_4_0_ce0 : STD_LOGIC;
    signal W_5_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal W_5_0_ce0 : STD_LOGIC;
    signal ap_phi_mux_indvar_flatten1_phi_fu_524_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_phi_mux_kr_phi_fu_535_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvar_flatten2_phi_fu_547_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_kc_phi_fu_559_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_571_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_r_phi_fu_583_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_c_phi_fu_595_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_cast_fu_748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal W_0_0_load_mid2_fu_1135_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_src_02_sum_fu_1002_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_dst_018_sum_1_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_dst_120_sum_1_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_dst_222_sum_1_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_dst_324_sum_1_fu_1180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_dst_426_sum_1_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal feature_dst_528_sum_1_fu_1208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_gmem_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp1_stage2_01001 : BOOLEAN;
    signal ap_block_pp1_stage3_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem_WREADY : STD_LOGIC := '0';
    signal ap_block_pp1_stage4_01001 : BOOLEAN;
    signal ap_block_pp1_stage1_01001 : BOOLEAN;
    signal ap_block_pp1_stage5_01001 : BOOLEAN;
    signal ap_block_pp1_stage6_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal grp_fu_603_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_760_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_768_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_cast_fu_756_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_772_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_34_cast_fu_778_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_cast_fu_782_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kr_cast6_fu_752_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten1_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_mid1_cast1_fu_864_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kc_mid_fu_846_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal kr_cast6_mid2_cast_fu_860_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_mid_fu_868_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_mid_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_mid_fu_898_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_mid4_fu_916_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_mid1_fu_942_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_mid2_fu_948_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_956_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_968_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl4_fu_976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal kc_cast4_mid2_cast_fu_912_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_986_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_980_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_996_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1218_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_1075_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_cast_fu_1082_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_mid1_cast_fu_1072_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_fu_1086_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_fu_1099_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl2_fu_1106_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_mid2_cast_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_cast_fu_1092_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal W_0_0_load_mid_fu_1116_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_1110_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_mid1_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1129_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal W_0_0_load_mid_cast_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1218_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1218_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1218_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_603_ce : STD_LOGIC;
    signal grp_fu_607_ce : STD_LOGIC;
    signal ap_CS_fsm_state138 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state138 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal grp_fu_1218_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1218_p20 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_1280 : BOOLEAN;
    signal ap_condition_1291 : BOOLEAN;
    signal ap_condition_1328 : BOOLEAN;
    signal ap_condition_1363 : BOOLEAN;
    signal ap_condition_1401 : BOOLEAN;
    signal ap_condition_1432 : BOOLEAN;
    signal ap_condition_1467 : BOOLEAN;
    signal ap_condition_1303 : BOOLEAN;
    signal ap_condition_1342 : BOOLEAN;
    signal ap_condition_1377 : BOOLEAN;
    signal ap_condition_1411 : BOOLEAN;
    signal ap_condition_1442 : BOOLEAN;
    signal ap_condition_1477 : BOOLEAN;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component conv1_fadd_32ns_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_fmul_32ns_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_mac_muladd_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component conv1_W_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_W_1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        feature_src_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_src_0_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_src_1_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_src_2_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_src_3_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_src_4_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_src_5_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bias : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_dst_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_dst_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_dst_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_dst_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_dst_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        feature_dst_5 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    conv1_AXILiteS_s_axi_U : component conv1_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_const_lv32_3F800000,
        feature_src_0 => feature_src_0,
        weight_src_0_0 => weight_src_0_0,
        weight_src_1_0 => weight_src_1_0,
        weight_src_2_0 => weight_src_2_0,
        weight_src_3_0 => weight_src_3_0,
        weight_src_4_0 => weight_src_4_0,
        weight_src_5_0 => weight_src_5_0,
        bias => bias,
        feature_dst_0 => feature_dst_0,
        feature_dst_1 => feature_dst_1,
        feature_dst_2 => feature_dst_2,
        feature_dst_3 => feature_dst_3,
        feature_dst_4 => feature_dst_4,
        feature_dst_5 => feature_dst_5);

    conv1_gmem_m_axi_U : component conv1_gmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => gmem_ARLEN,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => reg_611,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    W_0_0_U : component conv1_W_0_0
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => W_0_0_address0,
        ce0 => W_0_0_ce0,
        we0 => W_0_0_we0,
        d0 => gmem_addr_read_reg_1322,
        q0 => W_0_0_q0);

    W_1_0_U : component conv1_W_1_0
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => W_1_0_address0,
        ce0 => W_1_0_ce0,
        q0 => W_1_0_q0);

    W_2_0_U : component conv1_W_1_0
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => W_2_0_address0,
        ce0 => W_2_0_ce0,
        q0 => W_2_0_q0);

    W_3_0_U : component conv1_W_1_0
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => W_3_0_address0,
        ce0 => W_3_0_ce0,
        q0 => W_3_0_q0);

    W_4_0_U : component conv1_W_1_0
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => W_4_0_address0,
        ce0 => W_4_0_ce0,
        q0 => W_4_0_q0);

    W_5_0_U : component conv1_W_1_0
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => W_5_0_address0,
        ce0 => W_5_0_ce0,
        q0 => W_5_0_q0);

    conv1_fadd_32ns_3bkb_U1 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_603_p0,
        din1 => grp_fu_603_p1,
        ce => grp_fu_603_ce,
        dout => grp_fu_603_p2);

    conv1_fmul_32ns_3cud_U2 : component conv1_fmul_32ns_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => gmem_addr_1_read_reg_1532,
        din1 => grp_fu_607_p1,
        ce => grp_fu_607_ce,
        dout => grp_fu_607_p2);

    conv1_mac_muladd_dEe_U3 : component conv1_mac_muladd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1218_p0,
        din1 => grp_fu_1218_p1,
        din2 => grp_fu_1218_p2,
        dout => grp_fu_1218_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state9);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_subdone)))) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)) or ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
                elsif ((((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
                elsif ((((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)))) then 
                    ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
                elsif ((((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)))) then 
                    ap_reg_ioackin_gmem_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                c_reg_591 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then 
                c_reg_591 <= c_1_reg_1467;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten1_reg_520 <= ap_const_lv17_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
                indvar_flatten1_reg_520 <= indvar_flatten_next2_reg_1341;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten2_reg_543 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
                indvar_flatten2_reg_543 <= indvar_flatten_next1_reg_1462;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten_reg_567 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
                indvar_flatten_reg_567 <= indvar_flatten_next_reg_1457;
            end if; 
        end if;
    end process;

    indvar_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_fu_732_p2 = ap_const_lv1_0))) then 
                indvar_reg_509 <= indvar_next_fu_738_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_reg_509 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    kc_reg_555_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                kc_reg_555 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
                kc_reg_555 <= kc_cast4_mid2_reg_1394;
            end if; 
        end if;
    end process;

    kr_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                kr_reg_531 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
                kr_reg_531 <= kr_cast6_mid2_reg_1377;
            end if; 
        end if;
    end process;

    r_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                r_reg_579 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
                r_reg_579 <= tmp_11_mid2_reg_1431;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then
                W_0_0_load_reg_1502 <= W_0_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then
                W_1_0_load_reg_1507 <= W_1_0_q0;
                W_2_0_load_reg_1512 <= W_2_0_q0;
                W_3_0_load_reg_1517 <= W_3_0_q0;
                W_4_0_load_reg_1522 <= W_4_0_q0;
                W_5_0_load_reg_1527 <= W_5_0_q0;
                gmem_addr_1_read_reg_1532 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                c_1_reg_1467 <= c_1_fu_1067_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                c_mid2_reg_1409 <= c_mid2_fu_934_p3;
                gmem_addr_1_reg_1415 <= feature_src_02_sum_fu_1002_p2(32 - 1 downto 0);
                kc_1_reg_1384 <= kc_1_fu_885_p2;
                kr_1_reg_1371 <= kr_1_fu_840_p2;
                r_1_reg_1404 <= r_1_fu_928_p2;
                r_mid_reg_1389 <= r_mid_fu_891_p3;
                tmp_12_mid1_reg_1399 <= tmp_12_mid1_fu_923_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond4_reg_1308 <= exitcond4_fu_732_p2;
                exitcond4_reg_1308_pp0_iter1_reg <= exitcond4_reg_1308;
                tmp_7_reg_1317_pp0_iter1_reg <= tmp_7_reg_1317;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_flatten2_reg_1337 <= exitcond_flatten2_fu_798_p2;
                exitcond_flatten2_reg_1337_pp1_iter10_reg <= exitcond_flatten2_reg_1337_pp1_iter9_reg;
                exitcond_flatten2_reg_1337_pp1_iter11_reg <= exitcond_flatten2_reg_1337_pp1_iter10_reg;
                exitcond_flatten2_reg_1337_pp1_iter12_reg <= exitcond_flatten2_reg_1337_pp1_iter11_reg;
                exitcond_flatten2_reg_1337_pp1_iter13_reg <= exitcond_flatten2_reg_1337_pp1_iter12_reg;
                exitcond_flatten2_reg_1337_pp1_iter14_reg <= exitcond_flatten2_reg_1337_pp1_iter13_reg;
                exitcond_flatten2_reg_1337_pp1_iter15_reg <= exitcond_flatten2_reg_1337_pp1_iter14_reg;
                exitcond_flatten2_reg_1337_pp1_iter16_reg <= exitcond_flatten2_reg_1337_pp1_iter15_reg;
                exitcond_flatten2_reg_1337_pp1_iter17_reg <= exitcond_flatten2_reg_1337_pp1_iter16_reg;
                exitcond_flatten2_reg_1337_pp1_iter1_reg <= exitcond_flatten2_reg_1337;
                exitcond_flatten2_reg_1337_pp1_iter2_reg <= exitcond_flatten2_reg_1337_pp1_iter1_reg;
                exitcond_flatten2_reg_1337_pp1_iter3_reg <= exitcond_flatten2_reg_1337_pp1_iter2_reg;
                exitcond_flatten2_reg_1337_pp1_iter4_reg <= exitcond_flatten2_reg_1337_pp1_iter3_reg;
                exitcond_flatten2_reg_1337_pp1_iter5_reg <= exitcond_flatten2_reg_1337_pp1_iter4_reg;
                exitcond_flatten2_reg_1337_pp1_iter6_reg <= exitcond_flatten2_reg_1337_pp1_iter5_reg;
                exitcond_flatten2_reg_1337_pp1_iter7_reg <= exitcond_flatten2_reg_1337_pp1_iter6_reg;
                exitcond_flatten2_reg_1337_pp1_iter8_reg <= exitcond_flatten2_reg_1337_pp1_iter7_reg;
                exitcond_flatten2_reg_1337_pp1_iter9_reg <= exitcond_flatten2_reg_1337_pp1_iter8_reg;
                exitcond_flatten_mid_reg_1356_pp1_iter1_reg <= exitcond_flatten_mid_reg_1356;
                exitcond_flatten_reg_1346_pp1_iter1_reg <= exitcond_flatten_reg_1346;
                    gmem_addr_7_reg_1645_pp1_iter16_reg(30 downto 0) <= gmem_addr_7_reg_1645(30 downto 0);
                tmp_11_reg_1327 <= tmp_11_fu_786_p2;
                tmp_11_reg_1327_pp1_iter1_reg <= tmp_11_reg_1327;
                tmp_18_2_reg_1552_pp1_iter3_reg <= tmp_18_2_reg_1552;
                tmp_18_2_reg_1552_pp1_iter4_reg <= tmp_18_2_reg_1552_pp1_iter3_reg;
                tmp_18_2_reg_1552_pp1_iter5_reg <= tmp_18_2_reg_1552_pp1_iter4_reg;
                tmp_18_2_reg_1552_pp1_iter6_reg <= tmp_18_2_reg_1552_pp1_iter5_reg;
                tmp_18_2_reg_1552_pp1_iter7_reg <= tmp_18_2_reg_1552_pp1_iter6_reg;
                tmp_8_reg_1332 <= tmp_8_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_fu_798_p2 = ap_const_lv1_0))) then
                exitcond_flatten_mid_reg_1356 <= exitcond_flatten_mid_fu_828_p2;
                exitcond_flatten_reg_1346 <= exitcond_flatten_fu_810_p2;
                tmp_19_reg_1364 <= tmp_19_fu_834_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                feature_dst_018_sum_reg_1445 <= feature_dst_018_sum_fu_1040_p2;
                    tmp_49_cast_reg_1436(15 downto 0) <= tmp_49_cast_fu_1037_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0))) then
                feature_dst_120_sum_reg_1572 <= feature_dst_120_sum_fu_1148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0))) then
                feature_dst_222_sum_reg_1589 <= feature_dst_222_sum_fu_1162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0))) then
                feature_dst_324_sum_reg_1606 <= feature_dst_324_sum_fu_1176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0))) then
                feature_dst_426_sum_reg_1623 <= feature_dst_426_sum_fu_1190_p2;
                feature_dst_528_sum_reg_1628 <= feature_dst_528_sum_fu_1194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5))) then
                feature_dst_528_sum_reg_1628_pp1_iter12_reg <= feature_dst_528_sum_reg_1628;
                feature_dst_528_sum_reg_1628_pp1_iter13_reg <= feature_dst_528_sum_reg_1628_pp1_iter12_reg;
                feature_dst_528_sum_reg_1628_pp1_iter14_reg <= feature_dst_528_sum_reg_1628_pp1_iter13_reg;
                    gmem_addr_5_reg_1611_pp1_iter9_reg(30 downto 0) <= gmem_addr_5_reg_1611(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                feature_src_01_reg_1262 <= feature_src_0(31 downto 2);
                tmp_1_reg_1232 <= feature_dst_4(31 downto 2);
                tmp_2_reg_1237 <= feature_dst_3(31 downto 2);
                tmp_3_reg_1242 <= feature_dst_2(31 downto 2);
                tmp_4_reg_1247 <= feature_dst_1(31 downto 2);
                tmp_5_reg_1252 <= feature_dst_0(31 downto 2);
                tmp_reg_1227 <= feature_dst_5(31 downto 2);
                weight_src_0_03_reg_1257 <= weight_src_0_0(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then
                gmem_addr_2_read_reg_1537 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                    gmem_addr_2_reg_1450(30 downto 0) <= feature_dst_018_sum_1_fu_1045_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                    gmem_addr_2_reg_1450_pp1_iter1_reg(30 downto 0) <= gmem_addr_2_reg_1450(30 downto 0);
                tmp_18_5_reg_1567_pp1_iter10_reg <= tmp_18_5_reg_1567_pp1_iter9_reg;
                tmp_18_5_reg_1567_pp1_iter11_reg <= tmp_18_5_reg_1567_pp1_iter10_reg;
                tmp_18_5_reg_1567_pp1_iter12_reg <= tmp_18_5_reg_1567_pp1_iter11_reg;
                tmp_18_5_reg_1567_pp1_iter13_reg <= tmp_18_5_reg_1567_pp1_iter12_reg;
                tmp_18_5_reg_1567_pp1_iter14_reg <= tmp_18_5_reg_1567_pp1_iter13_reg;
                tmp_18_5_reg_1567_pp1_iter15_reg <= tmp_18_5_reg_1567_pp1_iter14_reg;
                tmp_18_5_reg_1567_pp1_iter3_reg <= tmp_18_5_reg_1567;
                tmp_18_5_reg_1567_pp1_iter4_reg <= tmp_18_5_reg_1567_pp1_iter3_reg;
                tmp_18_5_reg_1567_pp1_iter5_reg <= tmp_18_5_reg_1567_pp1_iter4_reg;
                tmp_18_5_reg_1567_pp1_iter6_reg <= tmp_18_5_reg_1567_pp1_iter5_reg;
                tmp_18_5_reg_1567_pp1_iter7_reg <= tmp_18_5_reg_1567_pp1_iter6_reg;
                tmp_18_5_reg_1567_pp1_iter8_reg <= tmp_18_5_reg_1567_pp1_iter7_reg;
                tmp_18_5_reg_1567_pp1_iter9_reg <= tmp_18_5_reg_1567_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0))) then
                gmem_addr_3_read_reg_1584 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0))) then
                    gmem_addr_3_reg_1577(30 downto 0) <= feature_dst_120_sum_1_fu_1152_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4))) then
                    gmem_addr_3_reg_1577_pp1_iter4_reg(30 downto 0) <= gmem_addr_3_reg_1577(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0))) then
                gmem_addr_4_read_reg_1601 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0))) then
                    gmem_addr_4_reg_1594(30 downto 0) <= feature_dst_222_sum_1_fu_1166_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                    gmem_addr_4_reg_1594_pp1_iter7_reg(30 downto 0) <= gmem_addr_4_reg_1594(30 downto 0);
                tmp_18_3_reg_1557_pp1_iter3_reg <= tmp_18_3_reg_1557;
                tmp_18_3_reg_1557_pp1_iter4_reg <= tmp_18_3_reg_1557_pp1_iter3_reg;
                tmp_18_3_reg_1557_pp1_iter5_reg <= tmp_18_3_reg_1557_pp1_iter4_reg;
                tmp_18_3_reg_1557_pp1_iter6_reg <= tmp_18_3_reg_1557_pp1_iter5_reg;
                tmp_18_3_reg_1557_pp1_iter7_reg <= tmp_18_3_reg_1557_pp1_iter6_reg;
                tmp_18_3_reg_1557_pp1_iter8_reg <= tmp_18_3_reg_1557_pp1_iter7_reg;
                tmp_18_3_reg_1557_pp1_iter9_reg <= tmp_18_3_reg_1557_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0))) then
                gmem_addr_5_read_reg_1618 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0))) then
                    gmem_addr_5_reg_1611(30 downto 0) <= feature_dst_324_sum_1_fu_1180_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0))) then
                gmem_addr_6_read_reg_1640 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0))) then
                    gmem_addr_6_reg_1633(30 downto 0) <= feature_dst_426_sum_1_fu_1198_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                    gmem_addr_6_reg_1633_pp1_iter12_reg(30 downto 0) <= gmem_addr_6_reg_1633(30 downto 0);
                tmp_18_1_reg_1547_pp1_iter2_reg <= tmp_18_1_reg_1547;
                tmp_18_1_reg_1547_pp1_iter3_reg <= tmp_18_1_reg_1547_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0))) then
                gmem_addr_7_read_reg_1652 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0))) then
                    gmem_addr_7_reg_1645(30 downto 0) <= feature_dst_528_sum_1_fu_1208_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_reg_1308 = ap_const_lv1_0))) then
                gmem_addr_read_reg_1322 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten_reg_1346 = ap_const_lv1_0) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                indvar_flatten23_op_reg_1426 <= indvar_flatten23_op_fu_1019_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                indvar_flatten_next1_reg_1462 <= indvar_flatten_next1_fu_1061_p3;
                indvar_flatten_next_reg_1457 <= indvar_flatten_next_fu_1055_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                indvar_flatten_next2_reg_1341 <= indvar_flatten_next2_fu_804_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (tmp_19_reg_1364 = ap_const_lv1_0) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                indvar_flatten_op_reg_1421 <= indvar_flatten_op_fu_1013_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                kc_cast4_mid2_reg_1394 <= kc_cast4_mid2_fu_905_p3;
                kr_cast6_mid2_reg_1377 <= kr_cast6_mid2_fu_853_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)))) then
                reg_611 <= grp_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then
                tmp_11_mid2_reg_1431 <= tmp_11_mid2_fu_1025_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    tmp_16_cast_reg_1298(29 downto 0) <= tmp_16_cast_fu_726_p1(29 downto 0);
                    tmp_1_cast_reg_1278(29 downto 0) <= tmp_1_cast_fu_714_p1(29 downto 0);
                    tmp_2_cast_reg_1283(29 downto 0) <= tmp_2_cast_fu_717_p1(29 downto 0);
                    tmp_4_cast_reg_1288(29 downto 0) <= tmp_4_cast_fu_720_p1(29 downto 0);
                    tmp_5_cast_reg_1293(29 downto 0) <= tmp_5_cast_fu_723_p1(29 downto 0);
                    tmp_6_reg_1303(29 downto 0) <= tmp_6_fu_729_p1(29 downto 0);
                    tmp_cast_reg_1273(29 downto 0) <= tmp_cast_fu_711_p1(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp_18_1_reg_1547 <= grp_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp_18_2_reg_1552 <= grp_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_18_3_reg_1557 <= grp_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_18_4_reg_1562 <= grp_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                tmp_18_4_reg_1562_pp1_iter10_reg <= tmp_18_4_reg_1562_pp1_iter9_reg;
                tmp_18_4_reg_1562_pp1_iter11_reg <= tmp_18_4_reg_1562_pp1_iter10_reg;
                tmp_18_4_reg_1562_pp1_iter12_reg <= tmp_18_4_reg_1562_pp1_iter11_reg;
                tmp_18_4_reg_1562_pp1_iter3_reg <= tmp_18_4_reg_1562;
                tmp_18_4_reg_1562_pp1_iter4_reg <= tmp_18_4_reg_1562_pp1_iter3_reg;
                tmp_18_4_reg_1562_pp1_iter5_reg <= tmp_18_4_reg_1562_pp1_iter4_reg;
                tmp_18_4_reg_1562_pp1_iter6_reg <= tmp_18_4_reg_1562_pp1_iter5_reg;
                tmp_18_4_reg_1562_pp1_iter7_reg <= tmp_18_4_reg_1562_pp1_iter6_reg;
                tmp_18_4_reg_1562_pp1_iter8_reg <= tmp_18_4_reg_1562_pp1_iter7_reg;
                tmp_18_4_reg_1562_pp1_iter9_reg <= tmp_18_4_reg_1562_pp1_iter8_reg;
                    tmp_49_cast_reg_1436_pp1_iter10_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter9_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter11_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter10_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter1_reg(15 downto 0) <= tmp_49_cast_reg_1436(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter2_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter1_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter3_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter2_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter4_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter3_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter5_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter4_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter6_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter5_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter7_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter6_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter8_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter7_reg(15 downto 0);
                    tmp_49_cast_reg_1436_pp1_iter9_reg(15 downto 0) <= tmp_49_cast_reg_1436_pp1_iter8_reg(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_18_5_reg_1567 <= grp_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp_22_reg_1542 <= grp_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_fu_732_p2 = ap_const_lv1_0))) then
                tmp_7_reg_1317 <= tmp_7_fu_744_p1;
            end if;
        end if;
    end process;
    tmp_cast_reg_1273(30) <= '0';
    tmp_1_cast_reg_1278(30) <= '0';
    tmp_2_cast_reg_1283(30) <= '0';
    tmp_4_cast_reg_1288(30) <= '0';
    tmp_5_cast_reg_1293(30) <= '0';
    tmp_16_cast_reg_1298(30) <= '0';
    tmp_6_reg_1303(63 downto 30) <= "0000000000000000000000000000000000";
    tmp_49_cast_reg_1436(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter1_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter2_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter3_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter4_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter5_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter6_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter7_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter8_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter9_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter10_reg(30 downto 16) <= "000000000000000";
    tmp_49_cast_reg_1436_pp1_iter11_reg(30 downto 16) <= "000000000000000";
    gmem_addr_2_reg_1450(31) <= '0';
    gmem_addr_2_reg_1450_pp1_iter1_reg(31) <= '0';
    gmem_addr_3_reg_1577(31) <= '0';
    gmem_addr_3_reg_1577_pp1_iter4_reg(31) <= '0';
    gmem_addr_4_reg_1594(31) <= '0';
    gmem_addr_4_reg_1594_pp1_iter7_reg(31) <= '0';
    gmem_addr_5_reg_1611(31) <= '0';
    gmem_addr_5_reg_1611_pp1_iter9_reg(31) <= '0';
    gmem_addr_6_reg_1633(31) <= '0';
    gmem_addr_6_reg_1633_pp1_iter12_reg(31) <= '0';
    gmem_addr_7_reg_1645(31) <= '0';
    gmem_addr_7_reg_1645_pp1_iter16_reg(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage5, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17, ap_sig_ioackin_gmem_ARREADY, exitcond4_fu_732_p2, ap_enable_reg_pp0_iter0, exitcond_flatten2_fu_798_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_block_pp1_stage6_subdone, ap_block_pp1_stage5_subdone, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond4_fu_732_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((exitcond4_fu_732_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((exitcond_flatten2_fu_798_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((exitcond_flatten2_fu_798_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state138;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((not(((ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_subdone))) and (ap_const_boolean_0 = ap_block_pp1_stage5_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                elsif (((ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state138;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    W_0_0_address0_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_enable_reg_pp0_iter2, tmp_30_cast_fu_748_p1, W_0_0_load_mid2_fu_1135_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            W_0_0_address0 <= W_0_0_load_mid2_fu_1135_p3(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_0_0_address0 <= tmp_30_cast_fu_748_p1(4 - 1 downto 0);
        else 
            W_0_0_address0 <= "XXXX";
        end if; 
    end process;


    W_0_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            W_0_0_ce0 <= ap_const_logic_1;
        else 
            W_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_0_0_load_mid2_fu_1135_p3 <= 
        tmp_21_fu_1129_p2 when (exitcond_flatten_mid_reg_1356_pp1_iter1_reg(0) = '1') else 
        W_0_0_load_mid_cast_fu_1122_p1;
        W_0_0_load_mid_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(W_0_0_load_mid_fu_1116_p3),64));

    W_0_0_load_mid_fu_1116_p3 <= 
        tmp_37_cast_fu_1092_p1 when (exitcond_flatten_reg_1346_pp1_iter1_reg(0) = '1') else 
        tmp_11_reg_1327_pp1_iter1_reg;

    W_0_0_we0_assign_proc : process(ap_block_pp0_stage0_11001, exitcond4_reg_1308_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond4_reg_1308_pp0_iter1_reg = ap_const_lv1_0))) then 
            W_0_0_we0 <= ap_const_logic_1;
        else 
            W_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W_1_0_address0 <= W_0_0_load_mid2_fu_1135_p3(4 - 1 downto 0);

    W_1_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            W_1_0_ce0 <= ap_const_logic_1;
        else 
            W_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_2_0_address0 <= W_0_0_load_mid2_fu_1135_p3(4 - 1 downto 0);

    W_2_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            W_2_0_ce0 <= ap_const_logic_1;
        else 
            W_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_3_0_address0 <= W_0_0_load_mid2_fu_1135_p3(4 - 1 downto 0);

    W_3_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            W_3_0_ce0 <= ap_const_logic_1;
        else 
            W_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_4_0_address0 <= W_0_0_load_mid2_fu_1135_p3(4 - 1 downto 0);

    W_4_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            W_4_0_ce0 <= ap_const_logic_1;
        else 
            W_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_5_0_address0 <= W_0_0_load_mid2_fu_1135_p3(4 - 1 downto 0);

    W_5_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            W_5_0_ce0 <= ap_const_logic_1;
        else 
            W_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(12);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(13);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(15);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(16);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state138 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond4_reg_1308, gmem_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond4_reg_1308 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond4_reg_1308, gmem_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond4_reg_1308 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter15_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp1_stage0_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter15_reg, ap_enable_reg_pp1_iter17, gmem_RVALID, gmem_BVALID, ap_block_state118_io, ap_block_state132_io)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state132_io) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state118_io) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter15_reg, ap_enable_reg_pp1_iter17, gmem_RVALID, gmem_BVALID, ap_block_state118_io, ap_block_state132_io)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state132_io) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state118_io) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage1_01001_assign_proc : process(ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp1_stage1_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage1_11001_assign_proc : process(ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, gmem_RVALID, gmem_BVALID, ap_block_state49_io, ap_block_state56_io)
    begin
                ap_block_pp1_stage1_11001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state56_io) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state49_io) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage1_subdone_assign_proc : process(ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, gmem_RVALID, gmem_BVALID, ap_block_state49_io, ap_block_state56_io)
    begin
                ap_block_pp1_stage1_subdone <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state56_io) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state49_io) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage2_01001_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp1_stage2_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage2_11001_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, gmem_RVALID, gmem_BVALID, ap_block_state15_io, ap_block_state29_io, ap_block_state50_io)
    begin
                ap_block_pp1_stage2_11001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state50_io) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state29_io) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state15_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage2_subdone_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, gmem_RVALID, gmem_BVALID, ap_block_state15_io, ap_block_state29_io, ap_block_state50_io)
    begin
                ap_block_pp1_stage2_subdone <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state50_io) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state29_io) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state15_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage3_01001_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_enable_reg_pp1_iter14, exitcond_flatten2_reg_1337_pp1_iter14_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp1_stage3_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage3_11001_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter14, exitcond_flatten2_reg_1337_pp1_iter14_reg, gmem_RVALID, gmem_BVALID, ap_block_state16_io, ap_block_state30_io, ap_block_state86_io)
    begin
                ap_block_pp1_stage3_11001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state86_io) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state30_io) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state16_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage3_subdone_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter14, exitcond_flatten2_reg_1337_pp1_iter14_reg, gmem_RVALID, gmem_BVALID, ap_block_state16_io, ap_block_state30_io, ap_block_state86_io)
    begin
                ap_block_pp1_stage3_subdone <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state86_io) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state30_io) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state16_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage4_01001_assign_proc : process(ap_enable_reg_pp1_iter4, exitcond_flatten2_reg_1337_pp1_iter4_reg, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp1_stage4_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage4_11001_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, exitcond_flatten2_reg_1337_pp1_iter4_reg, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter13, gmem_RVALID, gmem_BVALID, ap_block_state38_io, ap_block_state87_io, ap_block_state108_io)
    begin
                ap_block_pp1_stage4_11001 <= (((ap_const_boolean_1 = ap_block_state108_io) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state87_io) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage4_subdone_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, exitcond_flatten2_reg_1337_pp1_iter4_reg, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter13, gmem_RVALID, gmem_BVALID, ap_block_state38_io, ap_block_state87_io, ap_block_state108_io)
    begin
                ap_block_pp1_stage4_subdone <= (((ap_const_boolean_1 = ap_block_state108_io) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state87_io) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage5_01001_assign_proc : process(ap_enable_reg_pp1_iter9, exitcond_flatten2_reg_1337_pp1_iter9_reg, ap_enable_reg_pp1_iter17, exitcond_flatten2_reg_1337_pp1_iter17_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp1_stage5_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter17_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage5_11001_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, exitcond_flatten2_reg_1337_pp1_iter9_reg, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter17, exitcond_flatten2_reg_1337_pp1_iter17_reg, gmem_RVALID, gmem_BVALID, ap_block_state67_io, ap_block_state74_io, ap_block_state109_io)
    begin
                ap_block_pp1_stage5_11001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter17_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state109_io) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state74_io) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state67_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage5_subdone_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, exitcond_flatten2_reg_1337_pp1_iter9_reg, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter17, exitcond_flatten2_reg_1337_pp1_iter17_reg, gmem_RVALID, gmem_BVALID, ap_block_state67_io, ap_block_state74_io, ap_block_state109_io)
    begin
                ap_block_pp1_stage5_subdone <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter17_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state109_io) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state74_io) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state67_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage6_01001_assign_proc : process(ap_enable_reg_pp1_iter12, exitcond_flatten2_reg_1337_pp1_iter12_reg, gmem_RVALID)
    begin
                ap_block_pp1_stage6_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage6_11001_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, exitcond_flatten2_reg_1337_pp1_iter12_reg, ap_enable_reg_pp1_iter16, gmem_RVALID, ap_block_state68_io, ap_block_state96_io, ap_block_state131_io)
    begin
                ap_block_pp1_stage6_11001 <= (((ap_const_boolean_1 = ap_block_state131_io) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state96_io) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state68_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage6_subdone_assign_proc : process(ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, exitcond_flatten2_reg_1337_pp1_iter12_reg, ap_enable_reg_pp1_iter16, gmem_RVALID, ap_block_state68_io, ap_block_state96_io, ap_block_state131_io)
    begin
                ap_block_pp1_stage6_subdone <= (((ap_const_boolean_1 = ap_block_state131_io) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state96_io) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state68_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;

        ap_block_state100_pp1_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp1_stage4_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp1_stage5_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state103_pp1_stage6_iter12_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter12_reg, gmem_RVALID)
    begin
                ap_block_state103_pp1_stage6_iter12 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0));
    end process;

        ap_block_state104_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp1_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp1_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp1_stage3_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state108_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter13_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state108_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0));
    end process;

        ap_block_state108_pp1_stage4_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state109_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter13_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state109_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0));
    end process;

        ap_block_state109_pp1_stage5_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state10_pp0_stage0_iter1_assign_proc : process(exitcond4_reg_1308, gmem_RVALID)
    begin
                ap_block_state10_pp0_stage0_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond4_reg_1308 = ap_const_lv1_0));
    end process;

        ap_block_state110_pp1_stage6_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp1_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp1_stage2_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state114_pp1_stage3_iter14_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter14_reg, gmem_BVALID)
    begin
                ap_block_state114_pp1_stage3_iter14 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0));
    end process;

        ap_block_state115_pp1_stage4_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp1_stage5_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp1_stage6_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state118_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state118_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0));
    end process;

        ap_block_state118_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp1_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state120_pp1_stage2_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp1_stage3_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp1_stage4_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp1_stage5_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp1_stage6_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state125_pp1_stage0_iter16_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter15_reg, gmem_RVALID)
    begin
                ap_block_state125_pp1_stage0_iter16 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0));
    end process;

        ap_block_state126_pp1_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp1_stage2_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp1_stage3_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp1_stage4_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state130_pp1_stage5_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state131_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter16_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state131_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0));
    end process;

        ap_block_state131_pp1_stage6_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state132_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter16_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state132_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0));
    end process;

        ap_block_state132_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state133_pp1_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state134_pp1_stage2_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state135_pp1_stage3_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state136_pp1_stage4_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state137_pp1_stage5_iter17_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter17_reg, gmem_BVALID)
    begin
                ap_block_state137_pp1_stage5_iter17 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter17_reg = ap_const_lv1_0));
    end process;

        ap_block_state13_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_io_assign_proc : process(exitcond_flatten2_reg_1337, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state15_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0));
    end process;

        ap_block_state15_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_io_assign_proc : process(exitcond_flatten2_reg_1337, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state16_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0));
    end process;

        ap_block_state16_pp1_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp1_stage2_iter1_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter1_reg, gmem_RVALID)
    begin
                ap_block_state22_pp1_stage2_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state23_pp1_stage3_iter1_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter1_reg, gmem_RVALID)
    begin
                ap_block_state23_pp1_stage3_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state24_pp1_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state29_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state29_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state29_pp1_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state30_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state30_pp1_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state35_pp1_stage1_iter3_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter3_reg, gmem_BVALID)
    begin
                ap_block_state35_pp1_stage1_iter3 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state36_pp1_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state38_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state38_pp1_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state45_pp1_stage4_iter4_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter4_reg, gmem_RVALID)
    begin
                ap_block_state45_pp1_stage4_iter4 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0));
    end process;

        ap_block_state46_pp1_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state49_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state49_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0));
    end process;

        ap_block_state49_pp1_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state50_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state50_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0));
    end process;

        ap_block_state50_pp1_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state55_pp1_stage0_iter6_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter5_reg, gmem_BVALID)
    begin
                ap_block_state55_pp1_stage0_iter6 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0));
    end process;


    ap_block_state56_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter6_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state56_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0));
    end process;

        ap_block_state56_pp1_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state63_pp1_stage1_iter7_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter7_reg, gmem_RVALID)
    begin
                ap_block_state63_pp1_stage1_iter7 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0));
    end process;

        ap_block_state64_pp1_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp1_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp1_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state67_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state67_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0));
    end process;

        ap_block_state67_pp1_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state68_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state68_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0));
    end process;

        ap_block_state68_pp1_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp1_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp1_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp1_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state73_pp1_stage4_iter8_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter8_reg, gmem_BVALID)
    begin
                ap_block_state73_pp1_stage4_iter8 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state74_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state74_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0));
    end process;

        ap_block_state74_pp1_stage5_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp1_stage6_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp1_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp1_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp1_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp1_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state81_pp1_stage5_iter9_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter9_reg, gmem_RVALID)
    begin
                ap_block_state81_pp1_stage5_iter9 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0));
    end process;

        ap_block_state82_pp1_stage6_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp1_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp1_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state86_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state86_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0));
    end process;

        ap_block_state86_pp1_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state87_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state87_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0));
    end process;

        ap_block_state87_pp1_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp1_stage5_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp1_stage6_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp1_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state92_pp1_stage2_iter11_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter11_reg, gmem_BVALID)
    begin
                ap_block_state92_pp1_stage2_iter11 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0));
    end process;

        ap_block_state93_pp1_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp1_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp1_stage5_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state96_io_assign_proc : process(exitcond_flatten2_reg_1337_pp1_iter11_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state96_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0));
    end process;

        ap_block_state96_pp1_stage6_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp1_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp1_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1280_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter0, exitcond_flatten2_reg_1337, ap_block_pp1_stage2_01001)
    begin
                ap_condition_1280 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001));
    end process;


    ap_condition_1291_assign_proc : process(ap_enable_reg_pp1_iter0, exitcond_flatten2_reg_1337, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_01001)
    begin
                ap_condition_1291 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0));
    end process;


    ap_condition_1303_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter2, exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_block_pp1_stage2_01001)
    begin
                ap_condition_1303 <= ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001));
    end process;


    ap_condition_1328_assign_proc : process(ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_01001)
    begin
                ap_condition_1328 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_condition_1342_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter5, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_block_pp1_stage1_01001)
    begin
                ap_condition_1342 <= ((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0));
    end process;


    ap_condition_1363_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter6, exitcond_flatten2_reg_1337_pp1_iter6_reg, ap_block_pp1_stage1_01001)
    begin
                ap_condition_1363 <= ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0));
    end process;


    ap_condition_1377_assign_proc : process(ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_01001)
    begin
                ap_condition_1377 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0));
    end process;


    ap_condition_1401_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_block_pp1_stage5_01001)
    begin
                ap_condition_1401 <= ((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_1411_assign_proc : process(ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter10, exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_block_pp1_stage3_01001)
    begin
                ap_condition_1411 <= ((ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0));
    end process;


    ap_condition_1432_assign_proc : process(ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, ap_block_pp1_stage6_01001)
    begin
                ap_condition_1432 <= ((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0));
    end process;


    ap_condition_1442_assign_proc : process(ap_CS_fsm_pp1_stage4, ap_enable_reg_pp1_iter13, exitcond_flatten2_reg_1337_pp1_iter13_reg, ap_block_pp1_stage4_01001)
    begin
                ap_condition_1442 <= ((ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0));
    end process;


    ap_condition_1467_assign_proc : process(ap_CS_fsm_pp1_stage0, exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_enable_reg_pp1_iter15, ap_block_pp1_stage0_01001)
    begin
                ap_condition_1467 <= ((ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0));
    end process;


    ap_condition_1477_assign_proc : process(ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter16_reg, ap_block_pp1_stage6_01001)
    begin
                ap_condition_1477 <= ((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state9_assign_proc : process(exitcond4_fu_732_p2)
    begin
        if ((exitcond4_fu_732_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state13_assign_proc : process(exitcond_flatten2_fu_798_p2)
    begin
        if ((exitcond_flatten2_fu_798_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state138)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17)
    begin
        if (((ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_phi_fu_595_p4_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, c_reg_591, c_1_reg_1467)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_c_phi_fu_595_p4 <= c_1_reg_1467;
        else 
            ap_phi_mux_c_phi_fu_595_p4 <= c_reg_591;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten1_phi_fu_524_p4_assign_proc : process(exitcond_flatten2_reg_1337, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, indvar_flatten1_reg_520, indvar_flatten_next2_reg_1341)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten1_phi_fu_524_p4 <= indvar_flatten_next2_reg_1341;
        else 
            ap_phi_mux_indvar_flatten1_phi_fu_524_p4 <= indvar_flatten1_reg_520;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten2_phi_fu_547_p4_assign_proc : process(exitcond_flatten2_reg_1337, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, indvar_flatten2_reg_543, indvar_flatten_next1_reg_1462)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten2_phi_fu_547_p4 <= indvar_flatten_next1_reg_1462;
        else 
            ap_phi_mux_indvar_flatten2_phi_fu_547_p4 <= indvar_flatten2_reg_543;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_571_p4_assign_proc : process(exitcond_flatten2_reg_1337, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, indvar_flatten_reg_567, indvar_flatten_next_reg_1457)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_571_p4 <= indvar_flatten_next_reg_1457;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_571_p4 <= indvar_flatten_reg_567;
        end if; 
    end process;


    ap_phi_mux_kc_phi_fu_559_p4_assign_proc : process(exitcond_flatten2_reg_1337, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, kc_reg_555, kc_cast4_mid2_reg_1394)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
            ap_phi_mux_kc_phi_fu_559_p4 <= kc_cast4_mid2_reg_1394;
        else 
            ap_phi_mux_kc_phi_fu_559_p4 <= kc_reg_555;
        end if; 
    end process;


    ap_phi_mux_kr_phi_fu_535_p4_assign_proc : process(exitcond_flatten2_reg_1337, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, kr_reg_531, kr_cast6_mid2_reg_1377)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
            ap_phi_mux_kr_phi_fu_535_p4 <= kr_cast6_mid2_reg_1377;
        else 
            ap_phi_mux_kr_phi_fu_535_p4 <= kr_reg_531;
        end if; 
    end process;


    ap_phi_mux_r_phi_fu_583_p4_assign_proc : process(exitcond_flatten2_reg_1337, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, r_reg_579, tmp_11_mid2_reg_1431)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0))) then 
            ap_phi_mux_r_phi_fu_583_p4 <= tmp_11_mid2_reg_1431;
        else 
            ap_phi_mux_r_phi_fu_583_p4 <= r_reg_579;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state138)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_gmem_ARREADY_assign_proc : process(gmem_ARREADY, ap_reg_ioackin_gmem_ARREADY)
    begin
        if ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_ARREADY <= gmem_ARREADY;
        else 
            ap_sig_ioackin_gmem_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem_AWREADY_assign_proc : process(gmem_AWREADY, ap_reg_ioackin_gmem_AWREADY)
    begin
        if ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_AWREADY <= gmem_AWREADY;
        else 
            ap_sig_ioackin_gmem_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem_WREADY_assign_proc : process(gmem_WREADY, ap_reg_ioackin_gmem_WREADY)
    begin
        if ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_WREADY <= gmem_WREADY;
        else 
            ap_sig_ioackin_gmem_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    c_1_fu_1067_p2 <= std_logic_vector(unsigned(c_mid2_reg_1409) + unsigned(ap_const_lv8_2));
    c_mid2_fu_934_p3 <= 
        c_mid_fu_898_p3 when (tmp_12_mid1_fu_923_p2(0) = '1') else 
        ap_const_lv8_0;
    c_mid_fu_898_p3 <= 
        ap_const_lv8_0 when (tmp_19_reg_1364(0) = '1') else 
        ap_phi_mux_c_phi_fu_595_p4;
    exitcond4_fu_732_p2 <= "1" when (indvar_reg_509 = ap_const_lv2_2) else "0";
    exitcond_flatten1_fu_822_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_571_p4 = ap_const_lv14_3751) else "0";
    exitcond_flatten2_fu_798_p2 <= "1" when (ap_phi_mux_indvar_flatten1_phi_fu_524_p4 = ap_const_lv17_1F1D9) else "0";
    exitcond_flatten_fu_810_p2 <= "1" when (ap_phi_mux_indvar_flatten2_phi_fu_547_p4 = ap_const_lv16_A5F3) else "0";
    exitcond_flatten_mid_fu_828_p2 <= (not_exitcond_flatten_fu_816_p2 and exitcond_flatten1_fu_822_p2);
    feature_dst_018_sum_1_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_dst_018_sum_reg_1445),64));
    feature_dst_018_sum_fu_1040_p2 <= std_logic_vector(unsigned(tmp_49_cast_fu_1037_p1) + unsigned(tmp_16_cast_reg_1298));
    feature_dst_120_sum_1_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_dst_120_sum_reg_1572),64));
    feature_dst_120_sum_fu_1148_p2 <= std_logic_vector(unsigned(tmp_49_cast_reg_1436_pp1_iter3_reg) + unsigned(tmp_5_cast_reg_1293));
    feature_dst_222_sum_1_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_dst_222_sum_reg_1589),64));
    feature_dst_222_sum_fu_1162_p2 <= std_logic_vector(unsigned(tmp_49_cast_reg_1436_pp1_iter5_reg) + unsigned(tmp_4_cast_reg_1288));
    feature_dst_324_sum_1_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_dst_324_sum_reg_1606),64));
    feature_dst_324_sum_fu_1176_p2 <= std_logic_vector(unsigned(tmp_49_cast_reg_1436_pp1_iter8_reg) + unsigned(tmp_2_cast_reg_1283));
    feature_dst_426_sum_1_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_dst_426_sum_reg_1623),64));
    feature_dst_426_sum_fu_1190_p2 <= std_logic_vector(unsigned(tmp_49_cast_reg_1436_pp1_iter11_reg) + unsigned(tmp_1_cast_reg_1278));
    feature_dst_528_sum_1_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_dst_528_sum_reg_1628_pp1_iter14_reg),64));
    feature_dst_528_sum_fu_1194_p2 <= std_logic_vector(unsigned(tmp_49_cast_reg_1436_pp1_iter11_reg) + unsigned(tmp_cast_reg_1273));
    feature_src_02_sum_fu_1002_p2 <= std_logic_vector(unsigned(tmp_28_fu_996_p2) + unsigned(tmp_6_reg_1303));

    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state2, gmem_addr_1_reg_1415, tmp_s_fu_701_p1, feature_dst_018_sum_1_fu_1045_p1, feature_dst_120_sum_1_fu_1152_p1, feature_dst_222_sum_1_fu_1166_p1, feature_dst_324_sum_1_fu_1180_p1, feature_dst_426_sum_1_fu_1198_p1, feature_dst_528_sum_1_fu_1208_p1, ap_reg_ioackin_gmem_ARREADY, ap_condition_1280, ap_condition_1291, ap_condition_1328, ap_condition_1363, ap_condition_1401, ap_condition_1432, ap_condition_1467)
    begin
        if ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0)) then
            if ((ap_const_boolean_1 = ap_condition_1467)) then 
                gmem_ARADDR <= feature_dst_528_sum_1_fu_1208_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1432)) then 
                gmem_ARADDR <= feature_dst_426_sum_1_fu_1198_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1401)) then 
                gmem_ARADDR <= feature_dst_324_sum_1_fu_1180_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1363)) then 
                gmem_ARADDR <= feature_dst_222_sum_1_fu_1166_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1328)) then 
                gmem_ARADDR <= feature_dst_120_sum_1_fu_1152_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1291)) then 
                gmem_ARADDR <= feature_dst_018_sum_1_fu_1045_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1280)) then 
                gmem_ARADDR <= gmem_addr_1_reg_1415;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                gmem_ARADDR <= tmp_s_fu_701_p1(32 - 1 downto 0);
            else 
                gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter0, exitcond_flatten2_reg_1337, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter6, exitcond_flatten2_reg_1337_pp1_iter6_reg, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_enable_reg_pp1_iter15, ap_reg_ioackin_gmem_ARREADY, ap_block_pp1_stage2_01001, ap_block_pp1_stage3_01001, ap_block_pp1_stage4_01001, ap_block_pp1_stage1_01001, ap_block_pp1_stage5_01001, ap_block_pp1_stage6_01001, ap_block_pp1_stage0_01001)
    begin
        if ((((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)))) then 
            gmem_ARLEN <= ap_const_lv32_1;
        elsif (((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARLEN <= ap_const_lv32_2;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter0, exitcond_flatten2_reg_1337, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter6, exitcond_flatten2_reg_1337_pp1_iter6_reg, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_enable_reg_pp1_iter15, ap_reg_ioackin_gmem_ARREADY, ap_block_pp1_stage2_01001, ap_block_pp1_stage3_01001, ap_block_pp1_stage4_01001, ap_block_pp1_stage1_01001, ap_block_pp1_stage5_01001, ap_block_pp1_stage6_01001, ap_block_pp1_stage0_01001)
    begin
        if ((((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(gmem_addr_2_reg_1450_pp1_iter1_reg, gmem_addr_3_reg_1577_pp1_iter4_reg, gmem_addr_4_reg_1594_pp1_iter7_reg, gmem_addr_5_reg_1611_pp1_iter9_reg, gmem_addr_6_reg_1633_pp1_iter12_reg, gmem_addr_7_reg_1645_pp1_iter16_reg, ap_reg_ioackin_gmem_AWREADY, ap_condition_1303, ap_condition_1342, ap_condition_1377, ap_condition_1411, ap_condition_1442, ap_condition_1477)
    begin
        if ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0)) then
            if ((ap_const_boolean_1 = ap_condition_1477)) then 
                gmem_AWADDR <= gmem_addr_7_reg_1645_pp1_iter16_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1442)) then 
                gmem_AWADDR <= gmem_addr_6_reg_1633_pp1_iter12_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1411)) then 
                gmem_AWADDR <= gmem_addr_5_reg_1611_pp1_iter9_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1377)) then 
                gmem_AWADDR <= gmem_addr_4_reg_1594_pp1_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1342)) then 
                gmem_AWADDR <= gmem_addr_3_reg_1577_pp1_iter4_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1303)) then 
                gmem_AWADDR <= gmem_addr_2_reg_1450_pp1_iter1_reg;
            else 
                gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter2, exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_enable_reg_pp1_iter5, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter10, exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_enable_reg_pp1_iter13, exitcond_flatten2_reg_1337_pp1_iter13_reg, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter16_reg, ap_block_pp1_stage2_01001, ap_block_pp1_stage3_01001, ap_reg_ioackin_gmem_AWREADY, ap_block_pp1_stage4_01001, ap_block_pp1_stage1_01001, ap_block_pp1_stage5_01001, ap_block_pp1_stage6_01001)
    begin
        if ((((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter3, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_CS_fsm_pp1_stage4, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter6, ap_CS_fsm_pp1_stage5, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, ap_enable_reg_pp1_iter14, exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_enable_reg_pp1_iter17, exitcond_flatten2_reg_1337_pp1_iter17_reg, ap_block_pp1_stage2_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter17_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond4_reg_1308, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_enable_reg_pp1_iter4, exitcond_flatten2_reg_1337_pp1_iter4_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter9, exitcond_flatten2_reg_1337_pp1_iter9_reg, ap_enable_reg_pp1_iter12, exitcond_flatten2_reg_1337_pp1_iter12_reg, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter15_reg, ap_block_pp1_stage2_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage6_11001, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_reg_1308 = ap_const_lv1_0)))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter2, exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_CS_fsm_pp1_stage4, ap_enable_reg_pp1_iter5, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter10, exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_enable_reg_pp1_iter13, exitcond_flatten2_reg_1337_pp1_iter13_reg, exitcond_flatten2_reg_1337_pp1_iter16_reg, ap_enable_reg_pp1_iter17, ap_block_pp1_stage2_01001, ap_block_pp1_stage3_01001, ap_reg_ioackin_gmem_WREADY, ap_block_pp1_stage4_01001, ap_block_pp1_stage5_01001, ap_block_pp1_stage6_01001, ap_block_pp1_stage0_01001)
    begin
        if ((((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001)))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter0, ap_block_pp1_stage2, exitcond_flatten2_reg_1337, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter3, ap_block_pp1_stage1, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0, exitcond_flatten2_reg_1337_pp1_iter6_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_enable_reg_pp1_iter15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter6_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (exitcond_flatten2_reg_1337 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_enable_reg_pp1_iter2, exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_enable_reg_pp1_iter5, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_enable_reg_pp1_iter10, exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_enable_reg_pp1_iter13, exitcond_flatten2_reg_1337_pp1_iter13_reg, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter16_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter3, ap_block_pp1_stage1, exitcond_flatten2_reg_1337_pp1_iter3_reg, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_enable_reg_pp1_iter8, exitcond_flatten2_reg_1337_pp1_iter8_reg, ap_enable_reg_pp1_iter11, exitcond_flatten2_reg_1337_pp1_iter11_reg, ap_enable_reg_pp1_iter14, exitcond_flatten2_reg_1337_pp1_iter14_reg, ap_enable_reg_pp1_iter17, exitcond_flatten2_reg_1337_pp1_iter17_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter17_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter14_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter11_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond4_reg_1308, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_enable_reg_pp1_iter1, exitcond_flatten2_reg_1337_pp1_iter1_reg, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_enable_reg_pp1_iter4, exitcond_flatten2_reg_1337_pp1_iter4_reg, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_enable_reg_pp1_iter9, exitcond_flatten2_reg_1337_pp1_iter9_reg, ap_enable_reg_pp1_iter12, exitcond_flatten2_reg_1337_pp1_iter12_reg, ap_enable_reg_pp1_iter16, exitcond_flatten2_reg_1337_pp1_iter15_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (exitcond_flatten2_reg_1337_pp1_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter15_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_reg_1308 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_enable_reg_pp1_iter2, exitcond_flatten2_reg_1337_pp1_iter2_reg, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_enable_reg_pp1_iter5, exitcond_flatten2_reg_1337_pp1_iter5_reg, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, exitcond_flatten2_reg_1337_pp1_iter7_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_enable_reg_pp1_iter10, exitcond_flatten2_reg_1337_pp1_iter10_reg, ap_enable_reg_pp1_iter13, exitcond_flatten2_reg_1337_pp1_iter13_reg, exitcond_flatten2_reg_1337_pp1_iter16_reg, ap_enable_reg_pp1_iter17)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (exitcond_flatten2_reg_1337_pp1_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (exitcond_flatten2_reg_1337_pp1_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten2_reg_1337_pp1_iter16_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (exitcond_flatten2_reg_1337_pp1_iter10_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (exitcond_flatten2_reg_1337_pp1_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (exitcond_flatten2_reg_1337_pp1_iter5_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1218_p0 <= grp_fu_1218_p00(8 - 1 downto 0);
    grp_fu_1218_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_mid2_fu_1025_p3),16));
    grp_fu_1218_p1 <= ap_const_lv16_EE(9 - 1 downto 0);
    grp_fu_1218_p2 <= grp_fu_1218_p20(8 - 1 downto 0);
    grp_fu_1218_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_mid2_reg_1409),16));

    grp_fu_603_ce_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage2_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage6_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)))) then 
            grp_fu_603_ce <= ap_const_logic_1;
        else 
            grp_fu_603_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_603_p0_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_enable_reg_pp1_iter4, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter16, gmem_addr_2_read_reg_1537, gmem_addr_3_read_reg_1584, gmem_addr_4_read_reg_1601, gmem_addr_5_read_reg_1618, gmem_addr_6_read_reg_1640, gmem_addr_7_read_reg_1652)
    begin
        if (((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3))) then 
            grp_fu_603_p0 <= gmem_addr_7_read_reg_1652;
        elsif (((ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            grp_fu_603_p0 <= gmem_addr_6_read_reg_1640;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_603_p0 <= gmem_addr_5_read_reg_1618;
        elsif (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            grp_fu_603_p0 <= gmem_addr_4_read_reg_1601;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            grp_fu_603_p0 <= gmem_addr_3_read_reg_1584;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            grp_fu_603_p0 <= gmem_addr_2_read_reg_1537;
        else 
            grp_fu_603_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_603_p1_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_enable_reg_pp1_iter4, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter16, tmp_22_reg_1542, tmp_18_1_reg_1547_pp1_iter3_reg, tmp_18_2_reg_1552_pp1_iter7_reg, tmp_18_3_reg_1557_pp1_iter9_reg, tmp_18_4_reg_1562_pp1_iter12_reg, tmp_18_5_reg_1567_pp1_iter15_reg)
    begin
        if (((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3))) then 
            grp_fu_603_p1 <= tmp_18_5_reg_1567_pp1_iter15_reg;
        elsif (((ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            grp_fu_603_p1 <= tmp_18_4_reg_1562_pp1_iter12_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_603_p1 <= tmp_18_3_reg_1557_pp1_iter9_reg;
        elsif (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            grp_fu_603_p1 <= tmp_18_2_reg_1552_pp1_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            grp_fu_603_p1 <= tmp_18_1_reg_1547_pp1_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            grp_fu_603_p1 <= tmp_22_reg_1542;
        else 
            grp_fu_603_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_607_ce_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage2_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage6_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)))) then 
            grp_fu_607_ce <= ap_const_logic_1;
        else 
            grp_fu_607_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_607_p1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_enable_reg_pp1_iter2, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, W_0_0_load_reg_1502, W_1_0_load_reg_1507, W_2_0_load_reg_1512, W_3_0_load_reg_1517, W_4_0_load_reg_1522, W_5_0_load_reg_1527)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            grp_fu_607_p1 <= W_5_0_load_reg_1527;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_fu_607_p1 <= W_4_0_load_reg_1522;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            grp_fu_607_p1 <= W_3_0_load_reg_1517;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            grp_fu_607_p1 <= W_2_0_load_reg_1512;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            grp_fu_607_p1 <= W_1_0_load_reg_1507;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3))) then 
            grp_fu_607_p1 <= W_0_0_load_reg_1502;
        else 
            grp_fu_607_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    indvar_flatten23_op_fu_1019_p2 <= std_logic_vector(unsigned(indvar_flatten2_reg_543) + unsigned(ap_const_lv16_1));
    indvar_flatten_next1_fu_1061_p3 <= 
        ap_const_lv16_1 when (exitcond_flatten_reg_1346(0) = '1') else 
        indvar_flatten23_op_reg_1426;
    indvar_flatten_next2_fu_804_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten1_phi_fu_524_p4) + unsigned(ap_const_lv17_1));
    indvar_flatten_next_fu_1055_p3 <= 
        ap_const_lv14_1 when (tmp_19_reg_1364(0) = '1') else 
        indvar_flatten_op_reg_1421;
    indvar_flatten_op_fu_1013_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_567) + unsigned(ap_const_lv14_1));
    indvar_next_fu_738_p2 <= std_logic_vector(unsigned(indvar_reg_509) + unsigned(ap_const_lv2_1));
    kc_1_fu_885_p2 <= std_logic_vector(unsigned(kc_mid_fu_846_p3) + unsigned(ap_const_lv2_1));
    kc_cast4_mid2_cast_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kc_cast4_mid2_fu_905_p3),8));
    kc_cast4_mid2_fu_905_p3 <= 
        kc_1_fu_885_p2 when (exitcond_flatten_mid_reg_1356(0) = '1') else 
        kc_mid_fu_846_p3;
    kc_mid_fu_846_p3 <= 
        ap_const_lv2_0 when (exitcond_flatten_reg_1346(0) = '1') else 
        kc_reg_555;
    kr_1_fu_840_p2 <= std_logic_vector(unsigned(kr_reg_531) + unsigned(ap_const_lv2_1));
    kr_cast6_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kr_phi_fu_535_p4),8));
    kr_cast6_mid2_cast_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_cast6_mid2_fu_853_p3),8));
    kr_cast6_mid2_fu_853_p3 <= 
        kr_1_fu_840_p2 when (exitcond_flatten_reg_1346(0) = '1') else 
        kr_reg_531;
    not_exitcond_flatten_fu_816_p2 <= (exitcond_flatten_fu_810_p2 xor ap_const_lv1_1);
    p_shl1_cast_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1075_p3),5));
    p_shl2_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_1099_p3),64));
    p_shl3_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_956_p3),64));
    p_shl4_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_968_p3),64));
    p_shl_cast_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_760_p3),5));
    r_1_fu_928_p2 <= std_logic_vector(unsigned(r_mid_fu_891_p3) + unsigned(ap_const_lv8_2));
    r_mid_fu_891_p3 <= 
        ap_const_lv8_0 when (tmp_19_reg_1364(0) = '1') else 
        r_reg_579;
    tmp_10_fu_772_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_768_p1) - unsigned(tmp_7_cast_fu_756_p1));
    tmp_10_mid2_fu_948_p3 <= 
        tmp_10_mid4_fu_916_p3 when (tmp_12_mid1_fu_923_p2(0) = '1') else 
        tmp_8_mid1_fu_942_p2;
    tmp_10_mid4_fu_916_p3 <= 
        kr_cast6_mid2_cast_fu_860_p1 when (exitcond_flatten_mid_reg_1356(0) = '1') else 
        tmp_10_mid_fu_868_p3;
    tmp_10_mid_fu_868_p3 <= 
        tmp_7_mid1_cast1_fu_864_p1 when (exitcond_flatten_reg_1346(0) = '1') else 
        tmp_8_reg_1332;
    tmp_11_fu_786_p2 <= std_logic_vector(signed(tmp_34_cast_fu_778_p1) + signed(tmp_9_cast_fu_782_p1));
    tmp_11_mid2_fu_1025_p3 <= 
        r_mid_reg_1389 when (tmp_12_mid1_reg_1399(0) = '1') else 
        r_1_reg_1404;
    tmp_12_fu_1075_p3 <= (kr_1_reg_1371 & ap_const_lv2_0);
    tmp_12_mid1_fu_923_p2 <= (tmp_12_mid_fu_880_p2 or exitcond_flatten_mid_reg_1356);
    tmp_12_mid_fu_880_p2 <= (tmp_18_fu_874_p2 or exitcond_flatten_reg_1346);
    tmp_13_fu_986_p2 <= std_logic_vector(unsigned(c_mid2_fu_934_p3) + unsigned(kc_cast4_mid2_cast_fu_912_p1));
    tmp_14_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_986_p2),64));
    tmp_15_fu_1086_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_1082_p1) - unsigned(tmp_7_mid1_cast_fu_1072_p1));
    tmp_16_cast_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1252),31));
    tmp_16_fu_1099_p3 <= (kr_cast6_mid2_reg_1377 & ap_const_lv2_0);
    tmp_17_fu_1110_p2 <= std_logic_vector(unsigned(p_shl2_fu_1106_p1) - unsigned(tmp_7_mid2_cast_fu_1096_p1));
    tmp_18_fu_874_p2 <= "1" when (unsigned(ap_phi_mux_c_phi_fu_595_p4) < unsigned(ap_const_lv8_EE)) else "0";
    tmp_19_fu_834_p2 <= (exitcond_flatten_mid_fu_828_p2 or exitcond_flatten_fu_810_p2);
    tmp_1_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1232),31));
    tmp_21_fu_1129_p2 <= std_logic_vector(unsigned(tmp_17_fu_1110_p2) + unsigned(tmp_9_mid1_fu_1126_p1));
    tmp_24_fu_956_p3 <= (tmp_10_mid2_fu_948_p3 & ap_const_lv8_0);
    tmp_25_fu_968_p3 <= (tmp_10_mid2_fu_948_p3 & ap_const_lv4_0);
    tmp_26_fu_980_p2 <= std_logic_vector(unsigned(p_shl3_fu_964_p1) - unsigned(p_shl4_fu_976_p1));
    tmp_28_fu_996_p2 <= std_logic_vector(unsigned(tmp_26_fu_980_p2) + unsigned(tmp_14_fu_992_p1));
    tmp_2_cast_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1237),31));
    tmp_30_cast_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_1317_pp0_iter1_reg),64));
        tmp_34_cast_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_772_p2),6));

        tmp_37_cast_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_1086_p2),6));

    tmp_49_cast_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1218_p3),31));
    tmp_4_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1242),31));
    tmp_5_cast_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_1247),31));
    tmp_6_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(feature_src_01_reg_1262),64));
    tmp_7_cast_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kr_phi_fu_535_p4),5));
    tmp_7_fu_744_p1 <= indvar_reg_509(1 - 1 downto 0);
    tmp_7_mid1_cast1_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_1_fu_840_p2),8));
    tmp_7_mid1_cast_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_1_reg_1371),5));
    tmp_7_mid2_cast_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_cast6_mid2_reg_1377),64));
    tmp_8_fu_792_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_phi_fu_583_p4) + unsigned(kr_cast6_fu_752_p1));
    tmp_8_mid1_fu_942_p2 <= std_logic_vector(unsigned(r_1_fu_928_p2) + unsigned(kr_cast6_mid2_cast_fu_860_p1));
    tmp_9_cast_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kc_phi_fu_559_p4),6));
    tmp_9_fu_760_p3 <= (ap_phi_mux_kr_phi_fu_535_p4 & ap_const_lv2_0);
    tmp_9_mid1_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kc_1_reg_1384),64));
    tmp_cast_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1227),31));
    tmp_s_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(weight_src_0_03_reg_1257),64));
end behav;
