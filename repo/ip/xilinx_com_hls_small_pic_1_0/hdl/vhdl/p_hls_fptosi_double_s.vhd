-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_hls_fptosi_double_s is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of p_hls_fptosi_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal p_Val2_s_fu_44_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_1_fu_66_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_V_fu_70_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_V_fu_56_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_i_i_cast1_fu_84_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_fu_88_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_fu_102_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_cast_fu_108_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_112_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_2_cast_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_cast_49_fu_128_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal mantissa_V_1_cast_fu_80_p1 : STD_LOGIC_VECTOR (112 downto 0);
    signal tmp_i_i_48_fu_124_p1 : STD_LOGIC_VECTOR (112 downto 0);
    signal r_V_fu_132_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_138_p2 : STD_LOGIC_VECTOR (112 downto 0);
    signal tmp_2_fu_152_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_156_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_5_fu_166_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_48_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_1_fu_174_p2 : STD_LOGIC_VECTOR (7 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= 
        result_V_1_fu_174_p2 when (p_Result_s_fu_48_p3(0) = '1') else 
        p_Val2_5_fu_166_p3;
    isNeg_fu_94_p3 <= sh_assign_fu_88_p2(11 downto 11);
    mantissa_V_1_cast_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_V_fu_70_p4),113));
    mantissa_V_fu_70_p4 <= ((ap_const_lv1_1 & tmp_V_1_fu_66_p1) & ap_const_lv1_0);
    p_Result_s_fu_48_p3 <= p_Val2_s_fu_44_p1(63 downto 63);
    p_Val2_5_fu_166_p3 <= 
        tmp_2_fu_152_p1 when (isNeg_fu_94_p3(0) = '1') else 
        tmp_3_fu_156_p4;
    p_Val2_s_fu_44_p1 <= x;
    r_V_1_fu_138_p2 <= std_logic_vector(shift_left(unsigned(mantissa_V_1_cast_fu_80_p1),to_integer(unsigned('0' & tmp_i_i_48_fu_124_p1(31-1 downto 0)))));
    r_V_fu_132_p2 <= std_logic_vector(shift_right(unsigned(mantissa_V_fu_70_p4),to_integer(unsigned('0' & tmp_i_i_cast_49_fu_128_p1(31-1 downto 0)))));
    result_V_1_fu_174_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(p_Val2_5_fu_166_p3));
        sh_assign_2_cast_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_112_p3),32));

    sh_assign_fu_88_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(tmp_i_i_i_cast1_fu_84_p1));
    tmp_2_fu_152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_144_p3),8));
    tmp_3_fu_156_p4 <= r_V_1_fu_138_p2(60 downto 53);
    tmp_V_1_fu_66_p1 <= p_Val2_s_fu_44_p1(52 - 1 downto 0);
    tmp_V_fu_56_p4 <= p_Val2_s_fu_44_p1(62 downto 52);
    tmp_fu_144_p3 <= r_V_fu_132_p2(53 downto 53);
    tmp_i_i_48_fu_124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_2_cast_fu_120_p1),113));
    tmp_i_i_cast_49_fu_128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_2_cast_fu_120_p1),54));
        tmp_i_i_cast_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_i_i_fu_102_p2),12));

    tmp_i_i_fu_102_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_V_fu_56_p4));
    tmp_i_i_i_cast1_fu_84_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_56_p4),12));
    ush_fu_112_p3 <= 
        tmp_i_i_cast_fu_108_p1 when (isNeg_fu_94_p3(0) = '1') else 
        sh_assign_fu_88_p2;
end behav;
