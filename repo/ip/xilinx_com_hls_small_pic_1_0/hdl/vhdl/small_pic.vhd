-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity small_pic is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of small_pic is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "small_pic,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=5302,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2472,HLS_SYN_LUT=3395,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_48 : STD_LOGIC_VECTOR (12 downto 0) := "0000001001000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_288 : STD_LOGIC_VECTOR (9 downto 0) := "1010001000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv13_8 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_const_lv10_50 : STD_LOGIC_VECTOR (9 downto 0) := "0001010000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv20_14 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010100";
    constant ap_const_lv20_1E : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000011110";
    constant ap_const_lv20_28 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000101000";
    constant ap_const_lv20_32 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000110010";
    constant ap_const_lv20_3C : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000111100";
    constant ap_const_lv20_46 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000110";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv13_4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_const_lv13_5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000101";
    constant ap_const_lv13_6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000110";
    constant ap_const_lv13_7 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal image_src : STD_LOGIC_VECTOR (31 downto 0);
    signal small_pic_dst : STD_LOGIC_VECTOR (31 downto 0);
    signal therehold : STD_LOGIC_VECTOR (31 downto 0);
    signal distingish_dst : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_flatten_reg_1310 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal exitcond_flatten_reg_1310_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal exitcond_flatten_reg_1310_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal exitcond_flatten_reg_1310_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1310_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_380 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvars_iv_reg_391 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_img_x_reg_402 : STD_LOGIC_VECTOR (9 downto 0);
    signal small_target_index_reg_413 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_img_y_reg_424 : STD_LOGIC_VECTOR (9 downto 0);
    signal small_target_index_s_reg_435 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_cast_fu_449_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_cast_reg_1280 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_1_cast_fu_457_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_1_cast_reg_1292 : STD_LOGIC_VECTOR (33 downto 0);
    signal gmem_addr_reg_1304 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_sig_ioackin_gmem_AWREADY : STD_LOGIC;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter9 : BOOLEAN;
    signal ap_sig_ioackin_gmem_ARREADY : STD_LOGIC;
    signal ap_block_state74_io : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter10 : BOOLEAN;
    signal ap_sig_ioackin_gmem_WREADY : STD_LOGIC;
    signal ap_block_state82_io : BOOLEAN;
    signal ap_block_state90_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state98_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state106_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state114_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_499_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_1314 : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_mid2_fu_511_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_mid2_reg_1319 : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_mid2_reg_1319_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_mid2_reg_1319_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_mid2_reg_1319_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal small_target_index_s_2_fu_525_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326 : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_s_2_reg_1326_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_mid2_fu_565_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_mid2_reg_1339 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_mid2_reg_1339_pp0_iter1_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_mid2_reg_1339_pp0_iter2_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_mid2_reg_1339_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal indvars_iv_mid2_fu_579_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvars_iv_mid2_reg_1350 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_img_x_mid2_fu_587_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_x_mid2_reg_1355 : STD_LOGIC_VECTOR (9 downto 0);
    signal small_target_index_m_fu_595_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal small_target_index_m_reg_1360 : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_addr_1_reg_1365 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_2_reg_1371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state25_io : BOOLEAN;
    signal ap_block_state33_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state41_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state49_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state57_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state65_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_state73_pp0_stage7_iter8 : BOOLEAN;
    signal ap_block_state81_pp0_stage7_iter9 : BOOLEAN;
    signal ap_block_state81_io : BOOLEAN;
    signal ap_block_state89_pp0_stage7_iter10 : BOOLEAN;
    signal ap_block_state97_pp0_stage7_iter11 : BOOLEAN;
    signal ap_block_state105_pp0_stage7_iter12 : BOOLEAN;
    signal ap_block_state113_pp0_stage7_iter13 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_8_7_fu_676_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_7_reg_1377 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_img_y_1_7_fu_681_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_1_7_reg_1382 : STD_LOGIC_VECTOR (9 downto 0);
    signal gmem_addr_1_read_reg_1387 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_3_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state24_io : BOOLEAN;
    signal ap_block_state32_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_state72_pp0_stage6_iter8 : BOOLEAN;
    signal ap_block_state80_pp0_stage6_iter9 : BOOLEAN;
    signal ap_block_state88_pp0_stage6_iter10 : BOOLEAN;
    signal ap_block_state88_io : BOOLEAN;
    signal ap_block_state96_pp0_stage6_iter11 : BOOLEAN;
    signal ap_block_state96_io : BOOLEAN;
    signal ap_block_state104_pp0_stage6_iter12 : BOOLEAN;
    signal ap_block_state112_pp0_stage6_iter13 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gmem_addr_4_reg_1398 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state31_io : BOOLEAN;
    signal ap_block_state39_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state39_io : BOOLEAN;
    signal ap_block_state47_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_state71_pp0_stage5_iter8 : BOOLEAN;
    signal ap_block_state79_pp0_stage5_iter9 : BOOLEAN;
    signal ap_block_state87_pp0_stage5_iter10 : BOOLEAN;
    signal ap_block_state95_pp0_stage5_iter11 : BOOLEAN;
    signal ap_block_state95_io : BOOLEAN;
    signal ap_block_state103_pp0_stage5_iter12 : BOOLEAN;
    signal ap_block_state111_pp0_stage5_iter13 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal gmem_addr_3_read_reg_1404 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_5_reg_1409 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state38_io : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state70_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state78_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_state86_pp0_stage4_iter10 : BOOLEAN;
    signal ap_block_state94_pp0_stage4_iter11 : BOOLEAN;
    signal ap_block_state102_pp0_stage4_iter12 : BOOLEAN;
    signal ap_block_state102_io : BOOLEAN;
    signal ap_block_state110_pp0_stage4_iter13 : BOOLEAN;
    signal ap_block_state110_io : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal gmem_addr_7_reg_1415 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_7_reg_1415_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_9_reg_1421 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_9_reg_1421_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_9_reg_1421_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_9_reg_1421_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1427_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1427_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1427_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1427_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1427_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1433_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1439_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state45_io : BOOLEAN;
    signal ap_block_state53_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state53_io : BOOLEAN;
    signal ap_block_state61_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state69_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state77_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state85_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state93_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state101_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_state109_pp0_stage3_iter13 : BOOLEAN;
    signal ap_block_state109_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal gmem_addr_5_read_reg_1451 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_8_reg_1456 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state67_io : BOOLEAN;
    signal ap_block_state75_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state83_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state91_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state99_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state107_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state115_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gmem_addr_7_read_reg_1462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state52_io : BOOLEAN;
    signal ap_block_state60_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state60_io : BOOLEAN;
    signal ap_block_state68_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state68_io : BOOLEAN;
    signal ap_block_state76_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state84_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state92_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state100_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state108_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal gmem_addr_10_reg_1467 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_9_read_reg_1473 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_12_reg_1478 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_read_reg_1484 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_14_reg_1489 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_16_reg_1495 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_16_reg_1495_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_read_reg_1501 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_15_read_reg_1506 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_read_reg_1511 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_384_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_indvars_iv_phi_fu_395_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_step_img_x_phi_fu_406_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_small_target_index_phi_fu_417_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_step_img_y_phi_fu_428_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_small_target_index_s_phi_fu_439_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum_cast_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum_c_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum7_cast_fu_735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum8_s_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum9_cast_fu_867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum1_cast_fu_918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum2_cast_fu_969_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum3_cast_fu_1020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum4_cast_fu_1071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image_src2_sum5_cast_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum1_s_fu_1146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum2_s_fu_1170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum3_s_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum4_s_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum5_s_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal small_pic_dst4_sum6_s_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_gmem_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem_AWREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_446_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_453_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_cast_fu_457_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl1_fu_475_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_cast_fu_483_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_fu_467_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal exitcond_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal small_target_index_1_fu_519_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_img_x_s_fu_533_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_mid1_fu_547_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_mid1_fu_539_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl1_cast_mid1_fu_555_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_mid1_fu_559_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_fu_487_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal indvars_iv_next_dup_fu_573_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_img_y_cast_fu_603_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pixel_index_fu_607_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_fu_617_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl2_cast_fu_625_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal pixel_index_cast1_fu_613_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_fu_629_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_cast_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_cast_fu_639_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum_fu_643_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_7_cast_fu_658_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum_fu_661_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal step_img_y_1_s_fu_686_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal step_img_y_1_cast_fu_691_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pixel_index_1_fu_695_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_1_fu_704_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl2_1_cast_fu_712_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal pixel_index_1_cast1_fu_700_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_1_fu_716_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_1_cast_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_cast_fu_726_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum7_fu_730_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_8_s_fu_745_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_1_cast_fu_750_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum8_fu_754_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp17_cast_mid2_v_fu_769_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp28_cast_mid2_v_fu_778_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp39_cast_mid2_v_fu_787_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp410_cast_mid2_v_fu_796_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp511_cast_mid2_v_fu_805_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp612_cast_mid2_v_fu_814_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp17_cast_mid2_fu_774_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal step_img_y_cast1_fu_823_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal pixel_index_2_fu_826_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_2_fu_836_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_2_cast_fu_844_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixel_index_2_cast1_fu_832_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_2_fu_848_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_2_cast_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_2_cast_fu_858_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum9_fu_862_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp28_cast_mid2_fu_783_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal pixel_index_3_fu_877_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_3_fu_887_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_3_cast_fu_895_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixel_index_3_cast1_fu_883_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_3_fu_899_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_3_cast_fu_905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_3_cast_fu_909_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum1_fu_913_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp39_cast_mid2_fu_792_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal pixel_index_4_fu_928_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_4_fu_938_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_4_cast_fu_946_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixel_index_4_cast1_fu_934_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_4_fu_950_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_4_cast_fu_956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_4_cast_fu_960_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum2_fu_964_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp410_cast_mid2_fu_801_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal pixel_index_5_fu_979_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_5_fu_989_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_5_cast_fu_997_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixel_index_5_cast1_fu_985_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_5_fu_1001_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_5_cast_fu_1007_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_5_cast_fu_1011_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum3_fu_1015_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp511_cast_mid2_fu_810_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal pixel_index_6_fu_1030_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_6_fu_1040_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_6_cast_fu_1048_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixel_index_6_cast1_fu_1036_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_6_fu_1052_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_6_cast_fu_1058_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_6_cast_fu_1062_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum4_fu_1066_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp612_cast_mid2_fu_819_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal pixel_index_7_fu_1081_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_7_fu_1091_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_7_cast_fu_1099_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixel_index_7_cast1_fu_1087_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_7_fu_1103_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_7_cast_fu_1109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_7_cast_fu_1113_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image_src2_sum5_fu_1117_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_8_1_fu_1132_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_2_cast_fu_1137_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum1_fu_1141_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_8_2_fu_1156_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_3_cast_fu_1161_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum2_fu_1165_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_8_3_fu_1180_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_4_cast_fu_1185_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum3_fu_1189_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_8_4_fu_1204_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_5_cast_fu_1209_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum4_fu_1213_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_8_5_fu_1228_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_6_cast_fu_1233_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum5_fu_1237_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_8_6_fu_1252_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_7_cast_fu_1257_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal small_pic_dst4_sum6_fu_1261_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1050 : BOOLEAN;
    signal ap_condition_1091 : BOOLEAN;
    signal ap_condition_1131 : BOOLEAN;
    signal ap_condition_1171 : BOOLEAN;
    signal ap_condition_1206 : BOOLEAN;
    signal ap_condition_1236 : BOOLEAN;
    signal ap_condition_1266 : BOOLEAN;
    signal ap_condition_1296 : BOOLEAN;
    signal ap_condition_1068 : BOOLEAN;
    signal ap_condition_1108 : BOOLEAN;
    signal ap_condition_1148 : BOOLEAN;
    signal ap_condition_1188 : BOOLEAN;
    signal ap_condition_1218 : BOOLEAN;
    signal ap_condition_1248 : BOOLEAN;
    signal ap_condition_1278 : BOOLEAN;
    signal ap_condition_1308 : BOOLEAN;
    signal ap_condition_1078 : BOOLEAN;
    signal ap_condition_1117 : BOOLEAN;
    signal ap_condition_1157 : BOOLEAN;
    signal ap_condition_1197 : BOOLEAN;
    signal ap_condition_1227 : BOOLEAN;
    signal ap_condition_1257 : BOOLEAN;
    signal ap_condition_1287 : BOOLEAN;
    signal ap_condition_1317 : BOOLEAN;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component small_pic_sitofp_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component small_pic_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        image_src : OUT STD_LOGIC_VECTOR (31 downto 0);
        small_pic_dst : OUT STD_LOGIC_VECTOR (31 downto 0);
        therehold : OUT STD_LOGIC_VECTOR (31 downto 0);
        distingish_dst : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component small_pic_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    small_pic_AXILiteS_s_axi_U : component small_pic_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => grp_fu_446_p1,
        image_src => image_src,
        small_pic_dst => small_pic_dst,
        therehold => therehold,
        distingish_dst => distingish_dst);

    small_pic_gmem_m_axi_U : component small_pic_gmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_1,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    small_pic_sitofp_bkb_U1 : component small_pic_sitofp_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_446_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_446_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)) or ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state116)))) then 
                    ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
                elsif ((((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state116)))) then 
                    ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
                elsif ((((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001)))) then 
                    ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
                elsif ((((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((gmem_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001)))) then 
                    ap_reg_ioackin_gmem_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
                indvar_flatten_reg_380 <= indvar_flatten_next_reg_1314;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_380 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvars_iv_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
                indvars_iv_reg_391 <= indvars_iv_mid2_reg_1350;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvars_iv_reg_391 <= ap_const_lv13_48;
            end if; 
        end if;
    end process;

    small_target_index_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
                small_target_index_reg_413 <= small_target_index_m_reg_1360;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                small_target_index_reg_413 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    small_target_index_s_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
                small_target_index_s_reg_435 <= tmp_8_7_reg_1377;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                small_target_index_s_reg_435 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    step_img_x_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
                step_img_x_reg_402 <= step_img_x_mid2_reg_1355;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                step_img_x_reg_402 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    step_img_y_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
                step_img_y_reg_424 <= step_img_y_1_7_reg_1382;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                step_img_y_reg_424 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1310 <= exitcond_flatten_fu_493_p2;
                exitcond_flatten_reg_1310_pp0_iter10_reg <= exitcond_flatten_reg_1310_pp0_iter9_reg;
                exitcond_flatten_reg_1310_pp0_iter11_reg <= exitcond_flatten_reg_1310_pp0_iter10_reg;
                exitcond_flatten_reg_1310_pp0_iter12_reg <= exitcond_flatten_reg_1310_pp0_iter11_reg;
                exitcond_flatten_reg_1310_pp0_iter13_reg <= exitcond_flatten_reg_1310_pp0_iter12_reg;
                exitcond_flatten_reg_1310_pp0_iter14_reg <= exitcond_flatten_reg_1310_pp0_iter13_reg;
                exitcond_flatten_reg_1310_pp0_iter1_reg <= exitcond_flatten_reg_1310;
                exitcond_flatten_reg_1310_pp0_iter2_reg <= exitcond_flatten_reg_1310_pp0_iter1_reg;
                exitcond_flatten_reg_1310_pp0_iter3_reg <= exitcond_flatten_reg_1310_pp0_iter2_reg;
                exitcond_flatten_reg_1310_pp0_iter4_reg <= exitcond_flatten_reg_1310_pp0_iter3_reg;
                exitcond_flatten_reg_1310_pp0_iter5_reg <= exitcond_flatten_reg_1310_pp0_iter4_reg;
                exitcond_flatten_reg_1310_pp0_iter6_reg <= exitcond_flatten_reg_1310_pp0_iter5_reg;
                exitcond_flatten_reg_1310_pp0_iter7_reg <= exitcond_flatten_reg_1310_pp0_iter6_reg;
                exitcond_flatten_reg_1310_pp0_iter8_reg <= exitcond_flatten_reg_1310_pp0_iter7_reg;
                exitcond_flatten_reg_1310_pp0_iter9_reg <= exitcond_flatten_reg_1310_pp0_iter8_reg;
                small_target_index_s_2_reg_1326_pp0_iter10_reg <= small_target_index_s_2_reg_1326_pp0_iter9_reg;
                small_target_index_s_2_reg_1326_pp0_iter11_reg <= small_target_index_s_2_reg_1326_pp0_iter10_reg;
                small_target_index_s_2_reg_1326_pp0_iter1_reg <= small_target_index_s_2_reg_1326;
                small_target_index_s_2_reg_1326_pp0_iter2_reg <= small_target_index_s_2_reg_1326_pp0_iter1_reg;
                small_target_index_s_2_reg_1326_pp0_iter3_reg <= small_target_index_s_2_reg_1326_pp0_iter2_reg;
                small_target_index_s_2_reg_1326_pp0_iter4_reg <= small_target_index_s_2_reg_1326_pp0_iter3_reg;
                small_target_index_s_2_reg_1326_pp0_iter5_reg <= small_target_index_s_2_reg_1326_pp0_iter4_reg;
                small_target_index_s_2_reg_1326_pp0_iter6_reg <= small_target_index_s_2_reg_1326_pp0_iter5_reg;
                small_target_index_s_2_reg_1326_pp0_iter7_reg <= small_target_index_s_2_reg_1326_pp0_iter6_reg;
                small_target_index_s_2_reg_1326_pp0_iter8_reg <= small_target_index_s_2_reg_1326_pp0_iter7_reg;
                small_target_index_s_2_reg_1326_pp0_iter9_reg <= small_target_index_s_2_reg_1326_pp0_iter8_reg;
                step_img_y_mid2_reg_1319_pp0_iter1_reg <= step_img_y_mid2_reg_1319;
                step_img_y_mid2_reg_1319_pp0_iter2_reg <= step_img_y_mid2_reg_1319_pp0_iter1_reg;
                step_img_y_mid2_reg_1319_pp0_iter3_reg <= step_img_y_mid2_reg_1319_pp0_iter2_reg;
                    tmp_2_mid2_reg_1339_pp0_iter1_reg(19 downto 8) <= tmp_2_mid2_reg_1339(19 downto 8);
                    tmp_2_mid2_reg_1339_pp0_iter2_reg(19 downto 8) <= tmp_2_mid2_reg_1339_pp0_iter1_reg(19 downto 8);
                    tmp_2_mid2_reg_1339_pp0_iter3_reg(19 downto 8) <= tmp_2_mid2_reg_1339_pp0_iter2_reg(19 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0))) then
                gmem_addr_10_reg_1467 <= small_pic_dst4_sum3_s_fu_1194_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0))) then
                gmem_addr_11_read_reg_1484 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0))) then
                gmem_addr_11_reg_1427 <= image_src2_sum3_cast_fu_1020_p1(32 - 1 downto 0);
                gmem_addr_13_reg_1433 <= image_src2_sum4_cast_fu_1071_p1(32 - 1 downto 0);
                gmem_addr_15_reg_1439 <= image_src2_sum5_cast_fu_1122_p1(32 - 1 downto 0);
                gmem_addr_5_reg_1409 <= image_src2_sum9_cast_fu_867_p1(32 - 1 downto 0);
                gmem_addr_7_reg_1415 <= image_src2_sum1_cast_fu_918_p1(32 - 1 downto 0);
                gmem_addr_9_reg_1421 <= image_src2_sum2_cast_fu_969_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                gmem_addr_11_reg_1427_pp0_iter4_reg <= gmem_addr_11_reg_1427;
                gmem_addr_11_reg_1427_pp0_iter5_reg <= gmem_addr_11_reg_1427_pp0_iter4_reg;
                gmem_addr_11_reg_1427_pp0_iter6_reg <= gmem_addr_11_reg_1427_pp0_iter5_reg;
                gmem_addr_11_reg_1427_pp0_iter7_reg <= gmem_addr_11_reg_1427_pp0_iter6_reg;
                gmem_addr_11_reg_1427_pp0_iter8_reg <= gmem_addr_11_reg_1427_pp0_iter7_reg;
                gmem_addr_13_reg_1433_pp0_iter10_reg <= gmem_addr_13_reg_1433_pp0_iter9_reg;
                gmem_addr_13_reg_1433_pp0_iter4_reg <= gmem_addr_13_reg_1433;
                gmem_addr_13_reg_1433_pp0_iter5_reg <= gmem_addr_13_reg_1433_pp0_iter4_reg;
                gmem_addr_13_reg_1433_pp0_iter6_reg <= gmem_addr_13_reg_1433_pp0_iter5_reg;
                gmem_addr_13_reg_1433_pp0_iter7_reg <= gmem_addr_13_reg_1433_pp0_iter6_reg;
                gmem_addr_13_reg_1433_pp0_iter8_reg <= gmem_addr_13_reg_1433_pp0_iter7_reg;
                gmem_addr_13_reg_1433_pp0_iter9_reg <= gmem_addr_13_reg_1433_pp0_iter8_reg;
                gmem_addr_15_reg_1439_pp0_iter10_reg <= gmem_addr_15_reg_1439_pp0_iter9_reg;
                gmem_addr_15_reg_1439_pp0_iter11_reg <= gmem_addr_15_reg_1439_pp0_iter10_reg;
                gmem_addr_15_reg_1439_pp0_iter4_reg <= gmem_addr_15_reg_1439;
                gmem_addr_15_reg_1439_pp0_iter5_reg <= gmem_addr_15_reg_1439_pp0_iter4_reg;
                gmem_addr_15_reg_1439_pp0_iter6_reg <= gmem_addr_15_reg_1439_pp0_iter5_reg;
                gmem_addr_15_reg_1439_pp0_iter7_reg <= gmem_addr_15_reg_1439_pp0_iter6_reg;
                gmem_addr_15_reg_1439_pp0_iter8_reg <= gmem_addr_15_reg_1439_pp0_iter7_reg;
                gmem_addr_15_reg_1439_pp0_iter9_reg <= gmem_addr_15_reg_1439_pp0_iter8_reg;
                gmem_addr_16_reg_1495_pp0_iter12_reg <= gmem_addr_16_reg_1495;
                gmem_addr_7_reg_1415_pp0_iter4_reg <= gmem_addr_7_reg_1415;
                gmem_addr_9_reg_1421_pp0_iter4_reg <= gmem_addr_9_reg_1421;
                gmem_addr_9_reg_1421_pp0_iter5_reg <= gmem_addr_9_reg_1421_pp0_iter4_reg;
                gmem_addr_9_reg_1421_pp0_iter6_reg <= gmem_addr_9_reg_1421_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0))) then
                gmem_addr_12_reg_1478 <= small_pic_dst4_sum4_s_fu_1218_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0))) then
                gmem_addr_13_read_reg_1501 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0))) then
                gmem_addr_14_reg_1489 <= small_pic_dst4_sum5_s_fu_1242_p1(32 - 1 downto 0);
                gmem_addr_16_reg_1495 <= small_pic_dst4_sum6_s_fu_1266_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0))) then
                gmem_addr_15_read_reg_1506 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then
                gmem_addr_1_read_reg_1387 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_493_p2 = ap_const_lv1_0))) then
                gmem_addr_1_reg_1365 <= image_src2_sum_cast_fu_648_p1(32 - 1 downto 0);
                small_target_index_s_2_reg_1326 <= small_target_index_s_2_fu_525_p3;
                step_img_y_mid2_reg_1319 <= step_img_y_mid2_fu_511_p3;
                    tmp_2_mid2_reg_1339(19 downto 8) <= tmp_2_mid2_fu_565_p3(19 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then
                gmem_addr_2_reg_1371 <= small_pic_dst4_sum_c_fu_666_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0))) then
                gmem_addr_3_read_reg_1404 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0))) then
                gmem_addr_3_reg_1392 <= image_src2_sum7_cast_fu_735_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0))) then
                gmem_addr_4_reg_1398 <= small_pic_dst4_sum8_s_fu_759_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0))) then
                gmem_addr_5_read_reg_1451 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0))) then
                gmem_addr_6_reg_1445 <= small_pic_dst4_sum1_s_fu_1146_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0))) then
                gmem_addr_7_read_reg_1462 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0))) then
                gmem_addr_8_reg_1456 <= small_pic_dst4_sum2_s_fu_1170_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0))) then
                gmem_addr_9_read_reg_1473 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state123))) then
                gmem_addr_read_reg_1511 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                gmem_addr_reg_1304 <= tmp_1_fu_453_p1(32 - 1 downto 0);
                tmp_1_cast_reg_1292 <= tmp_1_cast_fu_457_p1;
                tmp_cast_reg_1280 <= tmp_cast_fu_449_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_1314 <= indvar_flatten_next_fu_499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_493_p2 = ap_const_lv1_0))) then
                indvars_iv_mid2_reg_1350 <= indvars_iv_mid2_fu_579_p3;
                small_target_index_m_reg_1360 <= small_target_index_m_fu_595_p3;
                step_img_x_mid2_reg_1355 <= step_img_x_mid2_fu_587_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then
                step_img_y_1_7_reg_1382 <= step_img_y_1_7_fu_681_p2;
                tmp_8_7_reg_1377 <= tmp_8_7_fu_676_p2;
            end if;
        end if;
    end process;
    tmp_2_mid2_reg_1339(7 downto 0) <= "00000000";
    tmp_2_mid2_reg_1339_pp0_iter1_reg(7 downto 0) <= "00000000";
    tmp_2_mid2_reg_1339_pp0_iter2_reg(7 downto 0) <= "00000000";
    tmp_2_mid2_reg_1339_pp0_iter3_reg(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state116, ap_CS_fsm_state123, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, gmem_RVALID, exitcond_flatten_fu_493_p2, ap_sig_ioackin_gmem_ARREADY, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_493_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_493_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state116;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state116;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state116 => 
                if (((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state116))) then
                    ap_NS_fsm <= ap_ST_fsm_state117;
                else
                    ap_NS_fsm <= ap_ST_fsm_state116;
                end if;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                if (((gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state123))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                else
                    ap_NS_fsm <= ap_ST_fsm_state123;
                end if;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state116 <= ap_CS_fsm(9);
    ap_CS_fsm_state123 <= ap_CS_fsm(16);
    ap_CS_fsm_state124 <= ap_CS_fsm(17);
    ap_CS_fsm_state127 <= ap_CS_fsm(20);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(exitcond_flatten_reg_1310, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage0_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(exitcond_flatten_reg_1310, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, gmem_RVALID, gmem_BVALID, ap_block_state10_io, ap_block_state74_io, ap_block_state82_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state82_io) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state74_io) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(exitcond_flatten_reg_1310, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, gmem_RVALID, gmem_BVALID, ap_block_state10_io, ap_block_state74_io, ap_block_state82_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state82_io) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state74_io) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter14, exitcond_flatten_reg_1310_pp0_iter14_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage1_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter14_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter14, exitcond_flatten_reg_1310_pp0_iter14_reg, gmem_RVALID, gmem_BVALID, ap_block_state3_io, ap_block_state11_io, ap_block_state67_io)
    begin
                ap_block_pp0_stage1_11001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter14_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state67_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)))) or ((ap_const_boolean_1 = ap_block_state11_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter14, exitcond_flatten_reg_1310_pp0_iter14_reg, gmem_RVALID, gmem_BVALID, ap_block_state3_io, ap_block_state11_io, ap_block_state67_io)
    begin
                ap_block_pp0_stage1_subdone <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter14_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state67_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)))) or ((ap_const_boolean_1 = ap_block_state11_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage2_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, gmem_RVALID, gmem_BVALID, ap_block_state52_io, ap_block_state60_io, ap_block_state68_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_const_boolean_1 = ap_block_state68_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state60_io) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state52_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, gmem_RVALID, gmem_BVALID, ap_block_state52_io, ap_block_state60_io, ap_block_state68_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_const_boolean_1 = ap_block_state68_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state60_io) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state52_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage3_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, gmem_RVALID, gmem_BVALID, ap_block_state45_io, ap_block_state53_io, ap_block_state109_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state109_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state53_io) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state45_io) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, gmem_RVALID, gmem_BVALID, ap_block_state45_io, ap_block_state53_io, ap_block_state109_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state109_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state53_io) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state45_io) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage4_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, gmem_RVALID, gmem_BVALID, ap_block_state38_io, ap_block_state102_io, ap_block_state110_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_const_boolean_1 = ap_block_state110_io) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state102_io) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state38_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, gmem_RVALID, gmem_BVALID, ap_block_state38_io, ap_block_state102_io, ap_block_state110_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_const_boolean_1 = ap_block_state110_io) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state102_io) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state38_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage5_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, gmem_RVALID, gmem_BVALID, ap_block_state31_io, ap_block_state39_io, ap_block_state95_io)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state95_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state39_io) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state31_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, gmem_RVALID, gmem_BVALID, ap_block_state31_io, ap_block_state39_io, ap_block_state95_io)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state95_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state39_io) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state31_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage6_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, gmem_RVALID, gmem_BVALID, ap_block_state24_io, ap_block_state88_io, ap_block_state96_io)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_const_boolean_1 = ap_block_state96_io) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state88_io) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state24_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, gmem_RVALID, gmem_BVALID, ap_block_state24_io, ap_block_state88_io, ap_block_state96_io)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_const_boolean_1 = ap_block_state96_io) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state88_io) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state24_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage7_01001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, gmem_RVALID, gmem_BVALID, ap_block_state17_io, ap_block_state25_io, ap_block_state81_io)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state81_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state25_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state17_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, gmem_RVALID, gmem_BVALID, ap_block_state17_io, ap_block_state25_io, ap_block_state81_io)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state81_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)))) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state25_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state17_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state100_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state101_pp0_stage3_iter12_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter12_reg, gmem_BVALID)
    begin
                ap_block_state101_pp0_stage3_iter12 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0));
    end process;


    ap_block_state102_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter12_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state102_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0));
    end process;

        ap_block_state102_pp0_stage4_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp0_stage5_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage6_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp0_stage7_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state109_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter13_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state109_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0));
    end process;


    ap_block_state109_pp0_stage3_iter13_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter13_reg, gmem_RVALID)
    begin
                ap_block_state109_pp0_stage3_iter13 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0));
    end process;


    ap_block_state10_io_assign_proc : process(exitcond_flatten_reg_1310, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state10_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0));
    end process;


    ap_block_state10_pp0_stage0_iter1_assign_proc : process(exitcond_flatten_reg_1310, gmem_RVALID)
    begin
                ap_block_state10_pp0_stage0_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0));
    end process;


    ap_block_state110_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter13_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state110_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0));
    end process;

        ap_block_state110_pp0_stage4_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage5_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp0_stage6_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp0_stage7_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state115_pp0_stage1_iter14_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter14_reg, gmem_BVALID)
    begin
                ap_block_state115_pp0_stage1_iter14 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter14_reg = ap_const_lv1_0));
    end process;


    ap_block_state11_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter1_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state11_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage6_iter1_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter1_reg, gmem_BVALID)
    begin
                ap_block_state16_pp0_stage6_iter1 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state17_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter1_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state17_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter2_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state24_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state24_pp0_stage6_iter2_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter2_reg, gmem_RVALID)
    begin
                ap_block_state24_pp0_stage6_iter2 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter2_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state25_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state25_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_pp0_stage4_iter3_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter3_reg, gmem_BVALID)
    begin
                ap_block_state30_pp0_stage4_iter3 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state31_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter3_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state31_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state31_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter4_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state38_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state38_pp0_stage4_iter4_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter4_reg, gmem_RVALID)
    begin
                ap_block_state38_pp0_stage4_iter4 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state39_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter4_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state39_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0));
    end process;

        ap_block_state39_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(exitcond_flatten_reg_1310, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state3_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state44_pp0_stage2_iter5_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter5_reg, gmem_BVALID)
    begin
                ap_block_state44_pp0_stage2_iter5 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_block_state45_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter5_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state45_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0));
    end process;

        ap_block_state45_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state52_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter6_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state52_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0));
    end process;


    ap_block_state52_pp0_stage2_iter6_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter6_reg, gmem_RVALID)
    begin
                ap_block_state52_pp0_stage2_iter6 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0));
    end process;


    ap_block_state53_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter6_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state53_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0));
    end process;

        ap_block_state53_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state58_pp0_stage0_iter7_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter6_reg, gmem_BVALID)
    begin
                ap_block_state58_pp0_stage0_iter7 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0));
    end process;

        ap_block_state59_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state60_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter7_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state60_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0));
    end process;

        ap_block_state60_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state67_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter8_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state67_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state67_pp0_stage1_iter8_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter8_reg, gmem_RVALID)
    begin
                ap_block_state67_pp0_stage1_iter8 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state68_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter8_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state68_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0));
    end process;

        ap_block_state68_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage5_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage6_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state73_pp0_stage7_iter8_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter8_reg, gmem_BVALID)
    begin
                ap_block_state73_pp0_stage7_iter8 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state74_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter8_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state74_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0));
    end process;

        ap_block_state74_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage5_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage6_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state81_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter9_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state81_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0));
    end process;


    ap_block_state81_pp0_stage7_iter9_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter9_reg, gmem_RVALID)
    begin
                ap_block_state81_pp0_stage7_iter9 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0));
    end process;


    ap_block_state82_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter9_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state82_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0));
    end process;

        ap_block_state82_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state87_pp0_stage5_iter10_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter10_reg, gmem_BVALID)
    begin
                ap_block_state87_pp0_stage5_iter10 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0));
    end process;


    ap_block_state88_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter10_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state88_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0));
    end process;

        ap_block_state88_pp0_stage6_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage7_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state95_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter11_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state95_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0));
    end process;


    ap_block_state95_pp0_stage5_iter11_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter11_reg, gmem_RVALID)
    begin
                ap_block_state95_pp0_stage5_iter11 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0));
    end process;


    ap_block_state96_io_assign_proc : process(exitcond_flatten_reg_1310_pp0_iter11_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state96_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0));
    end process;

        ap_block_state96_pp0_stage6_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage7_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1050_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1310, ap_block_pp0_stage1_01001)
    begin
                ap_condition_1050 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001));
    end process;


    ap_condition_1068_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_1068 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_1078_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_block_pp0_stage1_01001)
    begin
                ap_condition_1078 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001));
    end process;


    ap_condition_1091_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_01001)
    begin
                ap_condition_1091 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001));
    end process;


    ap_condition_1108_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_block_pp0_stage6_01001)
    begin
                ap_condition_1108 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001));
    end process;


    ap_condition_1117_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_block_pp0_stage7_01001)
    begin
                ap_condition_1117 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001));
    end process;


    ap_condition_1131_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_01001)
    begin
                ap_condition_1131 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001));
    end process;


    ap_condition_1148_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_block_pp0_stage4_01001)
    begin
                ap_condition_1148 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001));
    end process;


    ap_condition_1157_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_block_pp0_stage5_01001)
    begin
                ap_condition_1157 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001));
    end process;


    ap_condition_1171_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001)
    begin
                ap_condition_1171 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001));
    end process;


    ap_condition_1188_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_block_pp0_stage2_01001)
    begin
                ap_condition_1188 <= ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001));
    end process;


    ap_condition_1197_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_block_pp0_stage3_01001)
    begin
                ap_condition_1197 <= ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001));
    end process;


    ap_condition_1206_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter7, exitcond_flatten_reg_1310_pp0_iter7_reg, ap_block_pp0_stage2_01001)
    begin
                ap_condition_1206 <= ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001));
    end process;


    ap_condition_1218_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_block_pp0_stage1_01001)
    begin
                ap_condition_1218 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001));
    end process;


    ap_condition_1227_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_block_pp0_stage2_01001)
    begin
                ap_condition_1227 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001));
    end process;


    ap_condition_1236_assign_proc : process(ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_01001)
    begin
                ap_condition_1236 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_1248_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_block_pp0_stage7_01001)
    begin
                ap_condition_1248 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001));
    end process;


    ap_condition_1257_assign_proc : process(ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_01001)
    begin
                ap_condition_1257 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_1266_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_block_pp0_stage6_01001)
    begin
                ap_condition_1266 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001));
    end process;


    ap_condition_1278_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_block_pp0_stage5_01001)
    begin
                ap_condition_1278 <= ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001));
    end process;


    ap_condition_1287_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_block_pp0_stage6_01001)
    begin
                ap_condition_1287 <= ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001));
    end process;


    ap_condition_1296_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_block_pp0_stage4_01001)
    begin
                ap_condition_1296 <= ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001));
    end process;


    ap_condition_1308_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, ap_block_pp0_stage3_01001)
    begin
                ap_condition_1308 <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001));
    end process;


    ap_condition_1317_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, ap_block_pp0_stage4_01001)
    begin
                ap_condition_1317 <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_493_p2)
    begin
        if ((exitcond_flatten_fu_493_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state127)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_384_p4_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvar_flatten_reg_380, indvar_flatten_next_reg_1314)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_384_p4 <= indvar_flatten_next_reg_1314;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_384_p4 <= indvar_flatten_reg_380;
        end if; 
    end process;


    ap_phi_mux_indvars_iv_phi_fu_395_p4_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvars_iv_reg_391, indvars_iv_mid2_reg_1350)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv_phi_fu_395_p4 <= indvars_iv_mid2_reg_1350;
        else 
            ap_phi_mux_indvars_iv_phi_fu_395_p4 <= indvars_iv_reg_391;
        end if; 
    end process;


    ap_phi_mux_small_target_index_phi_fu_417_p4_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, small_target_index_reg_413, small_target_index_m_reg_1360)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
            ap_phi_mux_small_target_index_phi_fu_417_p4 <= small_target_index_m_reg_1360;
        else 
            ap_phi_mux_small_target_index_phi_fu_417_p4 <= small_target_index_reg_413;
        end if; 
    end process;


    ap_phi_mux_small_target_index_s_phi_fu_439_p4_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, small_target_index_s_reg_435, tmp_8_7_reg_1377)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
            ap_phi_mux_small_target_index_s_phi_fu_439_p4 <= tmp_8_7_reg_1377;
        else 
            ap_phi_mux_small_target_index_s_phi_fu_439_p4 <= small_target_index_s_reg_435;
        end if; 
    end process;


    ap_phi_mux_step_img_x_phi_fu_406_p4_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, step_img_x_reg_402, step_img_x_mid2_reg_1355)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
            ap_phi_mux_step_img_x_phi_fu_406_p4 <= step_img_x_mid2_reg_1355;
        else 
            ap_phi_mux_step_img_x_phi_fu_406_p4 <= step_img_x_reg_402;
        end if; 
    end process;


    ap_phi_mux_step_img_y_phi_fu_428_p4_assign_proc : process(exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, step_img_y_reg_424, step_img_y_1_7_reg_1382)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0))) then 
            ap_phi_mux_step_img_y_phi_fu_428_p4 <= step_img_y_1_7_reg_1382;
        else 
            ap_phi_mux_step_img_y_phi_fu_428_p4 <= step_img_y_reg_424;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state127)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_gmem_ARREADY_assign_proc : process(gmem_ARREADY, ap_reg_ioackin_gmem_ARREADY)
    begin
        if ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_ARREADY <= gmem_ARREADY;
        else 
            ap_sig_ioackin_gmem_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem_AWREADY_assign_proc : process(gmem_AWREADY, ap_reg_ioackin_gmem_AWREADY)
    begin
        if ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_AWREADY <= gmem_AWREADY;
        else 
            ap_sig_ioackin_gmem_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem_WREADY_assign_proc : process(gmem_WREADY, ap_reg_ioackin_gmem_WREADY)
    begin
        if ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_WREADY <= gmem_WREADY;
        else 
            ap_sig_ioackin_gmem_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond_flatten_fu_493_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_384_p4 = ap_const_lv10_288) else "0";
    exitcond_fu_505_p2 <= "1" when (ap_phi_mux_small_target_index_s_phi_fu_439_p4 = ap_phi_mux_indvars_iv_phi_fu_395_p4) else "0";

    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state116, gmem_addr_reg_1304, gmem_addr_1_reg_1365, gmem_addr_3_reg_1392, gmem_addr_5_reg_1409, gmem_addr_7_reg_1415_pp0_iter4_reg, gmem_addr_9_reg_1421_pp0_iter6_reg, gmem_addr_11_reg_1427_pp0_iter8_reg, gmem_addr_13_reg_1433_pp0_iter10_reg, gmem_addr_15_reg_1439_pp0_iter11_reg, ap_reg_ioackin_gmem_ARREADY, ap_condition_1050, ap_condition_1091, ap_condition_1131, ap_condition_1171, ap_condition_1206, ap_condition_1236, ap_condition_1266, ap_condition_1296)
    begin
        if ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state116)) then 
                gmem_ARADDR <= gmem_addr_reg_1304;
            elsif ((ap_const_boolean_1 = ap_condition_1296)) then 
                gmem_ARADDR <= gmem_addr_15_reg_1439_pp0_iter11_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1266)) then 
                gmem_ARADDR <= gmem_addr_13_reg_1433_pp0_iter10_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1236)) then 
                gmem_ARADDR <= gmem_addr_11_reg_1427_pp0_iter8_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1206)) then 
                gmem_ARADDR <= gmem_addr_9_reg_1421_pp0_iter6_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1171)) then 
                gmem_ARADDR <= gmem_addr_7_reg_1415_pp0_iter4_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1131)) then 
                gmem_ARADDR <= gmem_addr_5_reg_1409;
            elsif ((ap_const_boolean_1 = ap_condition_1091)) then 
                gmem_ARADDR <= gmem_addr_3_reg_1392;
            elsif ((ap_const_boolean_1 = ap_condition_1050)) then 
                gmem_ARADDR <= gmem_addr_1_reg_1365;
            else 
                gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state116, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter7, exitcond_flatten_reg_1310_pp0_iter7_reg, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_reg_ioackin_gmem_ARREADY, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage7_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage2_01001)
    begin
        if ((((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001)) or ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state116)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(gmem_addr_2_reg_1371, gmem_addr_4_reg_1398, gmem_addr_6_reg_1445, gmem_addr_8_reg_1456, gmem_addr_10_reg_1467, gmem_addr_12_reg_1478, gmem_addr_14_reg_1489, gmem_addr_16_reg_1495_pp0_iter12_reg, ap_reg_ioackin_gmem_AWREADY, ap_condition_1068, ap_condition_1108, ap_condition_1148, ap_condition_1188, ap_condition_1218, ap_condition_1248, ap_condition_1278, ap_condition_1308)
    begin
        if ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0)) then
            if ((ap_const_boolean_1 = ap_condition_1308)) then 
                gmem_AWADDR <= gmem_addr_16_reg_1495_pp0_iter12_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1278)) then 
                gmem_AWADDR <= gmem_addr_14_reg_1489;
            elsif ((ap_const_boolean_1 = ap_condition_1248)) then 
                gmem_AWADDR <= gmem_addr_12_reg_1478;
            elsif ((ap_const_boolean_1 = ap_condition_1218)) then 
                gmem_AWADDR <= gmem_addr_10_reg_1467;
            elsif ((ap_const_boolean_1 = ap_condition_1188)) then 
                gmem_AWADDR <= gmem_addr_8_reg_1456;
            elsif ((ap_const_boolean_1 = ap_condition_1148)) then 
                gmem_AWADDR <= gmem_addr_6_reg_1445;
            elsif ((ap_const_boolean_1 = ap_condition_1108)) then 
                gmem_AWADDR <= gmem_addr_4_reg_1398;
            elsif ((ap_const_boolean_1 = ap_condition_1068)) then 
                gmem_AWADDR <= gmem_addr_2_reg_1371;
            else 
                gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage1, exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, ap_block_pp0_stage1_01001, ap_reg_ioackin_gmem_AWREADY, ap_block_pp0_stage0_01001, ap_block_pp0_stage7_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage2_01001)
    begin
        if ((((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001)))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_CS_fsm_pp0_stage3, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_enable_reg_pp0_iter14, exitcond_flatten_reg_1310_pp0_iter14_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter14_reg = ap_const_lv1_0)))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state123, ap_CS_fsm_pp0_stage1, exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, gmem_RVALID, ap_block_pp0_stage0_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state123)))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WDATA_assign_proc : process(gmem_addr_1_read_reg_1387, gmem_addr_3_read_reg_1404, gmem_addr_5_read_reg_1451, gmem_addr_7_read_reg_1462, gmem_addr_9_read_reg_1473, gmem_addr_11_read_reg_1484, gmem_addr_13_read_reg_1501, gmem_addr_15_read_reg_1506, ap_reg_ioackin_gmem_WREADY, ap_condition_1078, ap_condition_1117, ap_condition_1157, ap_condition_1197, ap_condition_1227, ap_condition_1257, ap_condition_1287, ap_condition_1317)
    begin
        if ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0)) then
            if ((ap_const_boolean_1 = ap_condition_1317)) then 
                gmem_WDATA <= gmem_addr_15_read_reg_1506;
            elsif ((ap_const_boolean_1 = ap_condition_1287)) then 
                gmem_WDATA <= gmem_addr_13_read_reg_1501;
            elsif ((ap_const_boolean_1 = ap_condition_1257)) then 
                gmem_WDATA <= gmem_addr_11_read_reg_1484;
            elsif ((ap_const_boolean_1 = ap_condition_1227)) then 
                gmem_WDATA <= gmem_addr_9_read_reg_1473;
            elsif ((ap_const_boolean_1 = ap_condition_1197)) then 
                gmem_WDATA <= gmem_addr_7_read_reg_1462;
            elsif ((ap_const_boolean_1 = ap_condition_1157)) then 
                gmem_WDATA <= gmem_addr_5_read_reg_1451;
            elsif ((ap_const_boolean_1 = ap_condition_1117)) then 
                gmem_WDATA <= gmem_addr_3_read_reg_1404;
            elsif ((ap_const_boolean_1 = ap_condition_1078)) then 
                gmem_WDATA <= gmem_addr_1_read_reg_1387;
            else 
                gmem_WDATA <= "XXXXXXXX";
            end if;
        else 
            gmem_WDATA <= "XXXXXXXX";
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001, ap_reg_ioackin_gmem_WREADY, ap_block_pp0_stage7_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage2_01001)
    begin
        if ((((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001)))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state116, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter3, ap_block_pp0_stage4, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, ap_block_pp0_stage2, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter7, exitcond_flatten_reg_1310_pp0_iter7_reg, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state116) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter3, ap_block_pp0_stage4, exitcond_flatten_reg_1310_pp0_iter3_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, ap_block_pp0_stage2, exitcond_flatten_reg_1310_pp0_iter5_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter10, exitcond_flatten_reg_1310_pp0_iter10_reg, ap_enable_reg_pp0_iter12, exitcond_flatten_reg_1310_pp0_iter12_reg, ap_enable_reg_pp0_iter14, exitcond_flatten_reg_1310_pp0_iter14_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter10_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state123, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_flatten_reg_1310, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, ap_enable_reg_pp0_iter9, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1310_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1310_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1310_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter6, exitcond_flatten_reg_1310_pp0_iter6_reg, ap_enable_reg_pp0_iter8, exitcond_flatten_reg_1310_pp0_iter8_reg, exitcond_flatten_reg_1310_pp0_iter9_reg, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, exitcond_flatten_reg_1310_pp0_iter11_reg, ap_enable_reg_pp0_iter13, exitcond_flatten_reg_1310_pp0_iter13_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1310_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1310_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1310_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_1310_pp0_iter13_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond_flatten_reg_1310_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten_reg_1310_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_1310_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1310_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

        grp_fu_446_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(gmem_addr_read_reg_1511),32));

        image_src2_sum1_cast_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum1_fu_913_p2),64));

    image_src2_sum1_fu_913_p2 <= std_logic_vector(unsigned(tmp_6_3_cast_fu_909_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum2_cast_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum2_fu_964_p2),64));

    image_src2_sum2_fu_964_p2 <= std_logic_vector(unsigned(tmp_6_4_cast_fu_960_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum3_cast_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum3_fu_1015_p2),64));

    image_src2_sum3_fu_1015_p2 <= std_logic_vector(unsigned(tmp_6_5_cast_fu_1011_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum4_cast_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum4_fu_1066_p2),64));

    image_src2_sum4_fu_1066_p2 <= std_logic_vector(unsigned(tmp_6_6_cast_fu_1062_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum5_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum5_fu_1117_p2),64));

    image_src2_sum5_fu_1117_p2 <= std_logic_vector(unsigned(tmp_6_7_cast_fu_1113_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum7_cast_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum7_fu_730_p2),64));

    image_src2_sum7_fu_730_p2 <= std_logic_vector(unsigned(tmp_6_1_cast_fu_726_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum9_cast_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum9_fu_862_p2),64));

    image_src2_sum9_fu_862_p2 <= std_logic_vector(unsigned(tmp_6_2_cast_fu_858_p1) + unsigned(tmp_1_cast_reg_1292));
        image_src2_sum_cast_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(image_src2_sum_fu_643_p2),64));

    image_src2_sum_fu_643_p2 <= std_logic_vector(unsigned(tmp_6_cast_fu_639_p1) + unsigned(tmp_1_cast_reg_1292));
    indvar_flatten_next_fu_499_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_384_p4) + unsigned(ap_const_lv10_1));
    indvars_iv_mid2_fu_579_p3 <= 
        indvars_iv_next_dup_fu_573_p2 when (exitcond_fu_505_p2(0) = '1') else 
        ap_phi_mux_indvars_iv_phi_fu_395_p4;
    indvars_iv_next_dup_fu_573_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvars_iv_phi_fu_395_p4) + unsigned(ap_const_lv13_48));
    p_shl1_cast_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_475_p3),20));
    p_shl1_cast_mid1_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_mid1_fu_547_p3),20));
    p_shl1_fu_475_p3 <= (ap_phi_mux_step_img_x_phi_fu_406_p4 & ap_const_lv8_0);
    p_shl1_mid1_fu_547_p3 <= (step_img_x_s_fu_533_p2 & ap_const_lv8_0);
    p_shl2_1_cast_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_1_fu_704_p3),23));
    p_shl2_1_fu_704_p3 <= (pixel_index_1_fu_695_p2 & ap_const_lv2_0);
    p_shl2_2_cast_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_2_fu_836_p3),24));
    p_shl2_2_fu_836_p3 <= (pixel_index_2_fu_826_p2 & ap_const_lv2_0);
    p_shl2_3_cast_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_3_fu_887_p3),24));
    p_shl2_3_fu_887_p3 <= (pixel_index_3_fu_877_p2 & ap_const_lv2_0);
    p_shl2_4_cast_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_4_fu_938_p3),24));
    p_shl2_4_fu_938_p3 <= (pixel_index_4_fu_928_p2 & ap_const_lv2_0);
    p_shl2_5_cast_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_5_fu_989_p3),24));
    p_shl2_5_fu_989_p3 <= (pixel_index_5_fu_979_p2 & ap_const_lv2_0);
    p_shl2_6_cast_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_6_fu_1040_p3),24));
    p_shl2_6_fu_1040_p3 <= (pixel_index_6_fu_1030_p2 & ap_const_lv2_0);
    p_shl2_7_cast_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_7_fu_1091_p3),24));
    p_shl2_7_fu_1091_p3 <= (pixel_index_7_fu_1081_p2 & ap_const_lv2_0);
    p_shl2_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_617_p3),23));
    p_shl2_fu_617_p3 <= (pixel_index_fu_607_p2 & ap_const_lv2_0);
    p_shl_fu_467_p3 <= (ap_phi_mux_step_img_x_phi_fu_406_p4 & ap_const_lv10_0);
    p_shl_mid1_fu_539_p3 <= (step_img_x_s_fu_533_p2 & ap_const_lv10_0);
    pixel_index_1_cast1_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_1_fu_695_p2),23));
    pixel_index_1_fu_695_p2 <= std_logic_vector(unsigned(tmp_2_mid2_reg_1339_pp0_iter1_reg) + unsigned(step_img_y_1_cast_fu_691_p1));
    pixel_index_2_cast1_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_2_fu_826_p2),24));
    pixel_index_2_fu_826_p2 <= std_logic_vector(unsigned(tmp17_cast_mid2_fu_774_p1) + unsigned(step_img_y_cast1_fu_823_p1));
    pixel_index_3_cast1_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_3_fu_877_p2),24));
    pixel_index_3_fu_877_p2 <= std_logic_vector(unsigned(tmp28_cast_mid2_fu_783_p1) + unsigned(step_img_y_cast1_fu_823_p1));
    pixel_index_4_cast1_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_4_fu_928_p2),24));
    pixel_index_4_fu_928_p2 <= std_logic_vector(unsigned(tmp39_cast_mid2_fu_792_p1) + unsigned(step_img_y_cast1_fu_823_p1));
    pixel_index_5_cast1_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_5_fu_979_p2),24));
    pixel_index_5_fu_979_p2 <= std_logic_vector(unsigned(tmp410_cast_mid2_fu_801_p1) + unsigned(step_img_y_cast1_fu_823_p1));
    pixel_index_6_cast1_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_6_fu_1030_p2),24));
    pixel_index_6_fu_1030_p2 <= std_logic_vector(unsigned(tmp511_cast_mid2_fu_810_p1) + unsigned(step_img_y_cast1_fu_823_p1));
    pixel_index_7_cast1_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_7_fu_1081_p2),24));
    pixel_index_7_fu_1081_p2 <= std_logic_vector(unsigned(tmp612_cast_mid2_fu_819_p1) + unsigned(step_img_y_cast1_fu_823_p1));
    pixel_index_cast1_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixel_index_fu_607_p2),23));
    pixel_index_fu_607_p2 <= std_logic_vector(unsigned(tmp_2_mid2_fu_565_p3) + unsigned(step_img_y_cast_fu_603_p1));
    small_pic_dst4_sum1_fu_1141_p2 <= std_logic_vector(unsigned(tmp_7_2_cast_fu_1137_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum1_s_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum1_fu_1141_p2),64));

    small_pic_dst4_sum2_fu_1165_p2 <= std_logic_vector(unsigned(tmp_7_3_cast_fu_1161_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum2_s_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum2_fu_1165_p2),64));

    small_pic_dst4_sum3_fu_1189_p2 <= std_logic_vector(unsigned(tmp_7_4_cast_fu_1185_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum3_s_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum3_fu_1189_p2),64));

    small_pic_dst4_sum4_fu_1213_p2 <= std_logic_vector(unsigned(tmp_7_5_cast_fu_1209_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum4_s_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum4_fu_1213_p2),64));

    small_pic_dst4_sum5_fu_1237_p2 <= std_logic_vector(unsigned(tmp_7_6_cast_fu_1233_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum5_s_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum5_fu_1237_p2),64));

    small_pic_dst4_sum6_fu_1261_p2 <= std_logic_vector(unsigned(tmp_7_7_cast_fu_1257_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum6_s_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum6_fu_1261_p2),64));

    small_pic_dst4_sum8_fu_754_p2 <= std_logic_vector(unsigned(tmp_7_1_cast_fu_750_p1) + unsigned(tmp_cast_reg_1280));
        small_pic_dst4_sum8_s_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum8_fu_754_p2),64));

        small_pic_dst4_sum_c_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst4_sum_fu_661_p2),64));

    small_pic_dst4_sum_fu_661_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_658_p1) + unsigned(tmp_cast_reg_1280));
    small_target_index_1_fu_519_p2 <= std_logic_vector(unsigned(ap_phi_mux_small_target_index_phi_fu_417_p4) + unsigned(ap_const_lv13_48));
    small_target_index_m_fu_595_p3 <= 
        small_target_index_1_fu_519_p2 when (exitcond_fu_505_p2(0) = '1') else 
        ap_phi_mux_small_target_index_phi_fu_417_p4;
    small_target_index_s_2_fu_525_p3 <= 
        small_target_index_1_fu_519_p2 when (exitcond_fu_505_p2(0) = '1') else 
        ap_phi_mux_small_target_index_s_phi_fu_439_p4;
    step_img_x_mid2_fu_587_p3 <= 
        step_img_x_s_fu_533_p2 when (exitcond_fu_505_p2(0) = '1') else 
        ap_phi_mux_step_img_x_phi_fu_406_p4;
    step_img_x_s_fu_533_p2 <= std_logic_vector(unsigned(ap_phi_mux_step_img_x_phi_fu_406_p4) + unsigned(ap_const_lv10_A));
    step_img_y_1_7_fu_681_p2 <= std_logic_vector(unsigned(step_img_y_mid2_reg_1319) + unsigned(ap_const_lv10_50));
    step_img_y_1_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(step_img_y_1_s_fu_686_p2),20));
    step_img_y_1_s_fu_686_p2 <= (step_img_y_mid2_reg_1319_pp0_iter1_reg or ap_const_lv10_A);
    step_img_y_cast1_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(step_img_y_mid2_reg_1319_pp0_iter3_reg),21));
    step_img_y_cast_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(step_img_y_mid2_fu_511_p3),20));
    step_img_y_mid2_fu_511_p3 <= 
        ap_const_lv10_0 when (exitcond_fu_505_p2(0) = '1') else 
        ap_phi_mux_step_img_y_phi_fu_428_p4;
    tmp17_cast_mid2_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp17_cast_mid2_v_fu_769_p2),21));
    tmp17_cast_mid2_v_fu_769_p2 <= (tmp_2_mid2_reg_1339_pp0_iter3_reg or ap_const_lv20_14);
    tmp28_cast_mid2_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp28_cast_mid2_v_fu_778_p2),21));
    tmp28_cast_mid2_v_fu_778_p2 <= (tmp_2_mid2_reg_1339_pp0_iter3_reg or ap_const_lv20_1E);
    tmp39_cast_mid2_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp39_cast_mid2_v_fu_787_p2),21));
    tmp39_cast_mid2_v_fu_787_p2 <= (tmp_2_mid2_reg_1339_pp0_iter3_reg or ap_const_lv20_28);
    tmp410_cast_mid2_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp410_cast_mid2_v_fu_796_p2),21));
    tmp410_cast_mid2_v_fu_796_p2 <= (tmp_2_mid2_reg_1339_pp0_iter3_reg or ap_const_lv20_32);
    tmp511_cast_mid2_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp511_cast_mid2_v_fu_805_p2),21));
    tmp511_cast_mid2_v_fu_805_p2 <= (tmp_2_mid2_reg_1339_pp0_iter3_reg or ap_const_lv20_3C);
    tmp612_cast_mid2_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp612_cast_mid2_v_fu_814_p2),21));
    tmp612_cast_mid2_v_fu_814_p2 <= (tmp_2_mid2_reg_1339_pp0_iter3_reg or ap_const_lv20_46);
    tmp_1_cast_fu_457_p0 <= image_src;
        tmp_1_cast_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_cast_fu_457_p0),34));

    tmp_1_fu_453_p0 <= image_src;
        tmp_1_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_453_p0),64));

    tmp_2_fu_487_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_483_p1) + unsigned(p_shl_fu_467_p3));
    tmp_2_mid1_fu_559_p2 <= std_logic_vector(unsigned(p_shl_mid1_fu_539_p3) + unsigned(p_shl1_cast_mid1_fu_555_p1));
    tmp_2_mid2_fu_565_p3 <= 
        tmp_2_mid1_fu_559_p2 when (exitcond_fu_505_p2(0) = '1') else 
        tmp_2_fu_487_p2;
        tmp_5_1_cast_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_1_fu_716_p2),32));

    tmp_5_1_fu_716_p2 <= std_logic_vector(unsigned(p_shl2_1_cast_fu_712_p1) - unsigned(pixel_index_1_cast1_fu_700_p1));
        tmp_5_2_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_2_fu_848_p2),32));

    tmp_5_2_fu_848_p2 <= std_logic_vector(unsigned(p_shl2_2_cast_fu_844_p1) - unsigned(pixel_index_2_cast1_fu_832_p1));
        tmp_5_3_cast_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_3_fu_899_p2),32));

    tmp_5_3_fu_899_p2 <= std_logic_vector(unsigned(p_shl2_3_cast_fu_895_p1) - unsigned(pixel_index_3_cast1_fu_883_p1));
        tmp_5_4_cast_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_4_fu_950_p2),32));

    tmp_5_4_fu_950_p2 <= std_logic_vector(unsigned(p_shl2_4_cast_fu_946_p1) - unsigned(pixel_index_4_cast1_fu_934_p1));
        tmp_5_5_cast_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_5_fu_1001_p2),32));

    tmp_5_5_fu_1001_p2 <= std_logic_vector(unsigned(p_shl2_5_cast_fu_997_p1) - unsigned(pixel_index_5_cast1_fu_985_p1));
        tmp_5_6_cast_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_6_fu_1052_p2),32));

    tmp_5_6_fu_1052_p2 <= std_logic_vector(unsigned(p_shl2_6_cast_fu_1048_p1) - unsigned(pixel_index_6_cast1_fu_1036_p1));
        tmp_5_7_cast_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_7_fu_1103_p2),32));

    tmp_5_7_fu_1103_p2 <= std_logic_vector(unsigned(p_shl2_7_cast_fu_1099_p1) - unsigned(pixel_index_7_cast1_fu_1087_p1));
        tmp_5_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_629_p2),32));

    tmp_5_fu_629_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_625_p1) - unsigned(pixel_index_cast1_fu_613_p1));
    tmp_6_1_cast_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_1_cast_fu_722_p1),34));
    tmp_6_2_cast_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_2_cast_fu_854_p1),34));
    tmp_6_3_cast_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_3_cast_fu_905_p1),34));
    tmp_6_4_cast_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_4_cast_fu_956_p1),34));
    tmp_6_5_cast_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_5_cast_fu_1007_p1),34));
    tmp_6_6_cast_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_6_cast_fu_1058_p1),34));
    tmp_6_7_cast_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_7_cast_fu_1109_p1),34));
    tmp_6_cast_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_cast_fu_635_p1),34));
    tmp_7_1_cast_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_s_fu_745_p2),33));
    tmp_7_2_cast_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_1_fu_1132_p2),33));
    tmp_7_3_cast_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_2_fu_1156_p2),33));
    tmp_7_4_cast_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_3_fu_1180_p2),33));
    tmp_7_5_cast_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_4_fu_1204_p2),33));
    tmp_7_6_cast_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_5_fu_1228_p2),33));
    tmp_7_7_cast_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_6_fu_1252_p2),33));
    tmp_7_cast_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(small_target_index_s_2_reg_1326),33));
    tmp_8_1_fu_1132_p2 <= (small_target_index_s_2_reg_1326_pp0_iter4_reg or ap_const_lv13_2);
    tmp_8_2_fu_1156_p2 <= (small_target_index_s_2_reg_1326_pp0_iter6_reg or ap_const_lv13_3);
    tmp_8_3_fu_1180_p2 <= (small_target_index_s_2_reg_1326_pp0_iter7_reg or ap_const_lv13_4);
    tmp_8_4_fu_1204_p2 <= (small_target_index_s_2_reg_1326_pp0_iter9_reg or ap_const_lv13_5);
    tmp_8_5_fu_1228_p2 <= (small_target_index_s_2_reg_1326_pp0_iter11_reg or ap_const_lv13_6);
    tmp_8_6_fu_1252_p2 <= (small_target_index_s_2_reg_1326_pp0_iter11_reg or ap_const_lv13_7);
    tmp_8_7_fu_676_p2 <= std_logic_vector(unsigned(small_target_index_s_2_reg_1326) + unsigned(ap_const_lv13_8));
    tmp_8_s_fu_745_p2 <= (small_target_index_s_2_reg_1326_pp0_iter2_reg or ap_const_lv13_1);
        tmp_cast_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(small_pic_dst),33));

end behav;
